/**
  * Created by Riy
  * WhatsApp wa.me/6281575886399
  * Follow me on Instagram @riycoders
*/

"use strict";
const {
	downloadContentFromMessage,
	generateWAMessageFromContent
} = require("@whiskeysockets/baileys")
const { color, bgcolor } = require('../lib/color')
const { generateProfilePicture, getBuffer, fetchJson, fetchText, getRandom, getGroupAdmins, runtime, sleep, makeid } = require("../lib/myfunc");
const { webp2mp4File } = require("../lib/convert")
const { pinterest } = require("../lib/pinterest")
const { isLimit, limitAdd, getLimit, giveLimit, addBalance, kurangBalance, getBalance, isGame, gameAdd, givegame, cekGLimit } = require("../lib/limit");
const { addPlayGame, getJawabanGame, isPlayGame, cekWaktuGame, getGamePosi } = require("../lib/game");
const { isTicTacToe, getPosTic } = require("../lib/tictactoe");
const tictac = require("../lib/tictac");
const _prem = require("../lib/premium");
const { genMath, modes } = require("../lib/math");

const fs = require ("fs");
const moment = require("moment-timezone");
const util = require("util");
const { exec, spawn } = require("child_process");
const ffmpeg = require("fluent-ffmpeg");
const fetch = require("node-fetch");
const axios = require("axios");
const speed = require("performance-now");
const request = require("request");
const ms = require("parse-ms");

const caliph = require("caliph-api");
const dylux = require("api-dylux");
const rc = require("rc-scraper");

// Exif
const Exif = require("../lib/exif")
const exif = new Exif()

// DB Game
let tebaklagu = [];
let family100 = [];
let kuis = [];
let math = [];
let tictactoe = [];
let casino = [];

// Database
let pendaftar = JSON.parse(fs.readFileSync('./database/user.json'))
let mess = JSON.parse(fs.readFileSync('./message/response.json'));
let premium = JSON.parse(fs.readFileSync('./database/premium.json'));
let balance = JSON.parse(fs.readFileSync('./database/balance.json'));
let limit = JSON.parse(fs.readFileSync('./database/limit.json'));
let glimit = JSON.parse(fs.readFileSync('./database/glimit.json'));
let anonymous = JSON.parse(fs.readFileSync('./database/anonymous.json'));
let secreto = JSON.parse(fs.readFileSync('./database/secreto_balas.json'));
let listvn = JSON.parse(fs.readFileSync('./database/list_vn.json'));

moment.tz.setDefault("Asia/Jakarta").locale("id");

module.exports = async(conn, msg, m, setting, store, welcome) => {
	try {
		let { ownerNumber, botName, packname, author, pathimg, apikey, hmm, gamewaktu, limitCount } = setting
		let { allmenu } = require('./help')
		if (msg.mentioned && msg.mentioned.includes('')) { Object.keys(msg.mentioned).forEach((i) => { if (msg.mentioned[i] == '') { msg.mentioned.splice(i, 1) } }) }
		const { type, isQuotedMsg, quotedMsg, now, fromMe, mentioned, isBaileys } = msg
		if (isBaileys) return
		const jam = moment.tz('asia/jakarta').format('HH:mm:ss')
		let dt = moment(Date.now()).tz('Asia/Jakarta').locale('id').format('a')
		const ucapanWaktu = "Selamat "+dt.charAt(0).toUpperCase() + dt.slice(1)
		const content = JSON.stringify(msg.message)
		const from = msg.key.remoteJid
		const chats = (type === 'conversation' && msg.message.conversation) ? msg.message.conversation : (type === 'imageMessage') && msg.message.imageMessage.caption ? msg.message.imageMessage.caption : (type === 'videoMessage') && msg.message.videoMessage.caption ? msg.message.videoMessage.caption : (type === 'extendedTextMessage') && msg.message.extendedTextMessage.text ? msg.message.extendedTextMessage.text : (type === 'buttonsResponseMessage') && quotedMsg.fromMe && msg.message.buttonsResponseMessage.selectedButtonId ? msg.message.buttonsResponseMessage.selectedButtonId : (type === 'templateButtonReplyMessage') && quotedMsg.fromMe && msg.message.templateButtonReplyMessage.selectedId ? msg.message.templateButtonReplyMessage.selectedId : (type === 'messageContextInfo') ? (msg.message.buttonsResponseMessage?.selectedButtonId || msg.message.listResponseMessage?.singleSelectReply.selectedRowId) : (type == 'listResponseMessage') && quotedMsg.fromMe && msg.message.listResponseMessage.singleSelectReply.selectedRowId ? msg.message.listResponseMessage.singleSelectReply.selectedRowId : ""
        const toJSON = j => JSON.stringify(j, null,'\t')
        

		if (conn.multi) {
			var prefix = /^[°•π÷×¶∆£¢€¥®™✓_=|~!?#$%^&.+-,\/\\©^]/.test(chats) ? chats.match(/^[°•π÷×¶∆£¢€¥®™✓_=|~!?#$%^&.+-,\/\\©^]/gi) : '#'
		} else {
			if (conn.nopref) {
				prefix = ''
			} else {
				prefix = conn.prefa
			}
		}

		const args = chats.split(' ')
		const command = chats.toLowerCase().split(' ')[0] || ''
		const isCmd = command.startsWith(prefix)
		const isGroup = msg.key.remoteJid.endsWith('@g.us')
		const sender = isGroup ? (msg.key.participant ? msg.key.participant : msg.participant) : msg.key.remoteJid
		const isOwner = conn.user.id.split(':')[0] + '@s.whatsapp.net' ? true : ownerNumber.includes(sender) ? true : false
		const pushname = msg.pushName
		const q = chats.slice(command.length + 1, chats.length)
		const body = chats.startsWith(prefix) ? chats : ''
		const botNumber = conn.user.id.split(':')[0] + '@s.whatsapp.net'
		const groupMetadata = isGroup ? await conn.groupMetadata(from) : ''
		const groupName = isGroup ? groupMetadata.subject : ''
		const groupId = isGroup ? groupMetadata.id : ''
		const groupMembers = isGroup ? groupMetadata.participants : ''
		const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''
		const isBotGroupAdmins = groupAdmins.includes(botNumber) || false
		const isGroupAdmins = groupAdmins.includes(sender)
		const isUser = pendaftar.includes(sender)
		const isPremium = isOwner ? true : _prem.checkPremiumUser(sender, premium)
        const isWelcome = isGroup ? welcome.includes(from) ? true : false : false

		const gcounti = setting.gcount
		const gcount = isPremium ? gcounti.prem : gcounti.user

		const mentionByTag = type == "extendedTextMessage" && msg.message.extendedTextMessage.contextInfo != null ? msg.message.extendedTextMessage.contextInfo.mentionedJid : []
        const mentionByReply = type == "extendedTextMessage" && msg.message.extendedTextMessage.contextInfo != null ? msg.message.extendedTextMessage.contextInfo.participant || "" : ""
        const mention = typeof(mentionByTag) == 'string' ? [mentionByTag] : mentionByTag
        mention != undefined ? mention.push(mentionByReply) : []
        const mentionUser = mention != undefined ? mention.filter(n => n) : []
		
		async function downloadAndSaveMediaMessage (msg, type_file, path_file) {
           if (type_file === 'image') {
             var stream = await downloadContentFromMessage(msg.message.imageMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.imageMessage, 'image')
             let buffer = Buffer.from([])
             for await(const chunk of stream) {
               buffer = Buffer.concat([buffer, chunk])
             }
             fs.writeFileSync(path_file, buffer)
             return path_file
           } else if (type_file === 'video') {
             var stream = await downloadContentFromMessage(msg.message.videoMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.videoMessage, 'video')
             let buffer = Buffer.from([])
             for await(const chunk of stream) {
               buffer = Buffer.concat([buffer, chunk])
             }
             fs.writeFileSync(path_file, buffer)
             return path_file
           } else if (type_file === 'sticker') {
             var stream = await downloadContentFromMessage(msg.message.stickerMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.stickerMessage, 'sticker')
             let buffer = Buffer.from([])
             for await(const chunk of stream) {
               buffer = Buffer.concat([buffer, chunk])
             }
             fs.writeFileSync(path_file, buffer)
             return path_file
           } else if (type_file === 'audio') {
             var stream = await downloadContentFromMessage(msg.message.audioMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.audioMessage, 'audio')
             let buffer = Buffer.from([])
             for await(const chunk of stream) {
               buffer = Buffer.concat([buffer, chunk])
             }
             fs.writeFileSync(path_file, buffer)
             return path_file
           }
        }
		const sendFileFromUrl = async (from, url, caption, options = {}) => {
		    let mime = '';
		    let res = await axios.head(url)
		    mime = res.headerd["content-type"]
		    let type = mime.split("/")[0]+"Message"
		    if (mime.split("/")[0] === "image") {
		       var img = await getBuffer(url)
		       return conn.sendMessage(from, { image: img, caption: caption }, options)
		    } else if (mime.split("/")[0] === "video") {
		       var vid = await getBuffer(url)
		       return conn.sendMessage(from, { video: vid, caption: caption }, options)
		    } else if (mime.split("/")[0] === "audio") {
		       var aud = await getBuffer(url)
		       return conn.sendMessage(from, { audio: aud, mimetype: 'audio/mp3' }, options)
		    } else {
		       var doc = await getBuffer(url)
		       return conn.sendMessage(from, { document: doc, mimetype: mime, caption: caption }, options)
		    }
		}
		const isUrl = (url) => {
			return url.match(new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/, 'gi'))
        }
		const isEmoji = (emo) => {
            let emoji_ranges = /(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[\u0023-\u0039]\ufe0f?\u20e3|\u3299|\u3297|\u303d|\u3030|\u24c2|\ud83c[\udd70-\udd71]|\ud83c[\udd7e-\udd7f]|\ud83c\udd8e|\ud83c[\udd91-\udd9a]|\ud83c[\udde6-\uddff]|\ud83c[\ude01-\ude02]|\ud83c\ude1a|\ud83c\ude2f|\ud83c[\ude32-\ude3a]|\ud83c[\ude50-\ude51]|\u203c|\u2049|[\u25aa-\u25ab]|\u25b6|\u25c0|[\u25fb-\u25fe]|\u00a9|\u00ae|\u2122|\u2139|\ud83c\udc04|[\u2600-\u26FF]|\u2b05|\u2b06|\u2b07|\u2b1b|\u2b1c|\u2b50|\u2b55|\u231a|\u231b|\u2328|\u23cf|[\u23e9-\u23f3]|[\u23f8-\u23fa]|\ud83c\udccf|\u2934|\u2935|[\u2190-\u21ff])/g;
            let regexEmoji = new RegExp(emoji_ranges, 'gi');
            return emo.match(regexEmoji)
        }
		function jsonformat(string) {
            return JSON.stringify(string, null, 2)
        }
		function monospace(string) {
            return '```' + string + '```'
        }
		function randomNomor(min, max = null) {
		  if (max !== null) {
			min = Math.ceil(min);
			max = Math.floor(max);
			return Math.floor(Math.random() * (max - min + 1)) + min;
		  } else {
			return Math.floor(Math.random() * min) + 1
		  }
		}
		const pickRandom = (arr) => {
			return arr[Math.floor(Math.random() * arr.length)]
		}
		function mentions(teks, mems = [], id) {
			if (id == null || id == undefined || id == false) {
			  let res = conn.sendMessage(from, { text: teks, mentions: mems })
			  return res
			} else {
		      let res = conn.sendMessage(from, { text: teks, mentions: mems }, { quoted: msg })
		      return res
 		    }
		}
		const nebal = (angka) => {
            return Math.floor(angka)
        }
		function parseMention(text = '') {
            return [...text.matchAll(/@([0-9]{5,16}|0)/g)].map(v => v[1] + '@s.whatsapp.net')
       }
       const reply = (teks) => {
         return conn.sendMessage(from, {
           text: teks, contextInfo: {
             externalAdReply: {
               title: botName,
               body: `Bot WhatsApp`,
               mediaType: 289,
               thumbnail: fs.readFileSync(pathimg),
               sourceUrl: hmm.ig
               }
             }
           }, { quoted: msg })
        }
		const sendMess = (hehe, teks) => {
			conn.sendMessage(hehe, { text, teks })
		}
		async function sendStickerFromUrl(from, url, packname1 = packname, author1 = author, options = {}) {
            var names = Date.now() / 10000;
            var download = function (uri, filename, callback) {
                request.head(uri, function (err, res, body) {
                    request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
                });
            };
            exif.create(packname1, author1, `sendstc_${names}`)
            download(url, './sticker/' + names + '.png', async function () {
                let filess = './sticker/' + names + '.png'
                let asw = './sticker/' + names + '.webp'
                exec(`ffmpeg -i ${filess} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${asw}`, async (err) => {
                    exec(`webpmux -set exif ./sticker/sendstc_${names}.exif ${asw} -o ${asw}`, async (error) => {
                        conn.sendMessage(from, { sticker: fs.readFileSync(asw) }, options)
                        fs.unlinkSync(filess)
                        fs.unlinkSync(asw)
                        fs.unlinkSync(`./sticker/sendstc_${names}.exif`)
                    })
                })
            })
        }

		const isImage = (type == 'imageMessage')
		const isVideo = (type == 'videoMessage')
		const isSticker = (type == 'stickerMessage')
		const isQuotedImage = isQuotedMsg ? content.includes('imageMessage') ? true : false : false
		const isQuotedAudio = isQuotedMsg ? content.includes('audioMessage') ? true : false : false
		const isQuotedDocument = isQuotedMsg ? content.includes('documentMessage') ? true : false : false
		const isQuotedVideo = isQuotedMsg ? content.includes('videoMessage') ? true : false : false
		const isQuotedSticker = isQuotedMsg ? content.includes('stickerMessage') ? true : false : false

		// Auto Read & Presence Online
		if (conn.mode === 'self'){
            if (!fromMe && !isOwner) return
            if (fromMe && isBaileys) return
        }

		// Auto Registrasi
		if (isCmd && !isUser) {
		  pendaftar.push(sender)
		  fs.writeFileSync('./database/user.json', JSON.stringify(pendaftar, null, 2))
		}
		
		// Premium
		_prem.expiredCheck(conn, premium)
		
		// Tictactoe
        if (isTicTacToe(from, tictactoe)) tictac(chats, prefix, tictactoe, from, sender, reply, mentions, addBalance, balance)
        
                // Function for Casino
                const isPlayCasino = (from, casino) => {
                   var status = false
                   Object.keys(casino).forEach((i) => {
                     if (casino[i].session == from) {
                       status = true
                     }
                   })
                   return status
                }
                const getCasino = (from, casino) => {
                   var posi = null
                   Object.keys(casino).forEach((i) => {
                     if (casino[i].session == from) {
                       posi = i
                     }
                   })
                   return posi
                }
                const setCasino = (chatId, player1, player2, nominal, _db) => {
                 if (!isPlayCasino(chatId, _db)) {
                   var obj = {
                      status: true,
                      session: chatId,
                      turn: 'Z',
                      Z: player1,
                      Y: player2,
                      nominal: nominal,
                      expired: setTimeout(() => {
                        var teksc = `Waktu casino habis, tidak ada jawaban dari @${player2.split("@")[0]}`
                        conn.sendMessage(chatId, { text: teksc, mentions: [player2+'@s.whatsapp.net'] })
                        _db.splice(getCasino(chatId, _db), 1)
                      }, 30000)
                    }
                    _db.push(obj)
                 }
                }
                const deleteCasino = (from, _db) => {
                   if (isPlayCasino(from, _db)) {
                     _db.splice(getCasino(from, _db), 1)
                     return true
                   } else {
                     return false
                   }
                }
                const sesiCasino = (from, casino) => {
                   return casino[getCasino(from, casino)]
                }
                
           // function for Menfess
          function getMenfessPosi(org, _db) {
          let position = null
          Object.keys(_db).forEach((i) => {
            if (_db[i].sender == org) {
            position = i
            }
          })
          if (position !== null) {
            return position
          }
        }
        
        // write for anonymous
        setInterval(async () => {
            fs.writeFileSync('./database/anonymous.json', JSON.stringify(anonymous, null, 2))
        }, 30 * 1000)
        
        // cek cmd for anonymous
        var cekForAnon = isCmd && args[0].length > 1
                
        // xixixi
        function _0x48aa6b(_0x459f71,_0xa8ac30,_0x55779e,_0x203a85,_0x209d2c){return _0x5222(_0x55779e- -0x7d,_0xa8ac30);}function _0x4d4328(_0x57cce6,_0x18c39d,_0x414a96,_0x2d3d40,_0xa09ed3){return _0x5222(_0xa09ed3- -0x2ad,_0x2d3d40);}(function(_0x271b07,_0x53fe8f){function _0x435bd6(_0x200025,_0xec2eca,_0xc71d25,_0x2ade54,_0x4c1893){return _0x5222(_0xec2eca-0x16,_0x4c1893);}function _0x5083ad(_0x1fdffe,_0x3b7c2a,_0x12d1b0,_0x1d4e9e,_0x399417){return _0x5222(_0x12d1b0- -0x1dc,_0x1d4e9e);}var _0x43f86c=_0x271b07();function _0x237610(_0x4f729f,_0x6d6b23,_0x4adebc,_0x57c06a,_0x2568ff){return _0x5222(_0x2568ff- -0x1bc,_0x57c06a);}function _0x3e133f(_0x541097,_0x28cf3d,_0x29ba96,_0x34d875,_0x4570b3){return _0x5222(_0x541097- -0xf2,_0x29ba96);}function _0x2a0737(_0x36e0f1,_0x293eff,_0x1d1fc0,_0x3c9334,_0x367248){return _0x5222(_0x3c9334-0x37,_0x36e0f1);}while(!![]){try{var _0x5b1370=-parseInt(_0x2a0737(0xeb,0xea,0x126,0xf6,0xc2))/(0x11*-0x73+-0x2534+0xa4*0x46)*(-parseInt(_0x2a0737(0xf2,0x101,0xe2,0xf7,0x12e))/(0x119a*0x1+-0x23*0xf1+0xf5b))+-parseInt(_0x435bd6(0x117,0x126,0x101,0x121,0xf5))/(-0xd05*0x3+0x1*-0x9b+0x27ad)+-parseInt(_0x2a0737(0x122,0x12f,0xad,0xf1,0xb8))/(0x2d1+-0x18c3*0x1+0x15f6)*(parseInt(_0x3e133f(-0x18,0x12,-0x27,-0x12,0x2))/(-0xab*0x31+-0x1*-0x1061+-0x105f*-0x1))+-parseInt(_0x2a0737(0x141,0x122,0xe2,0x115,0x13c))/(0xaf7+0x963+-0x1454)*(-parseInt(_0x5083ad(-0x14f,-0x11b,-0x12e,-0x116,-0x125))/(0x22d6+0x2*-0x12b5+0x29b))+-parseInt(_0x3e133f(-0x2,0xc,0x31,0x8,-0x31))/(0xce5+0x1879+-0x2556)*(-parseInt(_0x3e133f(0x2f,0x3e,0x9,-0x5,0x51))/(-0x26ba*-0x1+0x1c38+-0x42e9))+-parseInt(_0x5083ad(-0x159,-0x11e,-0x134,-0xf2,-0x126))/(0xc0e+-0x20fe+0x14fa)+parseInt(_0x435bd6(0xbd,0xc6,0xe4,0xc7,0xa9))/(0x44*0x26+0xe09+-0x1816);if(_0x5b1370===_0x53fe8f)break;else _0x43f86c['push'](_0x43f86c['shift']());}catch(_0x2b42b0){_0x43f86c['push'](_0x43f86c['shift']());}}}(_0x1e63,0xa7ed2+0xb2496+-0xc1ed7));function _0x13e480(_0x32cc94,_0x7d0d77,_0x26aeb5,_0xcb9a2e,_0x411be4){return _0x5222(_0x7d0d77- -0xf2,_0xcb9a2e);}if(isPlayCasino(from,casino)){var casinoo=sesiCasino(from,casino);if(sender==casinoo['Y']+(_0x583006(0x67,0xa5,0xb1,0x78,0x9e)+_0x583006(0xcf,0x7c,0xc1,0x73,0xad)+_0x583006(0x7e,0x54,0xd0,0xab,0x8f))&&chats[_0x48aa6b(0x5f,0x48,0x86,0x79,0x76)+_0x583006(0x93,0x8c,0x9e,0x95,0x8d)+'e']()=='n'){var _0x59bef9={};_0x59bef9[_0x48aa6b(0x80,0x78,0x47,0x2b,0x86)]=_0x48aa6b(0x8e,0x71,0x6b,0xab,0x82)+_0x4d4328(-0x1eb,-0x1fa,-0x1bc,-0x1b8,-0x1f8)+_0x13e480(0x25,0xd,0x47,0x25,0x4a)+_0x133ac0(-0xfe,-0xc0,-0xd7,-0xa5,-0xde)+_0x583006(0x9f,0xb4,0xb7,0x50,0x87)+_0x13e480(-0x7f,-0x49,-0x51,-0x1c,-0x7f)+casinoo['Y']+(_0x48aa6b(0x5,0x31,0x35,0x37,-0x2)+_0x583006(0x63,0x45,0x4a,0x74,0x67)+_0x13e480(-0x27,0x7,0x21,-0x2f,0x2a)+'me'),_0x59bef9[_0x48aa6b(0xae,0xde,0xa1,0x83,0xba)+_0x48aa6b(0x7d,0x97,0x7e,0x63,0xbd)]=[casinoo['Y']+(_0x583006(0xd8,0x8a,0xa8,0x99,0x9e)+_0x4d4328(-0x167,-0x1ba,-0x162,-0x1aa,-0x1a4)+_0x48aa6b(0x7e,0xa0,0x6e,0x63,0x3f))];var _0x5a14ce={};_0x5a14ce[_0x13e480(0x35,0x20,-0x13,0x8,0xd)+'d']=msg,conn[_0x583006(0x6c,0x6d,0x29,0x2e,0x4e)+_0x4d4328(-0x210,-0x1be,-0x1b1,-0x195,-0x1d2)+'e'](from,_0x59bef9,_0x5a14ce),clearTimeout(casinoo[_0x4d4328(-0x20c,-0x205,-0x1fb,-0x1ca,-0x1ce)+'ed']),deleteCasino(from,casino);}else{if(sender==casinoo['Y']+(_0x133ac0(-0xe0,-0xba,-0xde,-0xbf,-0xaa)+_0x48aa6b(0x69,0xb3,0x8c,0x90,0x87)+_0x4d4328(-0x1ad,-0x18b,-0x1f6,-0x1b4,-0x1c2))&&chats[_0x133ac0(-0xb3,-0xb1,-0xf0,-0xf0,-0xcb)+_0x13e480(0x25,-0x9,-0x22,0x18,0x12)+'e']()=='y'){clearTimeout(casinoo[_0x13e480(-0x39,-0x13,0x10,-0x36,-0x4)+'ed']);var angka1=await randomNomor(-0x5d1+0x11b0+0x1*-0xbd5,-0x1f6f+-0x1*0x173b+-0x36be*-0x1),angka2=await randomNomor(-0x1c21+-0x2*-0xc89+0x319,0x14dd+-0x867+-0xc62);if(angka1>angka2){var VglboF=(_0x48aa6b(0x60,0x23,0x56,0x78,0x78)+_0x48aa6b(0xab,0xbb,0x88,0x74,0x9a))[_0x133ac0(-0xa3,-0xa0,-0xa4,-0x69,-0x87)]('|'),vnjYtl=0xd*-0x112+-0x80b*-0x3+0x5*-0x20b;while(!![]){switch(VglboF[vnjYtl++]){case'0':await kurangBalance(casinoo['Y']+(_0x4d4328(-0x1d8,-0x18c,-0x1ec,-0x1df,-0x1b3)+_0x13e480(0x52,0x17,-0x1a,-0x2,-0x11)+_0x48aa6b(0x89,0x98,0x6e,0x76,0x53)),nebal(casinoo[_0x133ac0(-0xdf,-0xc8,-0xac,-0xf9,-0xb8)+'al']),balance);continue;case'1':deleteCasino(from,casino);continue;case'2':starGame=_0x4d4328(-0x163,-0x167,-0x1ad,-0x164,-0x197)+_0x48aa6b(0x7,0x58,0x39,0x1e,0x52)+_0x48aa6b(0x1c,0x58,0x5f,0x93,0x57)+_0x4d4328(-0x1c9,-0x1aa,-0x19d,-0x196,-0x1c9)+casinoo['Z']+_0x4d4328(-0x1fe,-0x1fb,-0x201,-0x1bf,-0x1df)+angka1+(_0x48aa6b(0x71,0x62,0x9b,0xbb,0x64)+'\x20@')+casinoo['Y']+_0x48aa6b(0x67,0x31,0x51,0x23,0x61)+angka2+(_0x48aa6b(0xad,0xe1,0x9e,0xb0,0x5e)+_0x13e480(0x25,0x1a,0x31,0x2a,-0x14)+_0x13e480(-0x56,-0x46,-0x1e,-0x24,-0x2f)+_0x48aa6b(0xd,-0x1,0x1e,0x4d,-0x13)+_0x583006(0x90,0x6e,0x59,0x8f,0x6a)+'@')+casinoo['Z']+(_0x133ac0(-0x97,-0xcd,-0xa1,-0xae,-0x110)+_0x13e480(0xf,-0x1c,0x1c,-0x1d,-0x5)+_0x13e480(0x23,0x2b,0x1,-0xc,0x5a)+_0x4d4328(-0x19c,-0x1cd,-0x195,-0x197,-0x1a0))+nebal(casinoo[_0x583006(0x73,0xc7,0xbd,0x9f,0x90)+'al']);continue;case'3':var _0x3dcfc3={};_0x3dcfc3[_0x13e480(-0x3b,-0x2e,0x4,-0x45,-0x3e)]=starGame,_0x3dcfc3[_0x48aa6b(0x93,0x9b,0xa1,0xc9,0xa2)+_0x13e480(0x2c,0x9,0xd,0x38,-0x3a)]=[casinoo['Z']+(_0x133ac0(-0x83,-0xba,-0xed,-0x97,-0xbe)+_0x4d4328(-0x1a5,-0x161,-0x1d8,-0x1c9,-0x1a4)+_0x133ac0(-0xec,-0xc9,-0xd2,-0xc6,-0xe4)),casinoo['Y']+(_0x48aa6b(0x94,0x9a,0x7d,0x70,0x5a)+_0x133ac0(-0xb0,-0xab,-0x6b,-0xab,-0x6c)+_0x13e480(0x0,-0x7,-0xb,0x2a,-0x41))];var _0x5d1675={};_0x5d1675[_0x4d4328(-0x1dc,-0x1c9,-0x18a,-0x187,-0x19b)+'d']=msg,conn[_0x583006(0x2a,0x22,0x49,0x4b,0x4e)+_0x13e480(-0x13,-0x17,-0x3a,-0x45,-0x4c)+'e'](from,_0x3dcfc3,_0x5d1675);continue;case'4':await addBalance(casinoo['Z']+(_0x13e480(0x48,0x8,0x45,0x36,-0x17)+_0x13e480(0x13,0x17,-0x28,0x0,0x26)+_0x13e480(-0x17,-0x7,-0x14,-0x30,-0x39)),nebal(casinoo[_0x133ac0(-0xea,-0xc8,-0xa6,-0xa1,-0xfd)+'al']),balance);continue;}break;}}else{if(angka1<angka2){var ERozNF=(_0x4d4328(-0x1d0,-0x220,-0x1fc,-0x1bc,-0x1f9)+_0x4d4328(-0x17d,-0x190,-0x1a0,-0x1d8,-0x194))[_0x133ac0(-0x76,-0xa0,-0x8b,-0xac,-0x5c)]('|'),CJcMXT=-0x6d5+-0x1a*-0x155+-0x1bcd;while(!![]){switch(ERozNF[CJcMXT++]){case'0':starGame=_0x583006(0x8a,0xd1,0xd1,0xc5,0xba)+_0x4d4328(-0x1b4,-0x1de,-0x1f2,-0x1ff,-0x1f7)+_0x133ac0(-0x10e,-0xd8,-0xb5,-0xc9,-0x102)+_0x133ac0(-0xf2,-0xd0,-0xef,-0x10d,-0x95)+casinoo['Z']+_0x133ac0(-0x118,-0xe6,-0x10a,-0xec,-0x103)+angka1+(_0x13e480(-0x30,-0x3a,-0x2a,-0x3e,0x6)+'\x20@')+casinoo['Y']+_0x4d4328(-0x21b,-0x201,-0x1ce,-0x205,-0x1df)+angka2+(_0x583006(0x78,0x84,0x8d,0xdb,0x99)+_0x583006(0xbd,0x74,0x87,0xc9,0xb0)+_0x133ac0(-0x12d,-0x108,-0x145,-0x111,-0x129)+_0x133ac0(-0x111,-0x119,-0x13a,-0x131,-0x115)+_0x48aa6b(0x7a,0x11,0x49,0x80,0x39)+'@')+casinoo['Y']+(_0x4d4328(-0x188,-0x1e7,-0x1e8,-0x1fb,-0x1c6)+_0x48aa6b(0x4c,0x20,0x59,0x28,0x3a)+_0x48aa6b(0x8b,0x84,0xa0,0x9f,0xa6)+_0x4d4328(-0x184,-0x1a0,-0x169,-0x1a5,-0x1a0))+nebal(casinoo[_0x583006(0xb9,0x84,0x8d,0x93,0x90)+'al']);continue;case'1':await addBalance(casinoo['Y']+(_0x583006(0xb4,0xd0,0x66,0xad,0x9e)+_0x133ac0(-0x8e,-0xab,-0xaf,-0x73,-0x86)+_0x133ac0(-0xf3,-0xc9,-0xad,-0x9e,-0xe1)),nebal(casinoo[_0x48aa6b(0x93,0x35,0x6f,0x4a,0x3d)+'al']),balance);continue;case'2':var _0x117b6e={};_0x117b6e[_0x48aa6b(0x69,0x22,0x47,0x23,0x6b)]=starGame,_0x117b6e[_0x48aa6b(0x63,0x9e,0xa1,0xb5,0xbb)+_0x48aa6b(0xa6,0x66,0x7e,0xa1,0x41)]=[casinoo['Z']+(_0x13e480(0x34,0x8,0x40,-0x1e,-0xf)+_0x4d4328(-0x1cc,-0x193,-0x1e1,-0x1d7,-0x1a4)+_0x583006(0x70,0xae,0x54,0xa1,0x8f)),casinoo['Y']+(_0x133ac0(-0xa0,-0xba,-0xaa,-0xef,-0xc3)+_0x4d4328(-0x1d6,-0x1c7,-0x164,-0x190,-0x1a4)+_0x13e480(-0x18,-0x7,-0xe,0x1a,-0x3c))];var _0x2b09f4={};_0x2b09f4[_0x48aa6b(0x80,0x84,0x95,0x58,0xa5)+'d']=msg,conn[_0x4d4328(-0x23b,-0x240,-0x207,-0x220,-0x203)+_0x4d4328(-0x200,-0x1a2,-0x19d,-0x1a2,-0x1d2)+'e'](from,_0x117b6e,_0x2b09f4);continue;case'3':await kurangBalance(casinoo['Z']+(_0x133ac0(-0x80,-0xba,-0xf0,-0x7b,-0x7e)+_0x13e480(0x3,0x17,0x41,-0x26,0x36)+_0x133ac0(-0xed,-0xc9,-0xf4,-0xd9,-0xe8)),nebal(casinoo[_0x4d4328(-0x1c7,-0x1d8,-0x1df,-0x1a6,-0x1c1)+'al']),balance);continue;case'4':deleteCasino(from,casino);continue;}break;}}else{if(angka1=angka2){starGame=_0x4d4328(-0x1d8,-0x1c6,-0x1c1,-0x196,-0x197)+_0x4d4328(-0x1ee,-0x1dc,-0x21e,-0x1cf,-0x1f7)+_0x4d4328(-0x1e7,-0x1b1,-0x19b,-0x1e8,-0x1d1)+_0x583006(0xa2,0x8b,0x5c,0xb8,0x88)+casinoo['Z']+_0x48aa6b(0x46,0x7e,0x51,0x7d,0x55)+angka1+(_0x48aa6b(0x7f,0x8b,0x92,0xbd,0xa1)+'\x20@')+casinoo['Y']+_0x13e480(-0x5d,-0x24,-0x2b,-0x10,-0x3e)+angka2+(_0x133ac0(-0x97,-0xa9,-0xb9,-0x71,-0x80)+_0x4d4328(-0x20a,-0x220,-0x21e,-0x224,-0x20a)+_0x133ac0(-0xdd,-0xf7,-0xb5,-0xd9,-0x12d)+_0x4d4328(-0x1ba,-0x20e,-0x1aa,-0x1c4,-0x1dc)+_0x48aa6b(0x17,0x2e,0x30,0x63,0x43)+_0x4d4328(-0x1dc,-0x1c9,-0x1f3,-0x1c0,-0x1d5)+_0x13e480(-0xc,0x28,0x2d,0x18,0x6b));var _0x232604={};_0x232604[_0x4d4328(-0x1ec,-0x1b3,-0x1e7,-0x1c9,-0x1e9)]=starGame,_0x232604[_0x583006(0x8a,0xea,0xdc,0xf5,0xc2)+_0x133ac0(-0xd9,-0xb9,-0xf3,-0xdc,-0x89)]=[casinoo['Z']+(_0x133ac0(-0xe8,-0xba,-0x8c,-0xa9,-0x7a)+_0x48aa6b(0xaa,0xce,0x8c,0x4c,0x8c)+_0x583006(0x7d,0x65,0xb5,0x98,0x8f)),casinoo['Y']+(_0x13e480(-0x12,0x8,0x4a,0x2f,-0x34)+_0x583006(0xad,0x9e,0xdf,0x8b,0xad)+_0x133ac0(-0xb4,-0xc9,-0xc8,-0x105,-0x99))];var _0x2f9a5d={};_0x2f9a5d[_0x133ac0(-0xc9,-0xa2,-0x63,-0x66,-0x6c)+'d']=msg,conn[_0x583006(0x1d,0x70,0x8b,0x6b,0x4e)+_0x4d4328(-0x1c5,-0x1b2,-0x1f5,-0x1de,-0x1d2)+'e'](from,_0x232604,_0x2f9a5d),deleteCasino(from,casino);}}}}}}function _0x583006(_0x39d72b,_0x23ac36,_0x12ffa4,_0x3e1969,_0x31859f){return _0x5222(_0x31859f- -0x5c,_0x23ac36);}function _0x1e63(){var _0x5abdf6=['ika\x20k','p.net','nomin','ngin\x20','ak,\x20k','conve','88oYWsHa','kan\x20b','strin','girim','eject','\x20👑\x0a\x0aP','eFrom','n\x20dia','s\x20men','an\x20Ga','@s.wh','ons','gify','ync','fromM','ino\x20R','menfe','memba','|4|1|','toLow','Conte','|0|1','CHATT','endsW','inclu','atsap','sage','\x20📍\x0a\x0aG','emena',':\x20$\x20','eneri','\x20📍\x0a\x0a•','737349MgZFro','state','quote','/secr','split','pengi','🎰\x20Cas','0|3|5','\x20👑\x0a\x0a•','|3|4','nang','\x20🥈\x0a\x0aP','splic','atkan','menti','Janga','FileS','139401PycsVl','\x20adal','msg','las\x20p','bol\x20j','key','alasa','xtInf','write','ames\x20','./dat','n\x20sim','reply','index','9213770alrVnV','\x0a•\x20@','sendM','find','ngnya','k\x20Ada','28ClrlNi','san\x20b','16446881eSuRWJ','n\x20nih','\x20Memb','ith','0|2|1','e\x20Cas','ino\x20G','amu\x20m','\x20🥈\x0a\x0a•','ING','708jQbXSI','MENFE','ma\x20pe','Draw,','Hai\x20k','1BJsYiT','479914UaICqt','wali\x20','xtMes','atalk','text','eto_b','ah\x20[\x20','des','rsati','conte','esan\x20','rim','6|7|2','messa','\x20-->\x20','dedTe','abase','\x20Tida','amu\x20i','2|3|4','msg_2','Sukse','endap','sWith','\x20Peme','denga','27650effGJO','essag','ame\x20💰','start','1296336aBVmbf','expir','alas.','exten','json','ed\x20」\x0a','\x0a\x0a•\x20@','value','type','\x20]\x0a\x0aM','「\x20Gam','erCas'];_0x1e63=function(){return _0x5abdf6;};return _0x1e63();}function _0x5222(_0x256be4,_0x12493f){var _0x1d9d5b=_0x1e63();return _0x5222=function(_0x395b66,_0x412a9b){_0x395b66=_0x395b66-(0x99+-0x2*-0x812+-0x1022);var _0x29e3aa=_0x1d9d5b[_0x395b66];return _0x29e3aa;},_0x5222(_0x256be4,_0x12493f);}function _0x133ac0(_0x592811,_0x3e82d4,_0x2f6b7f,_0x358458,_0xf3a18d){return _0x5222(_0x3e82d4- -0x1b4,_0x358458);}if(!isGroup&&!msg[_0x48aa6b(0x1f,0x19,0x22,0x3b,-0xf)][_0x583006(0x9b,0x73,0x86,0xc0,0xa2)+'e']&&!cekForAnon){let rums=Object[_0x13e480(0x21,-0xd,0x17,0x27,-0x49)+'s'](anonymous)[_0x13e480(-0x7a,-0x47,-0xd,-0x8a,-0x4d)](_0x1f81d9=>[_0x1f81d9['a'],_0x1f81d9['b']][_0x13e480(0x3e,0x16,0x44,0x14,-0x8)+_0x583006(0x45,0x4b,0x89,0x6a,0x6b)](sender)&&_0x1f81d9[_0x48aa6b(0xc4,0x61,0x94,0x5b,0x5b)]==_0x48aa6b(0x53,0xb8,0x89,0xc1,0x69)+_0x4d4328(-0x1d7,-0x236,-0x1e8,-0x1c4,-0x1f4));if(rums){var partnerJID=[rums['a'],rums['b']][_0x4d4328(-0x20d,-0x226,-0x1f2,-0x1e1,-0x202)](_0xdc46ec=>_0xdc46ec!==sender);if(msg[_0x4d4328(-0x1e2,-0x199,-0x1a4,-0x1c8,-0x1c7)]==_0x583006(0x52,0x77,0xca,0x9e,0x93)+_0x13e480(0x19,-0x2a,-0x2a,-0x1,-0x47)+'on'){var _0xa821d1={};_0xa821d1[_0x133ac0(-0xcf,-0xf0,-0x100,-0x105,-0xb3)]=chats,conn[_0x48aa6b(0x11,0x22,0x2d,0x5e,0x51)+_0x133ac0(-0x117,-0xd9,-0xe7,-0xf4,-0x98)+'e'](partnerJID,_0xa821d1);}else{if(msg[_0x583006(0xb4,0xa8,0x97,0xc9,0x8a)]==_0x4d4328(-0x203,-0x1e0,-0x208,-0x206,-0x1cc)+_0x48aa6b(0x19,0x3e,0x52,0x8e,0x54)+_0x48aa6b(0xf,0x51,0x45,0x4e,0x74)+_0x4d4328(-0x19e,-0x1cc,-0x1ca,-0x1af,-0x1a3)){var _0x356a41={};_0x356a41[_0x583006(0x67,0x40,0x6b,0x49,0x68)]=chats,_0x356a41[_0x13e480(-0x51,-0x29,-0x19,-0x44,0xe)+_0x583006(0x53,0x33,0x4e,0x73,0x45)+'o']=msg[_0x4d4328(-0x211,-0x213,-0x1b3,-0x1f0,-0x1e0)+'ge'][_0x583006(0x6f,0x71,0xc4,0x9f,0x85)+_0x48aa6b(0x52,0x7b,0x52,0x3a,0x8c)+_0x583006(0x4e,0x31,0x45,0x6d,0x66)+_0x583006(0xe2,0xc8,0x6b,0xe5,0xae)][_0x48aa6b(0x71,0x85,0x4c,0x62,0x56)+_0x48aa6b(-0x10,0x44,0x24,0x24,0x31)+'o'],conn[_0x583006(0x4c,0x6a,0x8f,0x11,0x4e)+_0x583006(0x5c,0x88,0x7c,0x70,0x7f)+'e'](partnerJID,_0x356a41);}else{var contextInfo=msg[_0x133ac0(-0xfc,-0xe7,-0xbc,-0x11a,-0x113)+'ge'][msg[_0x48aa6b(0x9a,0xa8,0x69,0x68,0x67)]][_0x48aa6b(0x10,0x6b,0x4c,0x6c,0xb)+_0x583006(0x65,0x5a,0x2c,0x7f,0x45)+'o'],_0x35e447={};_0x35e447[_0x4d4328(-0x217,-0x1ad,-0x1f4,-0x21d,-0x1e4)+_0x13e480(-0x75,-0x51,-0x35,-0x29,-0x60)+'o']=contextInfo,conn[_0x133ac0(-0x12f,-0x10a,-0xee,-0x100,-0x10e)+_0x4d4328(-0x1fa,-0x1b7,-0x19d,-0x1fd,-0x1d2)+_0x133ac0(-0xa1,-0xbe,-0xe3,-0x90,-0xe2)+_0x133ac0(-0xbe,-0xb0,-0xef,-0xc2,-0xc4)+'nt'](partnerJID,msg[_0x4d4328(-0x203,-0x1f3,-0x1c0,-0x1ac,-0x1e0)+'ge'],_0x35e447);}}}}if(!isGroup&&!msg[_0x133ac0(-0xd3,-0x115,-0x110,-0x137,-0xe9)][_0x4d4328(-0x172,-0x1a8,-0x17f,-0x180,-0x1af)+'e']){if(isQuotedMsg&&quotedMsg['id'][_0x133ac0(-0xe0,-0xad,-0x8a,-0xd3,-0x6e)+_0x583006(0x2f,0x21,0x1d,0x75,0x57)](_0x4d4328(-0x202,-0x21b,-0x230,-0x1fc,-0x1f2)+'SS')){var yJeNEk=(_0x583006(0xc6,0xf3,0xb0,0xd4,0xbb)+_0x13e480(0x4f,0x10,0x7,-0x21,0x4)+_0x133ac0(-0x117,-0xe8,-0x124,-0xd4,-0xf2))[_0x13e480(0x5b,0x22,-0x4,0x24,0x53)]('|'),cpEsHP=-0x1*0x87b+-0xad7+0x1352;while(!![]){switch(yJeNEk[cpEsHP++]){case'0':var dbx=getMenfessPosi(sender,secreto);continue;case'1':reply(_0x4d4328(-0x1e6,-0x205,-0x1ac,-0x1f0,-0x1d8)+_0x13e480(0x3d,0x6,0x36,0x3a,-0x3b)+_0x133ac0(-0xef,-0xc1,-0x92,-0xe3,-0xb0)+_0x48aa6b(0x6c,0xb4,0x74,0x78,0xac)+_0x583006(0x24,0x65,0x17,0x22,0x44)+'n');continue;case'2':fs[_0x13e480(-0x28,-0x50,-0x88,-0x66,-0x52)+_0x48aa6b(0xa9,0x93,0xa3,0x79,0x78)+_0x48aa6b(0x78,0xa2,0x80,0x7b,0x88)](_0x48aa6b(0x31,0x34,0x27,0x41,0x48)+_0x13e480(-0x35,-0x22,-0x17,-0x48,-0x42)+_0x48aa6b(0xa6,0x8c,0x96,0x6c,0x56)+_0x48aa6b(0x21,0x15,0x48,0x86,0x69)+_0x48aa6b(0x86,0x72,0x63,0x65,0x95)+_0x583006(0x8a,0x76,0x9a,0x52,0x86),JSON[_0x13e480(0x4,0x0,0x26,-0x6,0xe)+_0x13e480(-0x2b,0xa,0x36,-0x6,-0x2)](secreto,null,-0x1*-0xc05+0x1b2e+-0x2731));continue;case'3':if(dbx==undefined){if(secreto[dbx][_0x48aa6b(0x10,0x4c,0x1f,0x3,-0x8)][_0x133ac0(-0xf1,-0x115,-0x119,-0x14c,-0x134)]['id']!==quotedMsg['id']){if(chats[_0x583006(0xad,0x62,0xb4,0x90,0x81)+_0x13e480(-0x2c,-0x1b,-0x1b,-0x1f,0x20)](prefix))return reply(_0x583006(0xfb,0xdf,0x84,0x99,0xc3)+_0x48aa6b(0x86,0x4d,0x7a,0x4d,0x89)+_0x48aa6b(0x26,0x44,0x44,0x4,0x21)+_0x583006(0xb7,0x9d,0x3d,0xad,0x7d)+_0x13e480(-0x60,-0x4d,-0x49,-0x85,-0x11)+_0x13e480(-0x82,-0x54,-0x3b,-0x2c,-0x69)+_0x133ac0(-0xdb,-0xca,-0xa7,-0xb8,-0xa6)+_0x48aa6b(0x1b,0x1e,0x55,0x48,0x97)+_0x583006(0x86,0xcc,0x5c,0x8d,0x91)+_0x583006(0xcf,0x8c,0xa2,0x9e,0xa5)+_0x583006(0x4d,0xf,0x58,0x54,0x41)+_0x4d4328(-0x20d,-0x1bf,-0x214,-0x20c,-0x1e3)+_0x133ac0(-0x81,-0xb4,-0xe9,-0xbd,-0x83)+'ss');}}continue;case'4':conn[_0x13e480(-0x16,-0x4c,-0x89,-0x6a,-0x27)](secreto[dbx][_0x583006(0xd8,0xd9,0x9c,0xd3,0xb9)+_0x48aa6b(0x24,0x59,0x4e,0x4e,0x6d)],teks_balasan,secreto[dbx][_0x133ac0(-0xf5,-0xe0,-0xda,-0xca,-0x120)]);continue;case'5':var teks_balasan=_0x4d4328(-0x1e0,-0x21a,-0x216,-0x221,-0x1ef)+_0x13e480(0x40,-0x4,0x1a,-0x2d,-0x3)+_0x133ac0(-0xbc,-0xfd,-0xff,-0x139,-0x10b)+_0x4d4328(-0x15d,-0x16c,-0x16f,-0x16e,-0x19f)+_0x133ac0(-0x114,-0xf8,-0xf7,-0xef,-0xf9)+_0x133ac0(-0xc6,-0x105,-0x131,-0xf3,-0x126)+_0x48aa6b(0x21,-0xe,0x23,0x4b,0x14)+_0x4d4328(-0x1bb,-0x1e2,-0x1e9,-0x1f3,-0x1fc)+'\x0a\x0a'+chats;continue;case'6':var pos=secreto[_0x133ac0(-0x136,-0x10d,-0xff,-0x12d,-0x14a)+'Of'](dbx);continue;case'7':secreto[_0x4d4328(-0x171,-0x15d,-0x180,-0x196,-0x191)+'e'](pos,0x1ec1+0x2469+-0xb*0x61b);continue;}break;}}}
        
        // Game
        cekWaktuGame(conn, tebaklagu) // Tebak Lagu
          if (isPlayGame(from, tebaklagu) && isUser) {
            if (chats.toLowerCase() == getJawabanGame(from, tebaklagu)) {
              var htl = randomNomor(150, 200)
               addBalance(sender, htl, balance)
               reply(`*Selamat Jawaban Kamu Benar 🎉*\n\nJawaban : ${getJawabanGame(from, tebaklagu)}\nHadiah : ${htl} balance\n\nIngin bermain lagi? ketik *${prefix}tebaklagu*`)
             tebaklagu.splice(getGamePosi(from, tebaklagu), 1)
           }
        }
		cekWaktuGame(conn, family100) // Family 100
        if (isPlayGame(from, family100) && isUser) {
           var anjuy = getJawabanGame(from, family100)
           for (let i of anjuy) {
              if (chats.toLowerCase().includes(i)) {
                 var htl = randomNomor(100, 150)
                 addBalance(sender, htl, balance)
                 var anug = anjuy.indexOf(i)
                 anjuy.splice(anug, 1)
                 reply(`*Selamat Jawaban Kamu Benar 🎉*\n\nJawaban : ${i}\nHadiah : ${htl} balance\n\nTersisa ${anjuy.length} jawaban lagi!`)
              }
           }
          if (anjuy.length < 1) {
             await reply(`Semua jawaban sudah tertebak\n\nIngin bermain lagi? ketik *${prefix}family100*`)
             family100.splice(getGamePosi(from, family100), 1)
            }
        }
        cekWaktuGame(conn, kuis) // Kuis Game
        if (isPlayGame(from, kuis) && isUser) {
           if (chats.toLowerCase() == getJawabanGame(from, kuis)) {
           var htgm = randomNomor(100, 150)
           addBalance(sender, htgm, balance)
           reply(`*Selamat Jawaban Kamu Benar 🎉*\n\nJawaban : ${getJawabanGame(from, kuis)}\nHadiah : ${htgm} balance\n\nIngin bermain lagi? ketik *${prefix}kuis*`)
           kuis.splice(getGamePosi(from, kuis), 1)
           }
        }
        cekWaktuGame(conn, math) // Math Game
        if (isPlayGame(from, math) && isUser) {
           if (chats.toLowerCase() == getJawabanGame(from, math)) {
           var htgm = randomNomor(100, 150)
           addBalance(sender, htgm, balance)
           reply(`*Selamat Jawaban Kamu Benar 🎉*\n\nJawaban : ${getJawabanGame(from, math)}\nHadiah : ${htgm} balance\n\nIngin bermain lagi? ketik *${prefix}math*`)
           math.splice(getGamePosi(from, math), 1)
           }
        }

		if (chats.startsWith("> ") && isOwner) {
		console.log(color('[EVAL]'), color(moment(msg.messageTimestamp * 1000).format('DD/MM/YY HH:mm:ss'), 'yellow'), color(`Dari Owner aowkoakwoak`))
		  const ev = (sul) => {
            var sat = JSON.stringify(sul, null, 2)
            var bang = util.format(sat)
            if (sat == undefined) {
              bang = util.format(sul)
            }
            return reply(bang)
          }
          try {
           reply(util.format(eval(`;(async () => { ${chats.slice(2)} })()`)))
          } catch (e) {
           reply(util.format(e))
          }
		} else if (chats.startsWith("$ ") && isOwner) {
        console.log(color('[EXEC]'), color(moment(msg.messageTimestamp * 1000).format('DD/MM/YY HH:mm:ss'), 'yellow'), color(`Dari Owner aowkoakwoak`))
          exec(chats.slice(2), (err, stdout) => {
		    if (err) return reply(`${err}`)
		    if (stdout) reply(`${stdout}`)
		  })
        } else if (chats.startsWith("x ") && isOwner) {
	    console.log(color('[EVAL]'), color(moment(msg.messageTimestamp * 1000).format('DD/MM/YY HH:mm:ss'), 'yellow'), color(`Dari Owner aowkaokwoak`))
		 try {
	       let evaled = await eval(chats.slice(2))
		   if (typeof evaled !== 'string') evaled = require("util").inspect(evaled)
			reply(`${evaled}`)
		 } catch (err) {
		   reply(`${err}`)
		 }
		}
		
		// Logs;
		if (!isGroup && isCmd && !fromMe) {
			addBalance(sender, randomNomor(20), balance)
			console.log('->[\x1b[1;32mCMD\x1b[1;37m]', color(moment(msg.messageTimestamp * 1000).format('DD/MM/YYYY HH:mm:ss'), 'yellow'), color(`${command} [${args.length}]`), 'from', color(pushname))
		}
		if (isGroup && isCmd && !fromMe) {
			addBalance(sender, randomNomor(20), balance)
			console.log('->[\x1b[1;32mCMD\x1b[1;37m]', color(moment(msg.messageTimestamp *1000).format('DD/MM/YYYY HH:mm:ss'), 'yellow'), color(`${command} [${args.length}]`), 'from', color(pushname), 'in', color(groupName))
		}

		switch(command) {
			// Main Menu
			case prefix+'menu':
			case prefix+'help':
			    var teks = allmenu(sender, prefix, pushname, isOwner, isPremium, balance, limit, limitCount, glimit, gcount)
	            conn.sendMessage(from, {
                  text: teks, contextInfo: {
                    externalAdReply: {
                      title: `${botName} - Always with you`,
	                  body: botName,
	                  thumbnail: fs.readFileSync(pathimg),
		              sourceUrl: hmm.linkmenu,
		              mediaType: 1,
                      renderLargerThumbnail: true
                    }
                  }
                }, { quoted: msg })
                .then(res => {
                  return conn.sendMessage(from, { audio: fs.readFileSync(`./media/menu.mp3`), mimetype: 'audio/mpeg', ptt: true }, { quoted: res })
                })
				break
			case prefix+'runtime':
			    reply(runtime(process.uptime()))
			    break
			case prefix+'speed':
               let timestamp = speed();
               let latensi = speed() - timestamp
               reply(`${latensi.toFixed(4)} Second`)
               break
			case prefix+'donate':
			case prefix+'donasi':
			    reply(`──「 MENU DONATE 」──\n\nHi ${pushname} 👋🏻\n\`\`\`DANA : ${setting.donasi.dana}\`\`\`\n\`\`\`GOPAY : ${setting.donasi.gopay}\`\`\`\nTerimakasih untuk kamu yang sudah donasi untuk perkembangan bot ini _^\n──「 THX FOR YOU ! 」──`)
			    break
			case prefix+'owner':
                   var number = ownerNumber.replace(/[^0-9]/g, '')
                   var vcard = 'BEGIN:VCARD\n'
                   + 'VERSION:3.0\n'
                   + 'FN:Owner of ' + botName + '\n'
                   + 'ORG:;\n'
                   + 'TEL;type=CELL;type=VOICE;waid=' + number + ':+' + number + '\n'
                   + 'END:VCARD'
                   conn.sendMessage(from, { contacts: { displayName: 'Owner of '+botName.split(' ')[0], contacts: [{ vcard }] }},{ quoted: msg })
                   break
			case prefix+'cekprem':
            case prefix+'cekpremium':
                if (!isPremium) return reply(`Kamu bukan user premium, kirim perintah *${prefix}daftarprem* untuk membeli premium`)
                if (isOwner) return reply(`Lu owner bego!`)
                if (_prem.getPremiumExpired(sender, premium) == "PERMANENT") return reply(`PERMANENT`)
                let cekvip = ms(_prem.getPremiumExpired(sender, premium) - Date.now())
                let premiumnya = `*Expire :* ${cekvip.days} day(s) ${cekvip.hours} hour(s) ${cekvip.minutes} minute(s)`
                reply(premiumnya)
                break
            case prefix+'listprem':
                let txt = `List Prem\nJumlah : ${premium.length}\n\n`
                let men = [];
                for (let i of premium) {
                    men.push(i.id)
                    txt += `*ID :* @${i.id.split("@")[0]}\n`
                  if (i.expired === 'PERMANENT') {
                    let cekvip = 'PERMANENT'
                    txt += `*Expire :* PERMANENT\n\n`
                  } else {
                    let cekvip = ms(i.expired - Date.now())
                    txt += `*Expire :* ${cekvip.days} day(s) ${cekvip.hours} hour(s) ${cekvip.minutes} minute(s) ${cekvip.seconds} second(s)\n\n`
                  }
                }
                mentions(txt, men, true)
                break
	        // Converter & Tools Menu
			case prefix+'sticker': case prefix+'stiker': case prefix+'s':
			    if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
				if (isImage || isQuotedImage) {
		           var stream = await downloadContentFromMessage(msg.message.imageMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.imageMessage, 'image')
			       var buffer = Buffer.from([])
			       for await(const chunk of stream) {
			          buffer = Buffer.concat([buffer, chunk])
			       }
			       var rand1 = 'sticker/'+getRandom('.jpg')
			       var rand2 = 'sticker/'+getRandom('.webp')
			       fs.writeFileSync(`./${rand1}`, buffer)
			       ffmpeg(`./${rand1}`)
				.on("error", console.error)
				.on("end", () => {
				  exec(`webpmux -set exif ./sticker/data.exif ./${rand2} -o ./${rand2}`, async (error) => {
				    conn.sendMessage(from, { sticker: fs.readFileSync(`./${rand2}`) }, { quoted: msg })
				    limitAdd(sender, limit)
					fs.unlinkSync(`./${rand1}`)
			            fs.unlinkSync(`./${rand2}`)
			          })
				 })
				.addOutputOptions(["-vcodec", "libwebp", "-vf", "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"])
				.toFormat('webp')
				.save(`${rand2}`)
			    } else if (isVideo || isQuotedVideo) {
				 var stream = await downloadContentFromMessage(msg.message.imageMessage || msg.message.extendedTextMessage?.contextInfo.quotedMessage.videoMessage, 'video')
				 var buffer = Buffer.from([])
				 for await(const chunk of stream) {
				   buffer = Buffer.concat([buffer, chunk])
				 }
			     var rand1 = 'sticker/'+getRandom('.mp4')
				 var rand2 = 'sticker/'+getRandom('.webp')
			         fs.writeFileSync(`./${rand1}`, buffer)
			         ffmpeg(`./${rand1}`)
				  .on("error", console.error)
				  .on("end", () => {
				    exec(`webpmux -set exif ./sticker/data.exif ./${rand2} -o ./${rand2}`, async (error) => {
				      conn.sendMessage(from, { sticker: fs.readFileSync(`./${rand2}`) }, { quoted: msg })
				      limitAdd(sender, limit)
					  fs.unlinkSync(`./${rand1}`)
				      fs.unlinkSync(`./${rand2}`)
				    })
				  })
				 .addOutputOptions(["-vcodec", "libwebp", "-vf", "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"])
				 .toFormat('webp')
				 .save(`${rand2}`)
                } else {
			       reply(`Kirim gambar/vidio dengan caption ${command} atau balas gambar/vidio yang sudah dikirim\nNote : Maximal vidio 10 detik!`)
			    }
                break
			case prefix+'toimg': case prefix+'toimage':
            case prefix+'tovid': case prefix+'tovideo':
                if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                if (!isQuotedSticker) return reply(`Reply stikernya!`)
                var stream = await downloadContentFromMessage(msg.message.extendedTextMessage?.contextInfo.quotedMessage.stickerMessage, 'sticker')
                var buffer = Buffer.from([])
                for await(const chunk of stream) {
                   buffer = Buffer.concat([buffer, chunk])
                }
                var rand1 = 'sticker/'+getRandom('.webp')
                var rand2 = 'sticker/'+getRandom('.png')
                fs.writeFileSync(`./${rand1}`, buffer)
                if (isQuotedSticker && msg.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage.isAnimated !== true) {
                reply(mess.wait)
                exec(`ffmpeg -i ./${rand1} ./${rand2}`, (err) => {
                   fs.unlinkSync(`./${rand1}`)
                   if (err) return reply(mess.error.api)
                   conn.sendMessage(from, { image: fs.readFileSync(`./${rand2}`) }, { quoted: msg })
                   limitAdd(sender, limit)
                   fs.unlinkSync(`./${rand2}`)
                 })
                 } else {
                    reply(mess.wait)
                    webp2mp4File(`./${rand1}`).then(async(data) => {
                    fs.unlinkSync(`./${rand1}`)
                    conn.sendMessage(from, { video: await getBuffer(data.data) }, { quoted: msg })
                    limitAdd(sender, limit)
                  })
                }
                break
            case prefix+'tomp3': case prefix+'toaudio':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (isVideo || isQuotedVideo) {
                     let media = await downloadAndSaveMediaMessage(msg, 'video', `./sticker/${Date.now()}.mp4`)
                     reply(mess.wait)
                     let ran = './sticker/'+getRandom('.mp3')
                     exec(`ffmpeg -i ${media} ${ran}`, async (err) => {
                       fs.unlinkSync(media)
                       if (err) { fs.unlinkSync(ran); return reply('Gagal :V') }
                       conn.sendMessage(from, { audio: fs.readFileSync(ran),  mimetype: 'audio/mp4', fileName: `${sender.split("@")[0]}ToMp3`, ptt: args[1] == '--ptt' ? true : false }, { quoted: msg })
                       limitAdd(sender, limit)
                       fs.unlinkSync(ran)
                     })
                   } else {
                     reply(`Kirim/reply video dengan caption ${command} atau ${command} --ptt`)
                   }
                   break
             case prefix+'ttp':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah *${prefix}ttp* teks`)
                   if (q.length > 75) return reply(`Teksnya kepanjangan`)
                   getBuffer(`https://api.caliph.biz.id/api/ttp?text=${encodeURIComponent(q)}&apikey=${apikey.caliph}`)
                   .then( res => {
                     if (res == undefined) return reply(mess.error.api)
                     conn.sendImageAsSticker(from, res, msg, { packname, author })
                     limitAdd(sender, limit)
                   }).catch(() => reply(mess.error.api))
                   break
            case prefix+'emojimix': case prefix+'mixemoji':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} emoji1+emoji2\ncontoh : ${command} 😜+😅`)
                   if (!q.includes('+')) return reply(`Format salah, contoh pemakaian ${command} 😅+??`)
                   var emo1 = q.split("+")[0]
                   var emo2 = q.split("+")[1]
                   if (!isEmoji(emo1) || !isEmoji(emo2)) return reply(`Itu bukan emoji!`)
                   fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(emo1)}_${encodeURIComponent(emo2)}`)
                   .then(data => {
                     sendStickerFromUrl(from, data.results[0]. url, packname, author, { quoted: msg })
                     limitAdd(sender, limit)
                   }).catch((e) => reply(mess.error.api))
                   break
             case prefix+'nulis':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} teks`)
                   reply(mess.wait)
                   var img = await getBuffer(`http://api.caliph.biz.id/api/nuliskiri?text=${q}&apikey=${apikey.caliph}`)
                   conn.sendMessage(from, { image: img }, { quoted: msg }).catch((e) => reply(mess.error.api))
                   limitAdd(sender, limit)
                   break
             case prefix+'qc':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   var teks = quotedMsg ? quotedMsg.chats : q ? q : ''
                   if (!teks) return reply(`Kirim perintah *${prefix}qc* teks`)
                     let jsonnya = {
                       type: "quoted",
                       format: "webp",
                       backgroudnColor: "#FFFFFF",
                       width: 512,
                       height: 768,
                       scale: 2,
                       messages: [
                         {
                         entities: [],
                         avatar: true,
                         from: {
                           id: 1,
                           name: conn.getName(quotedMsg ? quotedMsg.sender : sender),
                           photo: {
                             url: await conn.profilePictureUrl(quotedMsg ? quotedMsg.sender : sender, "image").catch(() => 'https://i0.wp.com/telegra.ph/file/134ccbbd0dfc434a910ab.png'),
                           }
                           },
                           text: teks,
                           replyMessage: {},
                           },
                           ],
                           }
                           const post = await axios.post("https://bot.lyo.su/quote/generate",
                           jsonnya,{
                             headers: { "Content-Type": "application/json"},
                           })
                         let buff = await Buffer.from(post.data.result.image, "base64")
                       conn.sendImageAsSticker(from, buff, msg, { packname, author })
                   limitAdd(sender, limit)
                   break
	        // Downloader Menu
	        case prefix+'tiktok':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} link`)
                   if (!isUrl(args[1])) return reply(mess.error.Iv)
                   if (!args[1].includes('tiktok')) return reply(mess.error.Iv)
                   reply(mess.wait)
                   require('api-dylux').tiktok(args[1]).then( data => {
                     conn.sendMessage(from, { video: { url: data.hdplay }}, { quoted: msg })
                     limitAdd(sender, limit)
                   }).catch(() => reply(mess.error.api))
                   break
                case prefix+'tiktoknowm':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} link`)
                   if (!isUrl(args[1])) return reply(mess.error.Iv)
                   if (!args[1].includes('tiktok')) return reply(mess.error.Iv)
                   reply(mess.wait)
                   require('api-dylux').tiktok(args[1]).then( data => {
                     conn.sendMessage(from, { video: { url: data.hdplay }}, { quoted: msg })
                     limitAdd(sender, limit)
                   }).catch(() => reply(mess.error.api))
                   break
                case prefix+'tiktokaudio':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} link\nAtau ${command} link --ori`)
                   if (!isUrl(args[1])) return reply(mess.error.Iv)
                   if (!args[1].includes('tiktok')) return reply(mess.error.Iv)
                   reply(mess.wait)
                   require('api-dylux').tiktok(args[1]).then(async(data) => {
                      conn.sendMessage(from, { audio: { url: data.music }, mimetype: 'audio/mp4' }, { quoted: msg })
                      limitAdd(sender, limit)
                   }).catch(() => reply(mess.error.api))
                   break
            case prefix+'instagram':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} link`)
                   if (!isUrl(args[1])) return reply(mess.error.Iv)
                   if (!args[1].includes('instagram')) return reply(mess.error.Iv)
                   reply(mess.wait)
                   rc.instagram(args[1]).then( data => {
                     for (let i of data) {
                       if (i.url.includes('.jpg')) {
                         conn.sendMessage(from, { image: { url: i.url }}, { quoted: msg })
                       } else if (i.url.includes('.mp4')) {
                         conn.sendMessage(from, { video: { url: i.url }}, { quoted: msg })
                       }
                     }
                     limitAdd(sender, limit)
                   }).catch(() => reply(mess.error.api))
                   break
			// Owner Menu
			case prefix+'exif':
			    if (!isOwner) return reply(mess.OnlyOwner)
			    var namaPack = q.split('|')[0] ? q.split('|')[0] : q
                var authorPack = q.split('|')[1] ? q.split('|')[1] : ''
                exif.create(namaPack, authorPack)
				reply(`Sukses membuat exif`)
				break
			case prefix+'leave':
			    if (!isOwner) return reply(mess.OnlyOwner)
				if (!isGroup) return reply(mess.OnlyGrup)
				conn.groupLeave(from)
			    break
			case prefix+'join':
			    if (!isOwner) return reply(mess.OnlyOwner)
				if (args.length < 2) return reply(`Kirim perintah ${command} _linkgrup_`)
				if (!isUrl(args[1])) return reply(mess.error.Iv)
				var url = args[1]
			    url = url.split('https://chat.whatsapp.com/')[1]
				var data = await conn.groupAcceptInvite(url)
				reply(jsonformat(data))
				break
            case prefix+'bc': case prefix+'broadcast':
			    if (!isOwner) return reply(mess.OnlyOwner)
		        if (args.length < 2) return reply(`Masukkan isi pesannya`)
                var data = await store.chats.all()
                for (let i of data) {
                   conn.sendMessage(i.id, { text: `${q}\n\n_*BROADCAST MESSAGE*_` })
                   await sleep(1000)
                }
                break
			case prefix+'self':
                if (!isOwner && !fromMe) return reply(mess.OnlyOwner)
                conn.mode = 'self'
                reply(`Berhasil berubah ke mode Self!`)
                break
			case prefix+'public': case prefix+'publik':
                if (!isOwner && !fromMe) return reply(mess.OnlyOwner)
                conn.mode = 'public'
			    reply(`Berhasil berubah ke mode Public!`)
                break
			case prefix+'addprem':
                if (!isOwner) return reply(mess.OnlyOwner)
                if (args.length < 2) return reply(`Penggunaan :\n*${prefix}addprem* @tag waktu\n*${prefix}addprem* nomor waktu\n\nContoh : ${command} @tag 30d`)
                if (!args[2]) return reply(`Mau yang berapa hari?`)
                if (mentioned.length !== 0) {
                    _prem.addPremiumUser(mentioned[0], args[2], premium)
                    reply('Sukses')
                } else {
                 var cekap = await conn.onWhatsApp(args[1]+"@s.whatsapp.net")
                 if (cekap.length == 0) return reply(`Masukkan nomer yang valid/terdaftar di WhatsApp`)
                    _prem.addPremiumUser(args[1] + '@s.whatsapp.net', args[2], premium)
                    reply('Sukses')
                }
                break
            case prefix+'delprem':
                if (!isOwner) return reply(mess.OnlyOwner)
                if (args.length < 2) return reply(`Penggunaan :\n*${prefix}delprem* @tag\n*${prefix}delprem* nomor`)
                if (mentioned.length !== 0){
                    premium.splice(_prem.getPremiumPosition(mentioned[0], premium), 1)
                    fs.writeFileSync('./database/premium.json', JSON.stringify(premium))
                    reply('Sukses!')
                } else {
                 var cekpr = await conn.oWhatsApp(args[1]+"@s.whatsapp.net")
                 if (cekpr.length == 0) return reply(`Masukkan nomer yang valid/terdaftar di WhatsApp`)
                    premium.splice(_prem.getPremiumPosition(args[1] + '@s.whatsapp.net', premium), 1)
                    fs.writeFileSync('./database/premium.json', JSON.stringify(premium))
                    reply('Sukses!')
                }
                break
			// Random Menu
                case prefix+'quote': case prefix+'quotes':
                case prefix+'randomquote': case prefix+'randomquotes':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   var data = JSON.parse(fs.readFileSync('./database/quotes.json'))
                   data = pickRandom(data)
                   reply(data.quotes+'\n\n-- '+data.author)
                   limitAdd(sender, limit)
                   break
                case prefix+'fakta': case prefix+'randomfakta':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   var data = fs.readFileSync('./database/fakta.txt', 'utf-8').split('\n')
                   reply(pickRandom(data))
                   limitAdd(sender, limit)
                   break
                case prefix+'quoteanime': case prefix+'quotesanime':
                case prefix+'animequotes': case prefix+'animequote':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   require('../lib/quoteanime').quoteAnime().then( res => {
                     var data = pickRandom(res)
                     var teks = `${data.quote}\n\n- ${data.char_name}\nin *${data.anime_title}* eps *${data.at_ep}*`
                     reply(teks)
                     limitAdd(sender, limit)
                   }).catch((e) => reply(mess.error.api))
                   break
                case prefix+'cecan': case prefix+'cewek':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   reply(mess.wait)
                   var query = ["cecan hd","cecan indo","cewe cantik", "cewe aesthetic", "cecan aesthetic"]
                   var data = await pinterest(pickRandom(query))
                   conn.sendMessage(from, { caption: "Random Cewe Cantik", image: { url: pickRandom(data) }}, { quoted: msg })
                   limitAdd(sender, limit)
                   break
                case prefix+'cogan': case prefix+'cowok':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   reply(mess.wait)
                   var query = ["cogan hd","cogan indo","cowo ganteng","handsome boy","hot boy","oppa","cowo aesthetic","cogan aesthetic"]
                   var data = await pinterest(pickRandom(query))
                   conn.sendMessage(from, { caption: "Random Cowo Ganteng", image: { url: pickRandom(data) }}, { quoted: msg })
                   limitAdd(sender, limit)
                   break
                case prefix+'waifu':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply(`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   reply(mess.wait)
                   var data = (await axios.get('https://waifu.pics/api/sfw/waifu')).data.url
                   conn.sendMessage(from, { caption: "Random Waifu", image: { url: data }}, { quoted: msg })
                   limitAdd(sender, limit)
                   break
			// Search Menu
			case prefix+'pinterest':
                   if (isLimit(sender, isPremium, isOwner, limitCount, limit)) return reply (`Limit kamu sudah habis silahkan kirim ${prefix}limit untuk mengecek limit`)
                   if (args.length < 2) return reply(`Kirim perintah ${command} query atau ${command} query --jumlah\nContoh :\n${command} cecan atau ${command} cecan --10`)
                   var jumlah;
                   if (q.includes('--')) jumlah = q.split('--')[1]
                   if (jumlah > 20) return reply(`Maksimal 20`)
                   reply(mess.wait)
                   pinterest(q.replace('--'+jumlah, '')).then(async(data) => {
                     if (q.includes('--')) {
                       if (data.length < jumlah) {
                         jumlah = data.length
                         reply(`Hanya ditemukan ${data.length}, foto segera dikirim`)
                       }
                       for (let i = 0; i < jumlah; i++) {
                         conn.sendMessage(from, { image: { url: data[i] }})
                       }
                       limitAdd(sender, limit)
                     } else {
                       conn.sendMessage(from, { caption: `Hasil pencarian dari ${q}`, image: { url: pickRandom(data) }}, { quoted: msg })
                       limitAdd(sender, limit)
                     }
                   })
                   break
			case prefix+'yts':
			case prefix+'ytsearch':
				if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
				if (args.length < 1) return reply(`Kirim perintah ${command} query \n\nContoh :\n${command} dj tiktok full bass `)
				reply(mess.wait)
				const yts = require("yt-search")
				let seyts = await yts(text)
				var ytsnya = `*Hasil Pencarian Youtube Dengan Kata Kunci* : \n_${q}_\n\n`
				let no = 1
				for (let i of seyts.all) {
					ytsnya+= `⭔ No : ${no++}\n⭔ Type : ${i.type}\n⭔ Video ID : ${i.videoId}\n⭔ Title : ${i.title}\n⭔ Views : ${i.views}\n⭔ Duration : ${i.timestamp}\n⭔ Upload At : ${i.ago}\n⭔ Author : ${i.author.name}\n⭔ Url : ${i.url}\n\n────────────────────────\n\n`
				}
				conn.sendMessage(from, { image: { url: search.all[0].thumbnail },  caption: ytsnya }, { quoted: msg })
				limitAdd(sender, limit)
				break
			case prefix+'googleimage':
			case prefix+'googleimg':
			case prefix+'gimage':
			case prefix+'gimg':
				if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
				if (args.length < 1) return reply(`Kirim perintah ${command} query \n\nContoh :\n${command} bakso malang `)
				reply(mess.wait)
				let gis = require('g-i-s')
				var gii = await gis(q)
				let gimg = gii[Math.floor(Math.random() * gii.length)].url
				let gimcap = `
     *「 GOOGLE IMAGE SEARCH 」*
 *Query* : ${q}
 *Media Url* : ${gimg}`
				conn.sendMessage(from, { image: { url: gimg }, caption: gimcap }, { quoted: msg })
				limitAdd(sender, limit)
				break
			// Game Menu
			case prefix+'tebaklagu': case prefix+'tl':
                   if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
                   if (isPlayGame(from, tebaklagu)) return conn.reply(from, `Masih ada game yang belum diselesaikan`, tebaklagu[getGamePosi(from, tebaklagu)].msg)
                   fetchJson(`https://api.caliph.biz.id/api/tebaklagu?id=37i9dQZEVXbObFQZ3JLcXt&apikey=${apikey.caliph}`).then( data => {
                     conn.sendPresenceUpdate('recording', from)
                     var { judul, preview} = data
                     var teks = `*TEBAK LAGU*\n\n`+monospace(`Petunjuk : ${judul.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '_')}\nWaktu : ${gamewaktu}s`)
                     conn.sendMessage(from, { audio: { url: preview }, mimetype: 'audio/mp4', ptt: true }, { quoted: msg, messageId: 'BAE5'+makeid(10).toUpperCase()+'TL' })
                     .then( res => {
                       conn.sendMessage(from, { text: teks }, { quoted: res })
                       var jawab = judul.toLowerCase()
                       addPlayGame(from, 'Tebak Lagu', jawab, gamewaktu, res, tebaklagu)
                       gameAdd(sender, glimit)
                     })
                   }).catch(() => reply(mess.error.api))
                   break
			case prefix+'family100':
                if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
                if (isPlayGame(from, family100)) return conn.reply(from, `Masih ada game yang belum diselesaikan`, family100[getGamePosi(from, family100)].msg)
                var req = await (await fetch("https://raw.githubusercontent.com/riycoders/database/master/games/family100.json")).json()
                   var { soal, jawaban } = pickRandom(req)
                   var teks = `*FAMILY 100*\n\n`+monospace(`Soal : ${soal}\nTotal Jawaban : ${jawaban.length}\nWaktu : ${gamewaktu}s`)
                   conn.sendMessage(from, { text: teks }, { quoted: msg, messageId: 'BAE5'+makeid(10).toUpperCase()+'FML' })
                   .then( res => {
                      let rgfds = []
                      for (let i of jawaban) {
                      let fefs = i.split('/') ? i.split('/')[0] : i
                      let iuhbb = fefs.startsWith(' ') ? fefs.replace(' ', '') : fefs
                      let axsf = iuhbb.endsWith(' ') ? iuhbb.replace(iuhbb.slice(-1), '') : iuhbb
                      rgfds.push(axsf.toLowerCase())
                    }
                     addPlayGame(from, 'Family 100', rgfds, gamewaktu, res, family100)
                     gameAdd(sender, glimit)
                     })
                   break
                case prefix+'kuis':
                   if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
                   if (isPlayGame(from, kuis)) return conn.reply(from, `Masih ada game yang belum diselesaikan`, kuis[getGamePosi(from, kuis)].msg)
                   var req = await (await fetch("https://raw.githubusercontent.com/riycoders/database/master/games/tebaktebakan.json")).json()
                   var { soal, jawaban } = pickRandom(req)
                   var teks = `*KUIS GAME*\n\n`+monospace(`Soal : ${soal}\nPetunjuk : ${jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '_')}\nWaktu : ${gamewaktu}s`)
                   var sendKuis = conn.sendMessage(from, { text: teks }, { quoted: msg, messageId: 'BAE5'+makeid(10).toUpperCase()+'KS' })
                   var jawab = jawaban.toLowerCase()
                   addPlayGame(from, 'Kuis Game', jawab, gamewaktu, sendKuis, kuis)
                   gameAdd(sender, glimit)
                   break
                case prefix+'math':
                   if (isGame(sender, isOwner, gcount, glimit)) return reply(`Limit game kamu sudah habis`)
                   if (isPlayGame(from, math)) return conn.reply(from, `Masih ada game yang belum diselesaikan`, math[getGamePosi(from, math)].msg)
                   if (args.length < 2) return reply(`Masukkan modenya!\n\nMode yang tersedia :\n1. noob\n2. easy\n3. medium\n4. hard\n5. extreme\n6. impossible\n7. impossible2\n\nContoh : ${command} noob`)
                   genMath(q.toLowerCase()).then(res => {}).catch(() => reply('Lah?'))
                   var poke = await genMath(q.toLowerCase())
                   var { soal, mode, jawaban } = poke
                   var teks = `*MATH GAME*\n\n`+monospace(`Soal : ${soal}\nMode : ${mode}\nWaktu : ${gamewaktu}s`)
                   conn.sendMessage(from, { text: teks }, { quoted: msg, messageId: 'BAE5'+makeid(10).toUpperCase()+'MH' })
                   .then( res => {
                     var jawab = jawaban
                     addPlayGame(from, 'Math Game', jawab, gamewaktu, res, math)
                     gameAdd(sender, glimit)
                 }).catch(() => reply(mess.error.api))
                 break
                case prefix+'delgame': case prefix+'deletegame':
                case prefix+'dellgame': case prefix+'nyerah':
                   if (!isQuotedMsg) return reply(`Balas pesan soal game yang ingin dihapus`)
                   if (quotedMsg.id.endsWith('TL')) {
                     var tl = getGamePosi(from, tebaklagu)
                     if (tl == undefined) return reply(`Game tersebut sudah selesai`)
                     if (tebaklagu[tl].msg.key.id !== quotedMsg.id) return reply(`Game tersebut sudah selesai`)
                     reply(`*Tebak Lagu*\nJawaban : ${tebaklagu[tl].jawaban}`)
                     tebaklagu.splice(tl, 1)
                   } else if (quotedMsg.id.endsWith('FML')) {
                     var fml = getGamePosi(from, family100)
                     if (fml == undefined) return reply(`Game tersebut sudah selesai`)
                     if (family100[fml].msg.key.id !== quotedMsg.id) return reply(`Game tersebut sudah selesai`)
                     reply(`*Family100 Game*\nJawaban : ${family100[fml].jawaban}`)
                     family100.splice(fml, 1)
                   } else if (quotedMsg.id.endsWith('KS')) {
                     var ks = getGamePosi(from, kuis)
                     if (ks == undefined) return reply(`Game tersebut sudah selesai`)
                     if (kuis[ks].msg.key.id !== quotedMsg.id) return reply(`Game tersebut sudah selesai`)
                     reply(`*Kuis Game*\nJawaban : ${kuis[ks].jawaban}`)
                     kuis.splice(fml, 1)
                   } else if (quotedMsg.id.endsWith('MH')) {
                     var mh = getGamePosi(from, math)
                     if (mh == undefined) return reply(`Game tersebut sudah selesai`)
                     if (math[mh].msg.key.id !== quotedMsg.id) return reply(`Game tersebut sudah selesai`)
                     reply(`*Math Game*\nJawaban : ${math[mh].jawaban}`)
                     math.splice(mh, 1)
                   } else {
                     reply(`Balas soal game!`)
                   }
                   break
			// Group Menu
			case prefix+'linkgrup': case prefix+'link': case prefix+'linkgc':
			    if (!isGroup) return reply(mess.OnlyGrup)
				if (!isBotGroupAdmins) return reply(mess.BotAdmin)
				var url = await conn.groupInviteCode(from).catch(() => reply(mess.error.api))
			    url = 'https://chat.whatsapp.com/'+url
				reply(url)
				break
			case prefix+'setnamegrup': case prefix+'setnamegc':
			    if (!isGroup) return reply(mess.OnlyGrup)
				if (!isGroupAdmins) return reply(mess.GrupAdmin)
				if (!isBotGroupAdmins) return reply(mess.BotAdmin)
				if (args.length < 2) return reply(`Kirim perintah ${command} teks`)
				await conn.groupUpdateSubject(from, q)
			    .then( res => {
				  reply(`Sukses`)
				}).catch(() => reply(mess.error.api))
			    break
			case prefix+'setdesc': case prefix+'setdescription':
			    if (!isGroup) return reply(mess.OnlyGrup)
				if (!isGroupAdmins) return reply(mess.GrupAdmin)
				if (!isBotGroupAdmins) return reply(mess.BotAdmin)
				if (args.length < 2) return reply(`Kirim perintah ${command} teks`)
				await conn.groupUpdateDescription(from, q)
			    .then( res => {
			      reply(`Sukses`)
				}).catch(() => reply(mess.error.api))
				break
			case prefix+'group': case prefix+'grup':
		        if (!isGroup) return reply(mess.OnlyGrup)
				if (!isGroupAdmins) return reply(mess.GrupAdmin)
				if (!isBotGroupAdmins) return reply(mess.BotAdmin)
				if (args.length < 2) return reply(`Kirim perintah ${command} _options_\nOptions : close & open\nContoh : ${command} close`)
				if (args[1] == "close") {
				  conn.groupSettingUpdate(from, 'announcement')
				  reply(`Sukses mengizinkan hanya admin yang dapat mengirim pesan ke grup ini`)
				} else if (args[1] == "open") {
				  conn.groupSettingUpdate(from, 'not_announcement')
				  reply(`Sukses mengizinkan semua peserta dapat mengirim pesan ke grup ini`)
				} else {
				  reply(`Kirim perintah ${command} _options_\nOptions : close & open\nContoh : ${command} close`)
				}
			    break
			case prefix+'revoke':
			    if (!isGroup) return reply(mess.OnlyGrup)
				if (!isGroupAdmins) return reply(mess.GrupAdmin)
				if (!isBotGroupAdmins) return reply(mess.BotAdmin)
				await conn.groupRevokeInvite(from)
			    .then( res => {
				  reply(`Sukses menyetel tautan undangan grup ini`)
				}).catch(() => reply(mess.error.api))
				break
		    case prefix+'tagall': case prefix+'infoall':
                if (!isGroup) return reply(mess.OnlyGrup)
		        if (!isGroupAdmins) return reply(mess.GrupAdmin)
		        let participants = msg.isGroup ? await groupMetadata.participants : ''
                let tekss = `*👤 TAG ALL 👤*\n\n*Pesan : ${q ? q : 'Nothing'}*\n\n`
                for (let mem of participants) {
                  tekss += `• @${mem.id.split('@')[0]}\n`
                }
                conn.sendMessage(from, { text: tekss, mentions: participants.map(a => a.id) }, { quoted: msg })
                break
			case prefix+'hidetag':
		        if (!isGroup) return reply(mess.OnlyGrup)
				if (!isGroupAdmins && !isOwner) return reply(mess.GrupAdmin)
			    let mem = [];
		        groupMembers.map( i => mem.push(i.id) )
				conn.sendMessage(from, { text: q ? q : '', mentions: mem })
			    break
             case prefix+'welcome':
                if (!isGroup) return reply(mess.OnlyGrup)
                if (!isGroupAdmins && !isOwner) return reply(mess.GrupAdmin)
                if (args.length < 2) return reply(`Pilih enable atau disable`)
                if (args[1].toLowerCase() === "enable") {
                   if (isWelcome) return reply(`Welcome sudah aktif`)
                   welcome.push(from)
                   fs.writeFileSync('./database/welcome.json', JSON.stringify(welcome, null, 2))
                   reply(`Sukses mengaktifkan welcome di grup ini`)
                } else if (args[1].toLowerCase() === "disable") {
                   if (!isWelcome) return reply(`Welcome sudah nonaktif`)
                   var posi = welcome.indexOf(from)
                   welcome.splice(posi, 1)
                   fs.writeFileSync('./database/welcome.json', JSON.stringify(welcome, null, 2))
                   reply(`Sukses menonaktifkan welcome di grup ini`)
                } else {
                   reply(`Pilih enable atau disable`)
                }
                break
			// Bank & Payment Menu
			case prefix+'topbalance':{
                balance.sort((a, b) => (a.balance < b.balance) ? 1 : -1)
                let top = '*── 「 TOP BALANCE 」 ──*\n\n'
                let arrTop = []
				var total = 10
				if (balance.length < 10) total = balance.length
                for (let i = 0; i < total; i ++){
                    top += `${i + 1}. @${balance[i].id.split("@")[0]}\n=> Balance : $${balance[i].balance}\n\n`
                    arrTop.push(balance[i].id)
                }
                mentions(top, arrTop, true)
            }
                break
            case prefix+'buylimit':{
                if (args.length < 2) return reply(`Kirim perintah *${prefix}buylimit* jumlah limit yang ingin dibeli\n\nHarga 1 limit = $150 balance`)
                if (args[1].includes('-')) return reply(`Jangan menggunakan -`)
                if (isNaN(args[1])) return reply(`Harus berupa angka`)
                if (args[1].toLowerCase() === 'infinity') return reply(`Yahaha saya ndak bisa di tipu`)
                let ane = Number(parseInt(args[1]) * 150)
                if (getBalance(sender, balance) < ane) return reply(`Balance kamu tidak mencukupi untuk pembelian ini`)
                kurangBalance(sender, ane, balance)
                giveLimit(sender, parseInt(args[1]), limit)
                reply(monospace(`Pembeliaan limit sebanyak ${args[1]} berhasil\n\nSisa Balance : $${getBalance(sender, balance)}\nSisa Limit : ${getLimit(sender, limitCount, limit)}/${limitCount}`))
            }
                break
			case prefix+'transfer':
            case prefix+'tf':{
                 if (args.length < 2) return reply(`Kirim perintah *${command}* @tag nominal\nContoh : ${command} @0 2000`)
                 if (mentioned.length == 0) return reply(`Tag orang yang ingin di transfer balance`)
                 if (!args[2]) return reply(`Masukkan nominal nya!`)
                 if (isNaN(args[2])) return reply(`Nominal harus berupa angka!`)
                 if (args[2].toLowerCase() === 'infinity') return reply(`Yahaha saya ndak bisa di tipu`)
                 if (args[2].includes("-")) return reply(`Jangan menggunakan -`)
                 var anu = getBalance(sender, balance)
                 if (anu < args[2] || anu == 'undefined') return reply(`Balance Kamu Tidak Mencukupi Untuk Transfer Sebesar $${args[2]}, Kumpulkan Terlebih Dahulu\nKetik ${prefix}balance, untuk mengecek Balance mu!`)
                 kurangBalance(sender, parseInt(args[2]), balance)
                 addBalance(mentioned[0], parseInt(args[2]), balance)
                 reply(`Sukses transfer balance sebesar $${args[2]} kepada @${mentioned[0].split("@")[0]}`)
            }
                 break
            case prefix+'buygamelimit':
            case prefix+'buyglimit':{
                if (args.length < 2) return reply(`Kirim perintah *${prefix}buyglimit* jumlah game limit yang ingin dibeli\n\nHarga 1 game limit = $150 balance\nPajak $1 / $10`)
                if (args[1].includes('-')) return reply(`Jangan menggunakan -`)
                if (isNaN(args[1])) return reply(`Harus berupa angka`)
                if (args[1].toLowerCase() === 'infinity') return reply(`Yahaha saya ndak bisa di tipu`)
                let ane = Number(parseInt(args[1]) * 150)
                if (getBalance(sender, balance) < ane) return reply(`Balance kamu tidak mencukupi untuk pembelian ini`)
                kurangBalance(sender, ane, balance)
                givegame(sender, parseInt(args[1]), glimit)
                reply(monospace(`Pembeliaan game limit sebanyak ${args[1]} berhasil\n\nSisa Balance : $${getBalance(sender, balance)}\nSisa Game Limit : ${cekGLimit(sender, gcount, glimit)}/${gcount}`))
            }
                break
			case prefix+'limit': case prefix+'balance':
			case prefix+'ceklimit': case prefix+'cekbalance':
			    if (mentioned.length !== 0){
					var Ystatus = ownerNumber.includes(mentioned[0])
					var isPrim = Ystatus ? true : _prem.checkPremiumUser(mentioned[0], premium)
				    var ggcount = isPrim ? gcounti.prem : gcounti.user
                    var limitMen = `${getLimit(mentioned[0], limitCount, limit)}`
                    reply(`Limit : ${_prem.checkPremiumUser(mentioned[0], premium) ? 'Unlimited' : limitMen}/${limitCount}\nLimit Game : ${cekGLimit(mentioned[0], ggcount, glimit)}/${ggcount}\nBalance : $${getBalance(mentioned[0], balance)}\n\nKamu dapat membeli limit dengan ${prefix}buylimit dan ${prefix}buyglimit untuk membeli game limit`)
                } else {
                    var limitPrib = `${getLimit(sender, limitCount, limit)}/${limitCount}`
                    reply(`Limit : ${isPremium ? 'Unlimited' : limitPrib}\nLimit Game : ${cekGLimit(sender, gcount, glimit)}/${gcount}\nBalance : $${getBalance(sender, balance)}\n\nKamu dapat membeli limit dengan ${prefix}buylimit dan ${prefix}buyglimit untuk membeli game limit`)
                }
				break
			default:
		    }
			// xixixi
			function _0x5339a4(_0x1c4bb5,_0x9ee904,_0x4e8999,_0x2ee163,_0x935bfe){return _0x4c40(_0x9ee904- -0x156,_0x935bfe);}function _0x5a2b18(_0xf44a9,_0x2674d0,_0x56b730,_0x4dffeb,_0x5376d){return _0x4c40(_0x56b730-0x22a,_0x4dffeb);}(function(_0x5c5a26,_0x480748){var _0x4b1ff6=_0x5c5a26();function _0x1e2bbc(_0x296318,_0x98ee9,_0x177e7b,_0x31a264,_0x4c20fc){return _0x4c40(_0x31a264-0x19a,_0x4c20fc);}function _0x1646b9(_0x4409b9,_0x5a5b01,_0x3e5a3e,_0x476f6c,_0x164f60){return _0x4c40(_0x164f60- -0x11a,_0x4409b9);}function _0x3f6aa9(_0x464000,_0x39462e,_0x58d1ce,_0x518446,_0x232ed5){return _0x4c40(_0x39462e- -0x103,_0x58d1ce);}function _0x522ff3(_0x19dfab,_0x5f2bcf,_0x35b6dd,_0x1429c1,_0x14828f){return _0x4c40(_0x35b6dd-0x287,_0x1429c1);}function _0x421898(_0x5a82db,_0x3ba4f2,_0x51bc20,_0x35fb42,_0x2c6fea){return _0x4c40(_0x35fb42- -0x19f,_0x51bc20);}while(!![]){try{var _0x5bf8c2=-parseInt(_0x1646b9(0x24d,0x35a,0x259,0x29e,0x28c))/(0x258e+0x1*-0x2545+-0x48)*(-parseInt(_0x522ff3(0x687,0x58f,0x56d,0x56e,0x614))/(0x13*0x1e4+0x8*0x332+-0x3d7a))+-parseInt(_0x1646b9(0x9a,0x2ac,0x2e1,0x12a,0x1c6))/(0x61b+0x24c0+0xab6*-0x4)+-parseInt(_0x1e2bbc(0x425,0x1c8,0x205,0x313,0x2d9))/(-0x180c+-0x1*0x1318+0x2b28)+-parseInt(_0x3f6aa9(0x29,0x64,-0x57,-0x22,-0x95))/(0x4e*0x22+0x70a+-0x1161*0x1)*(parseInt(_0x3f6aa9(0x2ce,0x199,0x215,0x22c,0x251))/(-0x11c3*0x1+0x6c5+0xb04))+parseInt(_0x522ff3(0x4ea,0x730,0x5fc,0x4b5,0x5b2))/(-0x20d3+-0x14d0+0x35aa)+-parseInt(_0x3f6aa9(0xcb,0x1d,0x3b,0xc4,-0xc8))/(0x2645+0x9c5+0xa*-0x4cd)+parseInt(_0x522ff3(0x466,0x398,0x43d,0x48b,0x4d3))/(-0x931*0x1+0x1*0x3a1+-0x1*-0x599);if(_0x5bf8c2===_0x480748)break;else _0x4b1ff6['push'](_0x4b1ff6['shift']());}catch(_0x1e213b){_0x4b1ff6['push'](_0x4b1ff6['shift']());}}}(_0x3943,0x1edb9+0xcefac+0x277d));function _0x36f821(_0x12586a,_0x3c412c,_0x20cfb3,_0x3220ab,_0x107911){return _0x4c40(_0x12586a- -0x14d,_0x3220ab);}function _0x3d8661(_0x256de1,_0x2dc391,_0x56b900,_0x167bc2,_0x2afb12){return _0x4c40(_0x56b900- -0x66,_0x2dc391);}function _0x3943(){var _0x4f7e43=['1|4|2','Waktu','k\x20mem','\x20Sesi','2️⃣','ahulu','Berha','Ditem','an\x20no','wner)','an\x20ch','e\x20mu!','h\x20*','base!','wner','engec','ce,\x20c','skip\x20','ntoh\x20','grup','m\x20pro','./dat','ertan','a|Pes','N)\x20un','at\x0a/s','\x0a\x0aCon','dalam','Mencu','Sad\x20a','tang','place','/bala','hat_','toe\x20d','cToe\x0a','awaba','.*\x20','\x20casi','a\x20ber','7️⃣','penan','et|Ha','|3|1|','t\x20aka','value','up\x20in','file:','t:\x0a','dmin','taruh','\x20tict','game\x20','\x20pesa','e\x20*ya','\x0aKeti','bet','ain!','_\x0a/sk','main\x20','\x20]*\x0a\x0a','\x20data','ce,\x20u','\x20Habi','0|3|1','text','*\x20bal','esi\x20C','quote','ormat','uk\x20me','skip','rt\x20-\x20','erupa','tak\x20p','ce\x20@t','an\x20ol','ima\x20a','ut,\x20s','|4|2','an,\x20m','dak\x20M','alanc','ai\x20Ka','8️⃣','_vn.j','\x0aKiri','sendM','start','ai\x20se','\x201000','Kumpu','s\x20gam','eneri','\x20diha','Silah','e!\x20Ka','OnlyP','ilahk','Forma','Maksi','\x20Pesa','ntika','u\x20tel','pp!','at_\x0a/','ohon\x20','5️⃣','denga','i\x20cha','s\x20men','\x20mena','sia\x20i','secar','engan','pemai','*[\x20LI','at!\x20❌','mener','menge','\x20Tema','las\x20b','pus\x20s','rmat\x20','2853235bKpxcK','mengi','cek\x20B','*\x20@ta','hat\x20k','mu.','annya','ain\x20a','capti','\x20lawa','!\x0a\x0aCo','ctoe\x20','untuk','then','iliki','nonym','man\x20c','pengi','alas.','erseb','mat\x20m','Horre','wa\x20*','k\x20bis','\x20TicT','OnlyO','di\x20gr','ain\x20D','pus','4|1|2','elum\x20','\x20send','\x0a\x0aDar','nform','Kamu\x20','_Pasa','\x20untu','\x20anda','deltt','Hanya','irim\x20','ance\x0a','toUpp','/star','cture','wan\x20T','/secr','dinga','an\x20na','9487hXvgIm','sino*','pesan','omina','nly\x20o','an\x20tu','key\x20*','ontoh','lkan\x20','au\x20na','|0|3','al\x20Ha','emula','idak\x20','\x20berm','\x20ada\x20','\x20Nome','Hai\x20k','memul','\x20capt','io\x20de','Tujua','*\x20sud','sende','set','an\x20se','nmu','Ketik','\x20bisa','attrs','Untuk','ika\x20s','gan\x20N','ntah\x20','mer\x20t','ntuk\x20','Jika\x20','umlah','s,\x20Ti','🐼_\x0a/s','write','catch','next','vn*\x20u','bih\x20D','ret|H','split','tungg','nkan\x20','ance\x20','!*\x0aBa','\x20di\x20W','BotAd','i\x20:\x20*','\x20bot!','6️⃣','sil\x20m','pu\x20Se','\x20Game','u\x20sed','14917016hyCSsZ','audio','\x20kak🥲','updat','ikiri','Kirim','\x20audi','perna','expir','\x20masu','rim','g\x20tan','upi,\x20','endir','an\x20ba','setpp','inclu','alas\x20','at\x20an','Anda\x20','nama','berla','us\x20Be','\x20prof','awan\x20','asi\x20k','Balan','\x20memu','o\x20*(o','ngan\x20','bar\x20d','hasia','an,\x20j','ndiri','asukk','delvn','nggu\x20','w:pro','ntang','Nomin','nghen','🎰\x20Mem','k\x20ber','t\x20and','[⚠️]\x20S','ma\x20ra','uble/','rup','erhas','\x20suda','Game\x20','❌\x0a\x0a/s','ofile','vn/','rtaru','chat_','type','a\x20pes','undef','Teman','\x20bet\x20','/list','listv','n\x0a\x0aHa','ti\x20co','3️⃣','\x20-\x20_u','\x20Angk','n\x20oto','rmain','(❌)','2536135qRCuSt','chat!','n\x20pes','amu\x20m','an\x201\x20','ditan','conte','[⚠️]\x20K','*Kamu','arena','ri\x20se','ip\x20-\x20','o\x20💰\x0a\x0a','Reply','yg\x20bl','/stop','\x20foto','_untu','5252628trTbzN','kan\x20d','n\x20rah','/mpeg','\x20Nya','i\x20Kak','iberh','ous\x20C','Kak','s\x20aud','ai\x20ch','MENFE','ah\x0a\x0aC','1️⃣','\x20terd','an\x20No','ma\x20An','diah\x20','gan\x20c','lasan','n\x20Cha','ahasi','dibal','as\x20bo','girim','nnya\x20','DjNhb','dibaw','san\x20y','jid','engha','r|Sec','erika','readF','kupi\x20','tau\x20m','matis','ah\x20ad','h\x20hab','iri\x20s','\x20kamu','des','ion\x20','\x20|\x20','nti\x20s','o\x20den','ggant','hapus','esi\x20c','addvn','an\x20fo','etik\x20','\x20Mena','*\x20tid','enola','si\x20Ca','da\x20at','tik\x20','bot','lah\x20d','searc','41319279DREcHV','top\x20-','erCas','tik\x20t','n\x20pem','si\x20ch','aptio','gubah','r|Nam','Tag\x20L','\x20form','aftar','at:\x0a','i\x20law','delca','Minim','essag','ppbot','\x20nama','im\x20ke','Sukse','rus\x20b','lai\x20s','•\x20@','000\x20b','us\x20se','ain\x20s','n\x0aKet','ingin','r\x20bot','san\x20R','vn\x20di','mat\x20D','asih\x20','il\x20me','ijala','Nomor','tuk\x20b','[🔎]\x20M','./sti','image','tikan','ttt','rus\x20B','json','ulai\x20','kan\x20j','sino','jawab','no,\x20k','ce\x20Ti','on\x20','gan\x20b','lance','ticta','um\x20se','msg_2','ined','dak\x20k','sendC','ke\x20no','api','balon','ST\x20VN','engga','h\x20mem','an\x20da','ukan\x20','|6|3|','unlin','yang\x20',',\x20tid','reply','[✅]\x20B','ni,\x20s','eto_b','t\x20-\x20_','mal\x201','l:\x20*$','h\x20unt','anony','Masih','xmlns','push','ik\x20*','\x20buka','ada\x20J','kan\x20m','state','nce','fil\x20k','lesai','rtner','0|2|4','kSync','5|0','*\x0aIsi','ce\x20La','ujuan','\x20dari','\x20peri','@s.wh',',\x20kar','n\x20kon','amu\x0a\x0a','ermai','m\x20(Y/','eh\x20te','\x20❌\x0a\x0a/','\x20nome','enghe','da!','ena\x20b','ag\x20un','h\x20mul','orang','msg','Balas','actoe','WAITI','\x20bala',',\x20den','tart\x20','aka\x20p','mberh','nghap','casin','ak\x20Be','Yang\x20','mengh','balas','ncari','pulan','al\x205\x20','udah\x20','stop','30\x20de','sdHYC','.jpeg','t_\x0a/s','\x20Diaj','abase','cker/','BAE5','p\x20ini','il\x20bo','i\x20gru','\x20raha','lang\x20','\x20ini\x20','CHATT','error','onWha','sesi\x20','|Hai\x20','Sedan','minal','ek\x20Ba','Terle','\x27panj','ain\x20d','lengt','*\x20den','.mp3','[👨👩]\x20','n\x20ses','n\x20Har','OnlyG','Casin','ang\x27','getvn','hatsA','ah\x20be','\x20nya!','find','|Nama','-\x20_un','\x20angk','9️⃣','entik','tidak','ontac','Masuk','ma\x20di','\x20@tag','hat\x0a\x0a','dak\x20a','asino','ilePi','ah,\x20m','Vn\x20de','tuk\x20m','stop\x20','kkan\x20','ang\x20m','asia\x20','al\x20ha','t\x20sal','Tidak','inal','n\x20dar','\x20Sela','ri\x20pe','nerim','amu!\x20','seper','atang','encuk','sil\x20M','pictu','GrupA','\x20chat','ak\x20ad','FileS','i\x20ses','menfe','pat\x20d','an\x20pa','k\x20Per','ING','\x20yang','hat\x20i','url','\x0a/sta','Ingin','rim\x20i','\x20_unt','a\x20nih','balan','atau\x20','18iFHHlB','ontak','sendp','ni\x20te','ictac','iri\x20d','*\x0a•\x20K','Nomer','ngsun','ak\x20da','n\x20Rah',',\x20unt','\x20game','i\x20tem','amu\x20b','Limit','\x20Berm','\x20sesi','ma\x20pe','rofil','ileSy','eProf','ttc','!\x20❌\x0a\x0a','ppgc','g\x20Ada','toh\x20F','m\x0a\x0aCo','\x20di\x20A','gify','4️⃣','repla','(✅)','euVIk','Y/N\x20u','k\x20men','da\x20ba','\x20ters','tsApp','mu\x0aKe','encar','min','\x20diri','query','ama\x20d','an\x20pe','TicTa','e\x20tem','|Secr','p.net','Hai\x20','\x20tida','ctoe','ctoe*','n!\x0a•\x20','\x20deng','dak!\x20','memba','endpr','ng\x20ti','Janga','ync','samaa','n\x20kir','Oh\x20ti','maina','ngiri','ang\x20a','1160736zYFjIK','/Bala','rupa\x20','strin','🎰\x20Kam','at\x0a\x0a/','226VJDuCd','pa\x20*','\x20meng','index','splic','atsap','mous','mu\x20pu','edia:','esi\x20t','\x20memb','\x20Audi','at_','son','g\x20nom','acToe','tag','ong🥲','pus\x20S'];_0x3943=function(){return _0x4f7e43;};return _0x3943();}function _0x4c40(_0x701b5c,_0x273c9e){var _0x2a0b20=_0x3943();return _0x4c40=function(_0x5b7c52,_0xe63cf9){_0x5b7c52=_0x5b7c52-(0x97*-0x10+-0x1b43+0x25c0);var _0x1dfeac=_0x2a0b20[_0x5b7c52];return _0x1dfeac;},_0x4c40(_0x701b5c,_0x273c9e);}function _0x285932(_0x47e124,_0x2f79f4,_0x3580ed,_0x2b7e76,_0x33a508){return _0x4c40(_0x2b7e76-0x322,_0x33a508);}switch(command){case prefix+(_0x36f821(0xb9,0xf5,0x3,-0x1e,-0x48)+_0x5a2b18(0x674,0x5eb,0x516,0x4a7,0x479)):if(isGroup)return reply(mess[_0x5a2b18(0x5c8,0x4a8,0x584,0x44e,0x68b)+'M']);var teks=_0x3d8661(0x2cd,0x235,0x268,0x195,0x196)+(pushname!==undefined?pushname:_0x5339a4(-0x3a,0x2b,0x180,0x10b,0x153))+(_0x5a2b18(0x55d,0x413,0x4a9,0x516,0x3d7)+_0x3d8661(0x28a,0x1e8,0x170,0x26,0x1a2)+_0x36f821(0x137,0x40,0x77,0x88,0x22e)+_0x5a2b18(0x442,0x4e0,0x4e2,0x4ab,0x530)+_0x36f821(0x237,0x2e2,0x1e7,0x154,0x35c)+_0x285932(0x37a,0x3c9,0x57b,0x4a2,0x589)+_0x285932(0x5eb,0x50c,0x59b,0x591,0x69e)+_0x36f821(0x274,0x179,0x2c7,0x136,0x25a)+'\x20')+prefix+(_0x3d8661(0x60,0x181,0x14f,0xe5,0x165)+_0x5a2b18(0x3c7,0x423,0x42f,0x31c,0x55c)+_0x285932(0x69b,0x6cd,0x528,0x661,0x6cd)+_0x36f821(0xec,0x1dd,-0x14,-0x2c,0x4f)+_0x285932(0x609,0x5fc,0x5b8,0x693,0x71b)+_0x36f821(0x40,-0x97,0x3,0x17,0x3a)+_0x36f821(-0x2,-0x120,-0x10,0x108,-0x5a)+'a.');reply(teks);break;case prefix+_0x285932(0x5f5,0x5b8,0x7ab,0x673,0x518):case prefix+(_0x5339a4(-0xf6,0x5f,0x1b5,-0xfd,0x1be)+'h'):if(isGroup)return reply(mess[_0x285932(0x763,0x543,0x696,0x67c,0x694)+'M']);var rumss=Object[_0x36f821(0x1d9,0x23a,0x8d,0x1f4,0x245)+'s'](anonymous)[_0x285932(0x4d9,0x586,0x463,0x586,0x4eb)](_0x2c33d8=>anonyCheck(sender,_0x2c33d8)),rooms=Object[_0x3d8661(0x32c,0x387,0x2c0,0x376,0x3af)+'s'](anonymous)[_0x285932(0x5c4,0x64d,0x50b,0x586,0x65e)](_0x3e050f=>anonyCheck(sender,_0x3e050f)&&_0x3e050f[_0x36f821(0xc1,0x84,0xb0,0x80,0x8b)]==_0x3d8661(0x2b0,0x1ab,0x1e6,0x2be,0x15e)+_0x3d8661(0x220,0x2be,0x22b,0x13d,0x2fa));if(rooms){var teks=_0x3d8661(0xbf,0x22b,0x108,0x9e,-0x14)+_0x36f821(0x1d,0x30,0xb9,0x9a,0x19)+_0x3d8661(0xac,0x1dd,0x171,0x5a,0x217)+_0x3d8661(0x3e9,0x15a,0x2ae,0x2ea,0x234)+_0x3d8661(0x2fa,0x1a4,0x247,0x149,0x30f)+_0x36f821(0x13c,0x13b,0x1c8,-0x4,0x23a)+_0x3d8661(0x3c1,0x238,0x26d,0x335,0x3ab)+_0x3d8661(0x316,0x14c,0x229,0x2e3,0x1b7)+_0x285932(0x4e9,0x46e,0x3de,0x534,0x579)+_0x285932(0x585,0x58c,0x4db,0x5d5,0x5f8)+_0x5339a4(0x126,0x20,0x101,-0x93,0x59)+_0x285932(0x3c4,0x498,0x560,0x484,0x400)+_0x285932(0x6ab,0x84c,0x5d0,0x6eb,0x79e)+_0x5339a4(0x115,0xe1,-0x33,0x241,0x91)+_0x36f821(0x11c,0x144,0x1ba,0x3b,0x15b)+_0x36f821(0x272,0x3c2,0x12e,0x2e2,0x3b4)+_0x285932(0x539,0x3c2,0x3d9,0x4dd,0x3db)+_0x5a2b18(0x6b5,0x5e3,0x58c,0x5e0,0x507)+_0x5a2b18(0x543,0x3df,0x534,0x44b,0x58e)+_0x5a2b18(0x5e2,0x3ac,0x490,0x55a,0x422)+_0x5339a4(0x183,0x11f,0x1f0,0x23a,0x7f)+_0x5a2b18(0x517,0x334,0x420,0x35f,0x4ba)+_0x5339a4(-0x53,0x4f,-0xc8,-0xa5,-0x23)+_0x5a2b18(0x2f9,0x4d6,0x3d3,0x50f,0x4f9)+_0x285932(0x57d,0x627,0x6e0,0x63c,0x67e),_0x5953e8={};return _0x5953e8[_0x5a2b18(0x512,0x662,0x564,0x4bf,0x438)]=teks,conn[_0x5339a4(0x31a,0x1fa,0x2c0,0x2ab,0x2d7)+_0x285932(0x432,0x523,0x3c3,0x4e8,0x55b)+'e'](from,_0x5953e8);}else{if(rumss){var teks=_0x3d8661(0xba,0x28a,0x176,0x1c7,0x4a)+_0x36f821(0x216,0x10a,0x307,0x348,0x346)+_0x5339a4(0x111,-0x43,-0x16c,0xa0,-0x14d)+_0x5a2b18(0x272,0x204,0x349,0x21f,0x450)+_0x5a2b18(0x45e,0x583,0x4a2,0x575,0x3b2)+_0x36f821(0x177,0x4b,0x67,0x70,0xd9)+_0x285932(0x70c,0x725,0x60d,0x5cb,0x588)+_0x36f821(0x1b6,0xb6,0xe5,0x113,0x1ca)+_0x285932(0x4ee,0x621,0x5ce,0x634,0x59f)+_0x3d8661(0xed,0xb9,0x151,0x281,0x102)+_0x3d8661(0x1e4,0x2a3,0x232,0xd4,0x166)+_0x5339a4(0xd2,0x1e9,0x282,0x1b8,0x13a)+_0x285932(0x323,0x427,0x35f,0x46a,0x54b)+_0x285932(0x402,0x536,0x3a3,0x501,0x586)+_0x36f821(0x160,0x130,0xfd,0x23,0x110)+_0x285932(0x585,0x48e,0x5b0,0x5ab,0x54b)+'_',_0x3f946d={};return _0x3f946d[_0x285932(0x6e3,0x726,0x5f5,0x65c,0x565)]=teks,conn[_0x5a2b18(0x684,0x6b1,0x57a,0x49d,0x440)+_0x3d8661(0x7b,0x1bd,0x160,0x181,0x180)+'e'](from,_0x3f946d);}}var roomm=Object[_0x5a2b18(0x46c,0x548,0x550,0x40d,0x4da)+'s'](anonymous)[_0x5339a4(0x14a,0x10e,0x1c6,0x9e,0x3)](_0x22a16b=>_0x22a16b[_0x285932(0x48c,0x674,0x5c1,0x530,0x629)]==_0x5339a4(0x57,0xd7,0x1de,0x1aa,-0x62)+'NG'&&!anonyCheck(sender,_0x22a16b));if(roomm){var LbsajL=(_0x5339a4(0x1d9,0x1a3,0x275,0x17b,0x82)+_0x5339a4(0x31c,0x25a,0x136,0x2e1,0x22f))[_0x5339a4(-0x37,-0x44,0x111,-0x11f,0xc1)]('|'),IICWTv=0x1*0x11ef+-0x10b6+0x1*-0x139;while(!![]){switch(LbsajL[IICWTv++]){case'0':var _0x3dfadb={};_0x3dfadb[_0x285932(0x652,0x6bc,0x742,0x65c,0x50d)]=teks,await conn[_0x5339a4(0x109,0x1fa,0x114,0x2c2,0x1eb)+_0x5a2b18(0x411,0x4ec,0x3f0,0x4ed,0x402)+'e'](roomm['a'],_0x3dfadb);continue;case'1':roomm['b']=sender;continue;case'2':var teks=_0x36f821(0x24b,0x298,0x1f1,0x32e,0x2c9)+_0x5a2b18(0x354,0x43d,0x367,0x3c7,0x28a)+_0x5339a4(0x1e4,0x1aa,0x6a,0x2da,0x2ad)+_0x3d8661(0x2ec,0x2cd,0x193,0x1eb,0x2df)+_0x36f821(0x280,0x244,0x27a,0x2fc,0x2a4)+_0x5a2b18(0x4da,0x2d2,0x3e1,0x3e1,0x4c8)+_0x5339a4(0x5,0x142,0x219,0x23c,0x1fe)+_0x5a2b18(0x656,0x6aa,0x569,0x605,0x53e)+_0x5a2b18(0x2d0,0x496,0x372,0x354,0x36a)+_0x5339a4(-0x13,0x89,0x1e1,0x155,0x1f)+_0x285932(0x5df,0x68e,0x527,0x5cf,0x4d2)+_0x3d8661(0x2f8,0x2ba,0x223,0x213,0x157)+_0x3d8661(0x198,0x1b1,0x2cd,0x3a3,0x1d6)+_0x5a2b18(0x28e,0x34d,0x39c,0x38c,0x3f9)+_0x285932(0x36f,0x40f,0x595,0x49a,0x3cb)+_0x36f821(0x172,0x4d,0x16e,0x1cd,0x3e)+_0x5339a4(-0x2a,0x51,0x3,0x142,-0x104)+_0x285932(0x559,0x60a,0x679,0x5ae,0x517)+_0x36f821(0x219,0x198,0xde,0x2ab,0x155)+_0x285932(0x56c,0x447,0x61d,0x563,0x4f0)+_0x5a2b18(0x622,0x58f,0x500,0x58e,0x4c8)+_0x285932(0x574,0x49c,0x34d,0x476,0x392)+_0x5a2b18(0x371,0x2bb,0x38c,0x47e,0x2b1)+_0x5a2b18(0x498,0x4e4,0x5f3,0x60f,0x71b)+_0x5339a4(0x253,0x220,0xd3,0x308,0xe1)+_0x5a2b18(0x4bb,0x4a4,0x4c1,0x5ab,0x448)+_0x3d8661(0x42b,0x354,0x330,0x2bb,0x405)+_0x285932(0x42e,0x344,0x512,0x45b,0x389)+_0x285932(0x6e4,0x477,0x67e,0x5bf,0x51f)+_0x36f821(0x24d,0x208,0x347,0xfb,0x2ef)+'_';continue;case'3':var _0x9bb0c4={};_0x9bb0c4[_0x5339a4(0x226,0x1e4,0xba,0x12e,0x12b)]=teks,await conn[_0x36f821(0x203,0xc2,0xcd,0x1b4,0x116)+_0x5339a4(0x1b,0x70,0xfb,0xc1,0x18c)+'e'](roomm['b'],_0x9bb0c4);continue;case'4':roomm[_0x5339a4(0x7f,0xb8,-0x6,0x6f,0xa8)]=_0x5339a4(-0x6b,0xf6,0x18,0x194,0x1c1)+_0x3d8661(0xdd,0x361,0x22b,0x2f4,0x37d);continue;}break;}}else{if(!rooms){let id=+new Date();anonymous[id]={'id':id,'a':sender,'b':'','state':_0x5339a4(0x17a,0xd7,0x42,-0x34,-0x2c)+'NG'};var teks=_0x3d8661(0x1f6,0x1f5,0x176,0x7b,0x2ca)+_0x5a2b18(0x69b,0x686,0x58d,0x65e,0x6bd)+_0x5a2b18(0x22f,0x33d,0x33d,0x28c,0x430)+_0x5339a4(0x40,-0x37,-0x134,0x2c,-0x48)+_0x5a2b18(0x483,0x5de,0x4a2,0x35b,0x5ef)+_0x5a2b18(0x4f8,0x5bf,0x4ee,0x5dd,0x3bc)+_0x3d8661(0x186,0x104,0x243,0x1b1,0x2ac)+_0x3d8661(0x216,0x1fa,0x29d,0x1ef,0x3c0)+_0x3d8661(0x323,0x1f2,0x27f,0x36f,0x34a)+_0x3d8661(0x28b,0xc5,0x210,0x292,0x333)+_0x5339a4(0xda,0x110,0x80,0x1ed,0x16e)+_0x285932(0x57e,0x656,0x5d4,0x597,0x58e)+_0x5a2b18(0x590,0x319,0x44e,0x54f,0x3f9)+_0x285932(0x6e4,0x54f,0x6af,0x681,0x728)+_0x36f821(0x10e,0xca,0x26b,0x4b,0x248)+_0x5339a4(0x1a6,0x210,0x193,0x1d4,0x2d1)+'t_',_0x2ec8ad={};_0x2ec8ad[_0x285932(0x5bb,0x6ec,0x59c,0x65c,0x615)]=teks,await conn[_0x3d8661(0x306,0x23c,0x2ea,0x307,0x369)+_0x5a2b18(0x54b,0x4e7,0x3f0,0x518,0x440)+'e'](from,_0x2ec8ad);}}break;case prefix+_0x5a2b18(0x435,0x445,0x467,0x33e,0x33c):if(isGroup)return reply(mess[_0x5339a4(0xec,0x204,0x2fb,0x2b6,0x1d3)+'M']);var roomo=Object[_0x3d8661(0x3cd,0x312,0x2c0,0x2ad,0x38b)+'s'](anonymous)[_0x5339a4(0xdd,0x10e,-0x4,0xa8,0x221)](_0x220879=>anonyCheck(sender,_0x220879));if(!roomo){var teks=_0x285932(0x336,0x4a8,0x413,0x490,0x568)+_0x5a2b18(0x38f,0x550,0x4d4,0x5e6,0x374)+_0x36f821(0x246,0x26e,0x2e3,0x251,0x1b2)+_0x5a2b18(0x3e9,0x3b5,0x351,0x21d,0x2cd)+_0x3d8661(0x2db,0x199,0x1c2,0xf9,0x10f)+_0x36f821(0x36,0xe1,-0x80,0xa,0x67)+_0x36f821(0x221,0xf6,0x211,0x318,0x12d)+_0x5339a4(0x1b0,0x13f,0x270,0x116,0xe8)+_0x36f821(0x1f4,0x2cb,0x144,0x26d,0x1a9)+_0x5a2b18(0x438,0x268,0x3a2,0x3dc,0x34d)+_0x285932(0x4f1,0x6fd,0x607,0x61d,0x57c)+_0x3d8661(0x137,0x4f,0x17d,0x14a,0x2c2)+_0x5a2b18(0x39d,0x42f,0x479,0x4e8,0x5c3)+_0x36f821(0xa,0x45,-0x51,0x82,-0xc5),_0x1a5182={};_0x1a5182[_0x5a2b18(0x628,0x43c,0x564,0x64f,0x606)]=teks,await conn[_0x5a2b18(0x511,0x5d2,0x57a,0x44c,0x4c4)+_0x36f821(0x79,0x75,0xd3,0xc5,0x11)+'e'](from,_0x1a5182);}else{var teks=_0x285932(0x3ef,0x3d2,0x632,0x521,0x665)+_0x5339a4(-0x4,-0x6,0x21,-0x82,0x46)+_0x36f821(0x8b,-0xb9,-0x1c,0x10a,0x1cc)+_0x3d8661(0x271,0x30f,0x1cc,0x126,0x103)+_0x3d8661(0xfe,0x2da,0x203,0x1b7,0xbc)+_0x5339a4(0xc3,0x1ad,0x1b8,0x132,0x115)+_0x3d8661(0x2df,0x2eb,0x27f,0x352,0x2ba)+_0x36f821(0x204,0x298,0x114,0x20a,0x1f5)+_0x5339a4(-0x17,0xc,-0x14a,0x138,-0xe5)+_0x3d8661(0x2c8,0x3a1,0x363,0x33b,0x2b8)+_0x3d8661(0x25a,0x3c6,0x352,0x306,0x4ae)+_0x285932(0x560,0x65a,0x52d,0x674,0x7b3)+_0x5a2b18(0x346,0x349,0x3e5,0x3a0,0x299)+_0x5339a4(0x259,0x19c,0x26e,0x171,0xc2),teks2=_0x285932(0x390,0x37d,0x5a1,0x46e,0x43e)+_0x36f821(0x5c,-0xc1,0xf,0x105,0x69)+_0x5a2b18(0x4ca,0x5e5,0x4bd,0x447,0x373)+_0x5a2b18(0x44c,0x4ce,0x4c9,0x4d8,0x379)+_0x5339a4(-0x2f,0x5e,0x4f,0xbe,-0x5d)+_0x5339a4(0xc3,0x29,0x6a,0x86,-0xed)+_0x36f821(0x11c,0x41,0x22f,0x185,0xc1)+_0x285932(0x699,0x670,0x55b,0x667,0x760)+_0x285932(0x611,0x5b0,0x5fe,0x543,0x520)+_0x5a2b18(0x4cd,0x694,0x5af,0x56b,0x6af)+_0x3d8661(0x2a3,0x402,0x313,0x1d3,0x2fc)+_0x5a2b18(0x4f9,0x529,0x448,0x495,0x39a)+_0x5a2b18(0x511,0x4a9,0x5ca,0x5df,0x4fd)+_0x36f821(0xb5,0x95,0x12,0x14d,-0x5d)+_0x36f821(0x234,0x29d,0x2d8,0x2dc,0x143)+_0x5339a4(0x12d,-0x1b,0xcb,0x6c,-0x168)+_0x36f821(0x7f,0x180,0x136,-0x6a,0x9e)+_0x3d8661(0x276,0xab,0x143,0xf7,0x17d)+_0x285932(0x5c8,0x617,0x787,0x63c,0x57d),_0x2600cf={};_0x2600cf[_0x285932(0x5f4,0x597,0x5c5,0x65c,0x77e)]=teks,await conn[_0x5339a4(0x189,0x1fa,0x33d,0x1b0,0x2c7)+_0x5339a4(0x4d,0x70,0x4f,0x1,-0x67)+'e'](from,_0x2600cf);let other=anonyOther(sender,roomo);var _0x1bbe83={};_0x1bbe83[_0x5339a4(0x22b,0x1e4,0x300,0x31d,0x327)]=teks2;if(other)await conn[_0x285932(0x741,0x568,0x5e8,0x672,0x606)+_0x36f821(0x79,0x1c9,-0x21,-0xd,-0x3f)+'e'](other,_0x1bbe83);delete anonymous[roomo['id']];}break;case prefix+_0x36f821(-0x3f,0xc6,-0xb0,-0xa4,-0x3b):case prefix+_0x285932(0x508,0x5a0,0x60c,0x662,0x526):if(isGroup)return reply(mess[_0x285932(0x75c,0x7b9,0x752,0x67c,0x722)+'M']);let romeo=Object[_0x5339a4(0x181,0x1d0,0x31a,0xad,0x13d)+'s'](anonymous)[_0x5339a4(0x12b,0x10e,0xe5,0x213,0x16e)](_0x44ccb2=>anonyCheck(sender,_0x44ccb2));if(!romeo){var teks=_0x5339a4(0x151,0x18,0x31,0x154,-0x9b)+_0x36f821(0x15d,0x291,0x222,0x5,0x29b)+_0x285932(0x5d1,0x773,0x5c2,0x6b5,0x729)+_0x5a2b18(0x2e0,0x3bc,0x351,0x486,0x454)+_0x36f821(0xaa,-0x11,0x48,-0x6d,0xa9)+_0x36f821(0x96,0xb6,-0x9a,0xe9,0x10c)+_0x3d8661(0x240,0xe1,0x102,0x6e,0x1ec)+_0x285932(0x500,0x486,0x4d5,0x544,0x666)+_0x36f821(0x204,0x12e,0x2eb,0xc8,0x119)+_0x5a2b18(0x260,0x2f7,0x38c,0x2a1,0x2eb)+_0x5a2b18(0x4e2,0x4fb,0x5f3,0x533,0x6d7)+_0x3d8661(0x368,0x2d1,0x352,0x323,0x38f)+_0x285932(0x5d0,0x6f8,0x761,0x674,0x570)+_0x285932(0x435,0x3ef,0x5af,0x4dd,0x3de)+_0x5a2b18(0x5eb,0x4d2,0x51c,0x40a,0x632),_0x3bd455={};return _0x3bd455[_0x285932(0x50f,0x79b,0x588,0x65c,0x70d)]=teks,await conn[_0x36f821(0x203,0x1ad,0x1a3,0x2a1,0x188)+_0x5339a4(0x13d,0x70,-0xa9,0x53,-0x87)+'e'](from,_0x3bd455);}else{let other=anonyOther(sender,romeo);var teks1=_0x5a2b18(0x296,0x3e9,0x376,0x387,0x305)+_0x285932(0x3c5,0x585,0x4bb,0x4cb,0x5b1)+_0x3d8661(0x353,0x1ec,0x22d,0x10a,0x19d)+_0x5a2b18(0x621,0x5cd,0x4c9,0x4a4,0x503)+_0x5339a4(-0x8f,0x5e,0x194,0x8e,0x107)+_0x5a2b18(0x490,0x3b9,0x3a9,0x37c,0x46e)+_0x3d8661(0x181,0x218,0x203,0x240,0x32b)+_0x3d8661(0x2d9,0x3d7,0x2df,0x41d,0x3d1)+_0x3d8661(0x279,0x2eb,0x1bb,0x133,0x153)+_0x5a2b18(0x62d,0x472,0x5af,0x70b,0x5cd)+_0x36f821(0x22c,0x1ca,0x1ef,0x21e,0x34b)+_0x5339a4(-0x15,0x12c,0x1d4,0x24a,0x256)+_0x285932(0x3ac,0x577,0x403,0x475,0x493)+_0x36f821(0xe3,0x7,0xb0,0x21b,0x92)+_0x285932(0x454,0x4e2,0x57c,0x588,0x457)+_0x5339a4(0x12c,0x11f,0x267,0x265,0x14d)+_0x36f821(0x265,0x3a9,0x149,0x1c8,0x2bc)+_0x3d8661(0x1a8,0x244,0x226,0xf9,0xed)+_0x5339a4(0xd0,0x210,0x19e,0x332,0xc7)+'t_',_0x468059={};_0x468059[_0x5339a4(0x211,0x1e4,0x329,0xf6,0x1b7)]=teks1;if(other)await conn[_0x285932(0x660,0x722,0x5c9,0x672,0x5f3)+_0x36f821(0x79,0x6b,0x6d,0x16d,0x165)+'e'](other,_0x468059);delete anonymous[romeo['id']];}let room=Object[_0x5a2b18(0x4ac,0x507,0x550,0x6ab,0x544)+'s'](anonymous)[_0x285932(0x61c,0x512,0x4cb,0x586,0x525)](_0x343523=>_0x343523[_0x36f821(0xc1,0xc7,0x63,-0x10,0x44)]==_0x3d8661(0x75,0x238,0x1c7,0x94,0x149)+'NG'&&!anonyCheck(sender,_0x343523));if(room){var rrUNvI=(_0x3d8661(0x2b5,0x1f2,0x2d3,0x344,0x289)+_0x285932(0x696,0x726,0x51b,0x66a,0x58e))[_0x5a2b18(0x478,0x3ba,0x33c,0x462,0x324)]('|'),dxamCR=-0x1*0x2dc+-0xdca*-0x1+-0x577*0x2;while(!![]){switch(rrUNvI[dxamCR++]){case'0':room['b']=sender;continue;case'1':var teks=_0x36f821(0x24b,0x1e2,0x381,0x2d0,0x33c)+_0x3d8661(-0x5a,0x1f8,0xd7,-0x30,0x18a)+_0x36f821(0x1b3,0x81,0x1f7,0x2ee,0x307)+_0x5339a4(0x7,0xa3,0x2b,0xa4,0x80)+_0x285932(0x6ff,0x6ba,0x6c2,0x6ef,0x6d3)+_0x285932(0x620,0x5ab,0x62e,0x4d9,0x3cf)+_0x285932(0x48a,0x51d,0x659,0x5ba,0x6f6)+_0x285932(0x76d,0x6c0,0x76d,0x661,0x719)+_0x5a2b18(0x2b0,0x399,0x372,0x382,0x348)+_0x5339a4(0x136,0x89,0x15,-0x35,0x14f)+_0x285932(0x4c6,0x5cb,0x474,0x5cf,0x507)+_0x3d8661(0x29c,0x345,0x223,0x2a5,0x2ce)+_0x36f821(0x1e6,0x30e,0x1ac,0xfc,0x32c)+_0x5a2b18(0x336,0x258,0x39c,0x44a,0x426)+_0x5a2b18(0x411,0x419,0x3a2,0x359,0x4ce)+_0x5339a4(0x55,0x169,0x285,0x114,0x113)+_0x5a2b18(0x2fe,0x3d5,0x3d1,0x355,0x4d1)+_0x36f821(0x13f,0x11a,0x1f8,0xb1,0x130)+_0x285932(0x72b,0x603,0x698,0x688,0x769)+_0x5a2b18(0x54b,0x582,0x46b,0x59e,0x417)+_0x5a2b18(0x3ef,0x3a1,0x500,0x408,0x469)+_0x5339a4(0xba,-0x2,0x113,-0x2d,-0xdf)+_0x5a2b18(0x483,0x48c,0x38c,0x345,0x26c)+_0x5a2b18(0x68c,0x6a9,0x5f3,0x53a,0x6e9)+_0x285932(0x53e,0x6f6,0x670,0x698,0x7bc)+_0x285932(0x717,0x5ad,0x716,0x5b9,0x46f)+_0x285932(0x768,0x69c,0x67b,0x6b8,0x575)+_0x3d8661(0xb8,0x1a0,0xd3,0xd,-0x6b)+_0x3d8661(0xdd,0x2d3,0x237,0x34d,0x212)+_0x3d8661(0x44e,0x290,0x334,0x450,0x3f1)+'_';continue;case'2':var _0x3ae1f2={};_0x3ae1f2[_0x3d8661(0x211,0x363,0x2d4,0x2f5,0x194)]=teks,await conn[_0x3d8661(0x407,0x1c3,0x2ea,0x36b,0x282)+_0x5a2b18(0x4b5,0x3dd,0x3f0,0x4c6,0x366)+'e'](room['b'],_0x3ae1f2);continue;case'3':room[_0x36f821(0xc1,0x208,-0x56,0xc1,0x6b)]=_0x5a2b18(0x358,0x42e,0x476,0x448,0x550)+_0x3d8661(0x212,0x220,0x22b,0x281,0x326);continue;case'4':var _0x556061={};_0x556061[_0x5339a4(0x13d,0x1e4,0x13f,0xb9,0x1de)]=teks,await conn[_0x36f821(0x203,0x23f,0x1ef,0x1d1,0x186)+_0x3d8661(0x1c,0x171,0x160,0x109,0x1f3)+'e'](room['a'],_0x556061);continue;}break;}}else{let id=+new Date();anonymous[id]={'id':id,'a':sender,'b':'','state':_0x285932(0x4fc,0x5c9,0x55c,0x54f,0x442)+'NG'};var teks=_0x3d8661(0x4f,0x1c7,0x176,0xb7,0x90)+_0x5339a4(0x17e,0x20d,0x1c0,0x289,0xf7)+_0x3d8661(0x149,0x14e,0xad,0x110,0x14c)+_0x5a2b18(0x436,0x2d3,0x349,0x42d,0x373)+_0x36f821(0x12b,0x284,0x158,0x50,-0x24)+_0x3d8661(0x243,0x1bc,0x25e,0x1a9,0x260)+_0x5339a4(0x1e8,0x153,0x234,0x2ad,0x16a)+_0x5339a4(0x5c,0x1ad,0x5c,0x1b2,0x1fe)+_0x3d8661(0x363,0x355,0x27f,0x392,0x19f)+_0x5339a4(0x129,0x120,0x193,0x12d,-0x29)+_0x5a2b18(0x3ea,0x4d7,0x490,0x3a5,0x3b6)+_0x285932(0x4d3,0x643,0x51c,0x597,0x4d7)+_0x5339a4(0x192,0xce,-0x8b,0x16c,0x200)+_0x5a2b18(0x605,0x5ec,0x589,0x5c8,0x4d9)+_0x36f821(0x10e,0xaa,0x1a5,0xd,0x219)+_0x285932(0x7a7,0x5e0,0x67d,0x688,0x59b)+'t_',_0x39d17f={};_0x39d17f[_0x5a2b18(0x5ec,0x55d,0x564,0x5d2,0x612)]=teks,await conn[_0x285932(0x7af,0x61b,0x765,0x672,0x6dd)+_0x285932(0x535,0x569,0x466,0x4e8,0x3f3)+'e'](from,_0x39d17f);}break;case prefix+(_0x3d8661(0x171,0xf1,0x238,0x33c,0x37b)+_0x5339a4(0x1ec,0x159,0x0,0x1ac,0x37)+'e'):case prefix+(_0x3d8661(0x22f,0x289,0x238,0x2b0,0x36c)+_0x3d8661(0x205,0x344,0x249,0x325,0x314)):if(isGroup)return reply(mess[_0x3d8661(0x3b9,0x275,0x2f4,0x2b6,0x30e)+'M']);let romoe=Object[_0x285932(0x633,0x5c4,0x74b,0x648,0x504)+'s'](anonymous)[_0x5339a4(0x25c,0x10e,0x139,-0x34,-0x44)](_0x5bfb6e=>anonyCheck(sender,_0x5bfb6e)&&_0x5bfb6e[_0x36f821(0xc1,0x72,-0x7e,0x1a3,0x7c)]==_0x285932(0x57b,0x426,0x4e6,0x56e,0x61e)+_0x5339a4(0x5,0x13b,0x17,0x138,0x98));if(!romoe){var teks=_0x36f821(0x21,0x129,-0x8d,-0xd1,-0x10e)+_0x5a2b18(0x498,0x5fb,0x4d4,0x457,0x383)+_0x36f821(0x246,0x3a7,0x1f6,0x19f,0x162)+_0x3d8661(0x16a,0x77,0xc1,0xb8,0xee)+_0x5339a4(0x1da,0xa1,0x2c,-0x60,0x1ed)+_0x5a2b18(0x54f,0x4ac,0x40d,0x555,0x2c2)+_0x3d8661(0x14f,0x2f,0x102,0x13d,0x255)+_0x285932(0x4a2,0x48c,0x4e3,0x544,0x4bc)+_0x36f821(0x204,0x244,0x2b5,0x269,0x28b)+_0x3d8661(0x2f,0x16c,0xfc,0x105,0x2d)+_0x5a2b18(0x6c8,0x4ee,0x5f3,0x626,0x526)+_0x5339a4(0x27b,0x262,0x2dc,0x321,0x155)+_0x5339a4(0x189,0x1fc,0x35a,0x2e8,0x134)+_0x5a2b18(0x541,0x405,0x3e5,0x4b2,0x305)+_0x36f821(0x1a5,0x1b6,0x20a,0x305,0x7e),_0x386741={};_0x386741[_0x3d8661(0x3e6,0x426,0x2d4,0x248,0x28b)]=teks,await conn[_0x5339a4(0x22f,0x1fa,0x23f,0x231,0x140)+_0x3d8661(0x2a9,0x59,0x160,0x1d5,0x287)+'e'](from,_0x386741);}else{let rms=Object[_0x5339a4(0x22c,0x1d0,0x138,0x24f,0x214)+'s'](anonymous)[_0x5a2b18(0x591,0x467,0x48e,0x424,0x4b0)](_0x15c78e=>[_0x15c78e['a'],_0x15c78e['b']][_0x285932(0x5a4,0x470,0x3a7,0x452,0x52e)+_0x5339a4(-0x110,0x4c,0xc9,0x132,-0xca)](sender)&&_0x15c78e[_0x3d8661(0x10e,0x13b,0x1a8,0x75,0xe6)]==_0x285932(0x5bb,0x5bc,0x5e8,0x56e,0x699)+_0x36f821(0x144,0x15a,0x21f,0x14a,0x25b));var partnerJID=anonyOther(sender,rms),res=await conn[_0x36f821(0xa4,0x1f0,0x190,-0x1a,0x1ec)+_0x3d8661(0xd2,0x30e,0x205,0x35b,0x18c)+'t'](partnerJID,[sender[_0x5a2b18(0x29b,0x339,0x33c,0x256,0x256)]('@')[-0xfd8+0x1f45+-0x167*0xb]]),_0x467249={};_0x467249[_0x285932(0x641,0x51d,0x60e,0x65c,0x57c)]=_0x5339a4(0x207,0xa9,0xda,0x56,-0x31)+_0x5339a4(-0x36,-0x6,0x8d,0x14,-0x145)+_0x36f821(0x8b,0x12,-0xb4,0x82,0x177)+_0x36f821(0x191,0x61,0x38,0x112,0x142)+_0x285932(0x5f2,0x50b,0x69a,0x62f,0x6ae)+_0x5a2b18(0x46a,0x43f,0x43a,0x413,0x2fe)+_0x36f821(0x17e,0x1aa,0x290,0x2a1,0x24c)+_0x5a2b18(0x4ac,0x547,0x52d,0x3ec,0x626)+_0x5339a4(0x2e,-0x24,-0x50,-0xcb,-0xcf)+_0x3d8661(0x1eb,0x198,0x1bf,0x109,0xae);var _0x11d473={};_0x11d473[_0x285932(0x5f3,0x54b,0x74f,0x65f,0x5f7)+'d']=msg,conn[_0x5a2b18(0x693,0x476,0x57a,0x50b,0x689)+_0x36f821(0x79,0x1bd,0x176,-0x44,0x9)+'e'](from,_0x467249,_0x11d473);var _0x3f6cec={};_0x3f6cec[_0x5a2b18(0x678,0x4fe,0x564,0x5a5,0x4d0)]=_0x36f821(0x10d,0x8c,0xa2,0x253,0x209)+_0x5339a4(-0x2e,0x5,-0xbf,0x6d,-0x140)+_0x5a2b18(0x592,0x557,0x4b3,0x387,0x429)+_0x5a2b18(0x447,0x493,0x3cb,0x464,0x303)+_0x285932(0x63a,0x5ef,0x53e,0x612,0x746)+_0x5339a4(0xe1,0x43,0xb2,0xec,0x3b)+_0x5339a4(0x4f,0xc7,0x21e,0x154,0x75)+_0x285932(0x5b4,0x5fb,0x603,0x665,0x50b)+_0x5339a4(0x25b,0x159,0x2f,0xa7,0xdb)+_0x5a2b18(0x586,0x594,0x48d,0x374,0x470);var _0x13864e={};_0x13864e[_0x5a2b18(0x624,0x569,0x567,0x611,0x4fa)+'d']=res,conn[_0x36f821(0x203,0x321,0xde,0x10f,0x13d)+_0x3d8661(0x32,0x1b5,0x160,0x228,0x94)+'e'](partnerJID,_0x3f6cec,_0x13864e);}break;case prefix+(_0x5339a4(0x1a4,0x137,0xbb,0x254,0x1f2)+'ss'):if(isGroup)return reply(mess[_0x36f821(0x20d,0x124,0xea,0x31d,0x35b)+'M']);if(args[_0x3d8661(0x1e6,0xa0,0x1f1,0xc0,0x1c9)+'h']<-0xe47*-0x1+0x138b*-0x1+0x1e*0x2d)return reply(_0x5a2b18(0x6c5,0x587,0x582,0x435,0x6ab)+_0x3d8661(0x113,0x103,0x1a7,0x1aa,0xc8)+_0x5a2b18(0x484,0x337,0x36c,0x3ed,0x37b)+_0x36f821(0x5e,0x139,0xad,0xdf,0x1a0)+_0x5339a4(0x31f,0x21e,0x375,0x138,0x110)+_0x5339a4(0xd6,0x12d,0x179,0x1a3,0x158)+_0x3d8661(0x1f5,0xcb,0xfa,0xdb,0x9f)+_0x3d8661(0x19a,0x1c5,0x2a5,0x31e,0x176)+_0x5339a4(-0x71,0x3e,0xcc,0x4f,0x65)+_0x5339a4(0x17e,0x2f,0x14c,-0x9a,-0x25)+_0x285932(0x62a,0x608,0x5c1,0x6cf,0x7df)+_0x3d8661(0x20e,0x230,0x15a,0xd1,0x36)+_0x285932(0x5af,0x4c9,0x472,0x4e4,0x471)+command+(_0x285932(0x5d1,0x68b,0x598,0x6d8,0x733)+_0x3d8661(0x1e1,0x9,0x158,0x39,-0x9)+_0x36f821(0x1c3,0x1dc,0x200,0x96,0x182)+'an'));var number_to=q[_0x285932(0x440,0x435,0x53c,0x434,0x2f4)]('|')[0xfff+-0x2260+0x3ad*0x5],sender_name=q[_0x3d8661(0xdd,0xe6,0xac,0x59,0xad)]('|')[0x377+0x1920+-0x1c96],msg_send=q[_0x5a2b18(0x3f6,0x2cc,0x33c,0x255,0x486)]('|')[-0xa4b+-0x1*-0x133+0x91a];if(!number_to)return reply(_0x3d8661(0x3e9,0x393,0x2f6,0x399,0x1cf)+_0x36f821(0x12e,0x22e,0x2,0x1fd,0x16f)+_0x3d8661(0xd3,0x1cf,0x20d,0x320,0x28b)+_0x3d8661(0x62,-0x28,0xdc,0x132,-0x79)+_0x3d8661(0x1d8,0x1f6,0x29b,0x21f,0x3c6)+_0x3d8661(0x241,0x3e8,0x362,0x2a2,0x36b)+_0x285932(0x431,0x527,0x62a,0x53a,0x56c)+_0x285932(0x63a,0x54d,0x6da,0x635,0x61f)+_0x5a2b18(0x3e5,0x52b,0x4e0,0x5c3,0x4b4)+_0x285932(0x60c,0x52d,0x6ba,0x660,0x633)+':\x0a'+command+(_0x5a2b18(0x518,0x588,0x5e0,0x4ac,0x6de)+_0x285932(0x436,0x3ce,0x39a,0x4ba,0x3cd)+_0x36f821(-0x3c,0x24,-0x103,-0xda,-0x4b)+_0x285932(0x6fc,0x52b,0x550,0x66e,0x5ea)+'k'));if(isNaN(number_to))return reply(_0x5a2b18(0x4a3,0x4bb,0x5e5,0x724,0x570)+_0x36f821(0x10f,0x85,0x247,0x12a,0xa0)+_0x3d8661(-0x2b,0x100,0xd0,0x1c5,0xce)+_0x5a2b18(0x596,0x537,0x50c,0x66a,0x571)+_0x285932(0x539,0x432,0x513,0x4fc,0x4b8)+_0x3d8661(0x38b,0x24e,0x319,0x3b1,0x2f8)+_0x285932(0x5c6,0x5fc,0x570,0x62d,0x5e5)+_0x3d8661(0x21b,0x305,0x2f6,0x322,0x378)+_0x5a2b18(0x50d,0x54f,0x553,0x655,0x444)+command+'\x20'+botNumber[_0x285932(0x453,0x54d,0x319,0x434,0x531)]('@')[-0x26a5+0xeae+-0x3*-0x7fd]+(_0x285932(0x4f3,0x4bd,0x4da,0x5ee,0x64d)+_0x36f821(0x1d6,0x1d2,0x25c,0x13c,0x228)+_0x5339a4(0x104,0x28,-0xd0,-0xc9,-0x5d)));number_to=number_to[_0x36f821(0x16e,0x61,0xf3,0x115,0x5d)+'ce'](/[^0-9]/gi,'')+(_0x5339a4(-0x38,0xc5,0x2,0x1d,-0x28)+_0x3d8661(0x298,0x23f,0x285,0x293,0x396)+_0x3d8661(0x176,0x39f,0x267,0x397,0x19c));if(!sender_name)return reply(_0x5a2b18(0x53b,0x5ac,0x586,0x655,0x5ab)+_0x5339a4(-0x7,0x125,0x136,0x7,0x20)+_0x3d8661(0x265,0x168,0x20d,0x1cc,0x276)+_0x5a2b18(0x3a2,0x213,0x36c,0x2c9,0x2b5)+_0x5a2b18(0x725,0x535,0x5cf,0x675,0x576)+_0x5a2b18(0x35d,0x337,0x3b3,0x3df,0x30b)+_0x36f821(0x64,0x127,0x83,0x14d,0x137)+_0x5a2b18(0x506,0x592,0x5d9,0x6d7,0x63f)+_0x5a2b18(0x221,0x224,0x377,0x422,0x25a)+_0x285932(0x582,0x575,0x3f4,0x461,0x53c)+_0x3d8661(0x390,0x358,0x2ad,0x3e1,0x293)+_0x285932(0x60e,0x654,0x4c8,0x5d8,0x571)+_0x3d8661(0x3c3,0x3f9,0x2d8,0x387,0x31b)+':\x0a'+command+'\x20'+number_to[_0x3d8661(0x1cb,0x4e,0xac,0x1f9,0xb8)]('@')[-0x196d*0x1+0x11*0xda+0xaf3]+(_0x3d8661(0x337,0x325,0x1ff,0xb9,0x19b)+_0x285932(0x568,0x4a0,0x66b,0x572,0x633)+_0x285932(0x57a,0x5f5,0x3d4,0x4a3,0x370)));if(!msg_send)return reply(_0x5339a4(0x15d,0x206,0x2f1,0x35f,0x180)+_0x36f821(0x12e,0x82,0x128,0xf4,0x136)+_0x5339a4(0xe5,0x11d,0x240,-0x1,0x107)+_0x3d8661(0xbb,0x174,0xdc,0x226,0x1e1)+_0x5a2b18(0x57d,0x40c,0x4f3,0x58d,0x587)+_0x3d8661(0xa4,0x107,0x12f,0x6e,0x122)+_0x36f821(0x192,0x108,0x1ac,0x1e2,0xdc)+_0x5339a4(-0x3c,0x24,-0x26,-0x5a,0xd4)+_0x5a2b18(0x2e4,0x2ec,0x34e,0x268,0x311)+_0x285932(0x4c4,0x626,0x6a2,0x5d9,0x493)+_0x36f821(0x1be,0x1ca,0x10d,0x1fd,0xad)+_0x285932(0x68b,0x73e,0x677,0x67e,0x69a)+_0x5a2b18(0x626,0x670,0x553,0x408,0x68b)+command+'\x20'+number_to[_0x285932(0x395,0x589,0x3f9,0x434,0x57b)]('@')[0x1*-0x179+0x1955+0x4*-0x5f7]+'|'+sender_name+(_0x36f821(0x103,0x14c,0xa,-0x3f,0x184)+_0x5339a4(0xb6,0x2b,0x15,0xb2,0x65)));var cek_number=await conn[_0x5a2b18(0x408,0x40f,0x478,0x5d4,0x3fe)+_0x5339a4(0x18f,0x16c,0x245,0x198,0x15d)](number_to);if(cek_number[_0x3d8661(0x29a,0x15a,0x1f1,0x284,0x34f)+'h']===0x1104+-0x184*0x16+-0x2*-0x82a)return reply(_0x5339a4(0x60,0x14d,0xe6,0x14c,0xc9)+_0x285932(0x6cd,0x508,0x5f9,0x5b4,0x712)+_0x5339a4(0x321,0x244,0x1b8,0x351,0x21a)+_0x3d8661(-0x2e,0x1a8,0xc3,0xa9,0x220)+_0x5339a4(0x1b9,0x121,0x152,0x223,0x212)+_0x5339a4(0x179,0x114,0x31,0x239,0x249)+_0x3d8661(0x85,0x239,0x121,0xd3,-0x3f)+_0x36f821(0x74,0x11f,0x18b,-0xd,0x190)+_0x5339a4(0x36,-0x3f,0x76,0xda,-0x23)+_0x5a2b18(0x368,0x541,0x48b,0x3d6,0x573)+_0x36f821(0x214,0x128,0x228,0x19e,0x1ef));number_to=cek_number[-0x1857+-0x1d50+-0xabb*-0x5][_0x5339a4(-0x10e,0x40,0x110,0x6d,-0x54)];if(sender===number_to)return reply(_0x36f821(0x18b,0x1c7,0x12c,0x78,0x25c)+_0x3d8661(0x36d,0x1c8,0x275,0x283,0x272)+_0x36f821(0x7c,-0x74,-0x5d,0x55,-0x76)+_0x285932(0x6c1,0x684,0x5a8,0x5e8,0x71a)+_0x36f821(0x247,0x38c,0x2bc,0x2ad,0x2f2)+_0x3d8661(0x150,0xf6,0x23b,0x343,0x2bd)+_0x3d8661(0x275,0x2de,0x291,0x2e7,0x2da));if(botNumber===number_to)return reply(_0x3d8661(0x1c7,0x260,0x272,0x37a,0x28a)+_0x5339a4(0x24a,0x185,0x232,0x165,0x50)+_0x5a2b18(0x3e7,0x3fb,0x3f3,0x338,0x4db)+_0x36f821(0xd6,0x1b9,-0x45,0x8b,0xe)+_0x36f821(0x86,0x89,0x1a5,0xaf,-0x15)+_0x3d8661(0xe,0x1cc,0xbc,-0x1b,0xef));reply(_0x5339a4(-0xe9,0x74,0x175,-0x17,-0x99)+_0x3d8661(0x290,0x330,0x301,0x324,0x327)+_0x285932(0x494,0x479,0x43b,0x4b3,0x459)+_0x285932(0x79f,0x54f,0x5ab,0x650,0x639)+_0x285932(0x57d,0x483,0x695,0x5c8,0x68f)+_0x36f821(0x12c,0x108,0x1e9,0x132,0xd3)+_0x36f821(0xa5,0x1a,0xa,0x10e,0x3b)+_0x5339a4(0x1b6,0x272,0x37b,0x36b,0x126)+_0x5339a4(0x380,0x232,0x323,0x319,0x2f4)+_0x3d8661(0x30c,0x19b,0x2e1,0x224,0x2c8)+_0x3d8661(0x24e,0x399,0x2f5,0x1cf,0x3ca)+_0x36f821(0x25e,0x3b8,0x3b0,0x2e1,0x138)+_0x5339a4(0xa9,-0x12,0xa9,0x61,-0x11e)+_0x5a2b18(0x33f,0x4df,0x410,0x435,0x429)+_0x285932(0x5ea,0x560,0x476,0x51a,0x52a)+_0x5a2b18(0x51b,0x399,0x4aa,0x5fa,0x387)+_0x36f821(0x134,0xa3,0x1a3,0x18a,0x168)+_0x5a2b18(0x3ab,0x480,0x383,0x236,0x46f)+_0x3d8661(0x19c,0x1c0,0xda,0x1ba,0x1e2)+_0x285932(0x767,0x80f,0x65c,0x6e7,0x6d5)+_0x5a2b18(0x39d,0x4ca,0x466,0x48b,0x5be)+_0x3d8661(0x15d,0x1c5,0x129,0x36,0x59)+_0x5a2b18(0x3b7,0x2fc,0x3ba,0x26a,0x274)+_0x3d8661(0x419,0x1b1,0x2bf,0x371,0x3b6)+_0x3d8661(0xf7,0xff,0xfe,0xd2,0x257)+_0x36f821(0x50,0x26,0xa4,-0x69,-0x31)+_0x36f821(0x19b,0x1d8,0x123,0x1c8,0x15a)+_0x3d8661(0x217,0x422,0x337,0x2b8,0x34d)+_0x36f821(0xeb,0xc4,0x20,0x1d9,0x1a4)+_0x285932(0x7f6,0x68d,0x657,0x69d,0x6c5)+'!');var teks=_0x5339a4(0x1cb,0x261,0x3aa,0x15d,0x3a4)+_0x36f821(0x1d,-0x84,0xc,-0xf8,-0x53)+_0x285932(0x6a8,0x525,0x7b9,0x678,0x6ea)+_0x5339a4(0x13f,0x158,0x26b,0x2a2,0xbd)+_0x5a2b18(0x4cc,0x2ca,0x3fe,0x458,0x349)+_0x36f821(0x41,-0x5f,0xe6,0x52,0x14f)+_0x285932(0x4b3,0x70b,0x5c8,0x5bb,0x58a)+_0x5339a4(0x2e9,0x23f,0x142,0xe4,0x315)+_0x285932(0x34a,0x4aa,0x304,0x43b,0x4ea)+sender_name+(_0x36f821(0xc9,-0x2b,0xfc,0xf7,0x11d)+_0x5a2b18(0x4ac,0x6bb,0x588,0x609,0x6bd)+_0x5339a4(-0x120,0x3c,-0x7f,0x18a,-0x2f)+':\x0a')+msg_send,_0x303990={};_0x303990[_0x285932(0x6d2,0x634,0x534,0x65c,0x769)]=teks,conn[_0x3d8661(0x275,0x25a,0x2ea,0x2be,0x2aa)+_0x5339a4(0xc2,0x70,-0xdd,-0x9c,0x1a0)+'e'](number_to,_0x303990,{'messageId':_0x285932(0x501,0x493,0x5da,0x567,0x5b9)+makeid(-0x1970+-0xfe2+-0x295c*-0x1)[_0x5a2b18(0x5ad,0x6d0,0x5c9,0x557,0x516)+_0x36f821(0x6b,0x1a0,0xb8,-0xc,0x1ac)+'e']()+(_0x5339a4(-0x8d,0x2e,0x177,0x167,0xac)+'SS')})[_0x5339a4(0x2e3,0x22c,0x1d4,0x21e,0x2f8)](_0x33bca7=>{var _0x23fb06={};function _0x406176(_0x13d7e3,_0x345046,_0x28d1a1,_0x21fcad,_0x5ef3a8){return _0x285932(_0x13d7e3-0x16a,_0x345046-0x103,_0x28d1a1-0xa0,_0x345046- -0x60f,_0x21fcad);}_0x23fb06[_0x406176(0x79,-0xae,0x68,-0x1e3,0x56)]=_0x406176(0xca,0x21,-0x122,0x59,0x104)+_0x3359c1(0x54e,0x54e,0x500,0x5b4,0x62e)+_0x593e1e(0x104,0x20,0x1f,-0x123,0x8)+_0x3fbf47(0x569,0x4d9,0x5da,0x427,0x4bc)+_0x3359c1(0x767,0x692,0x74f,0x7cc,0x5c3)+_0x3fbf47(0x395,0x3bb,0x372,0x495,0x49d);var _0x3f5caa=_0x23fb06;function _0x593e1e(_0x167569,_0x2fe530,_0x572534,_0x13dc82,_0x165a2f){return _0x3d8661(_0x167569-0x154,_0x165a2f,_0x2fe530- -0x31d,_0x13dc82-0x115,_0x165a2f-0xf8);}conn[_0x593e1e(-0x24,-0x185,-0xd4,-0x32,-0xe4)](number_to,_0x593e1e(-0x3b,0x47,0x126,0x156,0x71)+_0x383eb6(0x1b8,0x239,0x209,0x6a,0x140)+_0x3fbf47(0x63c,0x69f,0x6f8,0x679,0x5ab)+_0x593e1e(-0x1ff,-0x252,-0x391,-0x34b,-0x11f)+_0x383eb6(0x316,0x333,0x1d0,0x26e,0x316)+_0x406176(-0xdb,-0xa4,-0x12c,0x22,-0x109)+_0x3359c1(0x514,0x674,0x69a,0x5b3,0x6b3)+_0x383eb6(0x201,0x1bc,0x231,0x113,0x16e)+_0x406176(-0x56,0x6e,-0x98,-0xe4,-0x75)+_0x3359c1(0x511,0x439,0x2ef,0x306,0x3fb)+_0x406176(-0x80,0x85,0x181,0x85,0x1a9)+_0x3fbf47(0x2b5,0x47d,0x55a,0x339,0x409)+_0x3359c1(0x4e7,0x4ff,0x61f,0x4d0,0x530)+_0x383eb6(0x2a2,0x273,0x156,0x2f0,0x29c)+_0x383eb6(0x1f4,0x156,0x1f1,0xf7,0xe9)+_0x383eb6(0xcc,0xd7,0x2ee,0x123,0x1e7)+_0x383eb6(0x2f4,0x1ed,0x28e,0x15b,0x209)+_0x3359c1(0x67f,0x6b3,0x795,0x747,0x595)+_0x3fbf47(0x453,0x4f2,0x3b0,0x5f8,0x506)+_0x406176(-0x4d,0x78,-0x44,0xf3,0x19d)+_0x383eb6(0xeb,0x219,0x8e,0x1f9,0xd7)+_0x593e1e(-0x121,-0x255,-0x1a5,-0x38a,-0x12b)+_0x3359c1(0x470,0x497,0x459,0x554,0x39b)+_0x593e1e(-0x99,-0x9,-0x7a,-0x123,-0x76),_0x33bca7);var _0x4b08de={};_0x4b08de[_0x3fbf47(0x7a6,0x67d,0x714,0x63d,0x678)+'r']=number_to;function _0x3fbf47(_0x1e9440,_0x49446c,_0x510043,_0xabb40c,_0x45fae0){return _0x3d8661(_0x1e9440-0x97,_0x510043,_0x45fae0-0x321,_0xabb40c-0xbc,_0x45fae0-0x141);}_0x4b08de[_0x3359c1(0x7b4,0x691,0x7de,0x7ac,0x6ed)+_0x406176(-0x30d,-0x1c3,-0x101,-0x1fd,-0x99)]=sender;function _0x383eb6(_0x186285,_0x1c4146,_0x3f7c86,_0x4c17ac,_0x1fccc8){return _0x5339a4(_0x186285-0x13a,_0x1fccc8-0xc4,_0x3f7c86-0x115,_0x4c17ac-0x9,_0x186285);}_0x4b08de[_0x3fbf47(0x68c,0x5c4,0x68f,0x64a,0x663)]=msg_send,_0x4b08de[_0x593e1e(-0x15d,-0x159,-0x1ed,-0x14a,-0x25b)]=_0x33bca7,_0x4b08de[_0x383eb6(0x16f,0xb8,0x59,0x63,0x15c)]=msg;function _0x3359c1(_0x4569b6,_0x536d28,_0x9b56a5,_0x72a0c0,_0x239fa1){return _0x36f821(_0x536d28-0x458,_0x536d28-0x1ae,_0x9b56a5-0x108,_0x4569b6,_0x239fa1-0xa8);}var _0x2c1696=_0x4b08de;secreto[_0x383eb6(0x16a,0x28f,0x20e,0x170,0x177)](_0x2c1696),fs[_0x3fbf47(0x7ba,0x783,0x7e4,0x66a,0x689)+_0x406176(-0x5c,-0x62,-0x66,-0xd4,-0x185)+_0x383eb6(0x375,0x252,0x391,0x371,0x247)](_0x3f5caa[_0x3fbf47(0x5d9,0x402,0x599,0x43c,0x4fa)],JSON[_0x406176(0x21,-0xa,-0xa4,-0xd6,-0x91)+_0x593e1e(-0xe4,-0xca,0x9,-0x1af,-0x218)](secreto,null,0xbf3+0x123*-0x1d+0x1506));});break;case prefix+_0x5339a4(0x86,-0x27,0xa0,-0x108,0xca):case prefix+(_0x3d8661(0x1d9,0x1c3,0xc9,0x18,-0x26)+_0x36f821(0x66,-0x4a,-0xaa,-0x61,0x129)):if(!isOwner)return reply(mess[_0x3d8661(0x282,0x480,0x328,0x2b7,0x283)+_0x36f821(0x1ba,0x252,0x312,0xa0,0xd5)]);if(isImage||isQuotedImage){var media=await downloadAndSaveMediaMessage(msg,_0x36f821(0x91,0x1c4,0x32,0x41,0x11f),_0x5339a4(-0x35,0x71,0x17a,0x1a7,-0xde)+_0x5339a4(0x1bf,0xea,0x13,-0x52,0x9e));if(args[0x1975+-0x1282+-0x6f2]==_0x3d8661(0x12d,0x294,0x1ef,0x1af,0xa5)+_0x36f821(0x112,0x1b6,0x15a,0x230,0xd0)){var {img}=await generateProfilePicture(media),_0x2c22f4={};_0x2c22f4['to']=botNumber,_0x2c22f4[_0x36f821(0xb,0x106,0xbb,-0xaa,0xb0)]=_0x5339a4(0x262,0x268,0x1ad,0x18e,0x240),_0x2c22f4[_0x285932(0x401,0x454,0x474,0x52a,0x5f8)]=_0x5339a4(0xfe,-0x11,-0x117,-0x126,0x75)+_0x36f821(0x1db,0x2e3,0x292,0xd9,0xf8)+_0x5a2b18(0x36b,0x5e1,0x4b1,0x504,0x444)+'re';var _0x55f1b7={};_0x55f1b7[_0x285932(0x455,0x3a1,0x482,0x47a,0x386)]=_0x5339a4(-0x8f,0x88,0x28,-0x28,-0x96);var _0x42b765={};_0x42b765[_0x3d8661(0x17b,0x3b8,0x290,0x2bf,0x2fd)]=_0x285932(0x451,0x6c2,0x5ca,0x5a9,0x5fd)+'re',_0x42b765[_0x36f821(0x276,0x283,0x2c0,0x34d,0x3c0)]=_0x55f1b7,_0x42b765[_0x36f821(0x20,-0x13a,0x92,-0x112,-0xe6)+'nt']=img;var _0x59a127={};_0x59a127[_0x5a2b18(0x4b2,0x3e4,0x520,0x4df,0x42b)]='iq',_0x59a127[_0x36f821(0x276,0x159,0x181,0x394,0x161)]=_0x2c22f4,_0x59a127[_0x285932(0x3ef,0x5d7,0x368,0x48f,0x556)+'nt']=[_0x42b765],await conn[_0x5339a4(0x26b,0x171,0x6f,0x4f,0x261)](_0x59a127),fs[_0x5339a4(0x48,0xa5,0x1c8,-0x7d,0x8e)+_0x285932(0x639,0x4df,0x449,0x536,0x620)](media),reply(_0x5339a4(0xd8,0x74,0xe0,0x67,0xc5)+'s');}else{var _0x1f62fa={};_0x1f62fa[_0x285932(0x5b0,0x4d6,0x60e,0x5b6,0x67c)]=media;var data=await conn[_0x3d8661(-0x9e,0x1a9,0xbd,0xf5,0x1a7)+_0x5a2b18(0x4ee,0x4cb,0x4db,0x47b,0x396)+_0x5a2b18(0x441,0x348,0x49c,0x5b4,0x5bb)+_0x36f821(0x254,0x3a9,0x31e,0x132,0x278)](botNumber,_0x1f62fa);fs[_0x36f821(0xae,0xf4,0x181,-0x94,-0xab)+_0x36f821(0xc7,0x215,0xd,-0x5f,0x123)](media),reply(_0x5339a4(0xe9,0x74,0x46,0xc1,0x20)+'s');}}else reply(_0x36f821(-0x28,0x11d,0xe2,-0x79,0x112)+_0x3d8661(0x34a,0x360,0x2b3,0x185,0x180)+_0x285932(0x7cc,0x7b4,0x564,0x677,0x69a)+_0x5a2b18(0x443,0x4c0,0x368,0x2a1,0x367)+_0x285932(0x52c,0x705,0x7bd,0x68d,0x7d3)+_0x36f821(0x26c,0x39c,0x1b2,0x138,0x13d)+_0x36f821(0x56,0x14,0xf5,0x4f,0x32)+command+(_0x5a2b18(0x6d7,0x57e,0x5c3,0x5ad,0x6e6)+_0x3d8661(0x307,0x337,0x259,0x279,0x132)+_0x36f821(0x70,-0x9d,0x4b,-0xc1,0x1e)+_0x285932(0x47b,0x340,0x3c6,0x499,0x5a7)+_0x5a2b18(0x437,0x206,0x361,0x345,0x3fc)+_0x36f821(0xfa,-0x8,-0x12,-0x1b,0xb6)+'t'));break;case prefix+_0x5339a4(-0xeb,0x54,0x1b3,0xda,0x178):if(!isOwner)return reply(mess[_0x5a2b18(0x5f7,0x681,0x5b8,0x481,0x5ab)+_0x3d8661(0x2eb,0x22d,0x2a1,0x3fc,0x311)]);if(args[_0x36f821(0x10a,0x259,0x11b,0x152,0x220)+'h']<-0x1*0x9af+0x1c49+-0x2a8*0x7)return reply(_0x285932(0x46a,0x3f6,0x56a,0x54d,0x441)+_0x36f821(0x1a4,0x5e,0x161,0x180,0x2d3)+_0x3d8661(0x175,0x211,0x140,0x5a,0x1a6)+_0x36f821(0x3e,0x5c,-0x9d,0xa5,-0xd6)+_0x5339a4(0x1c5,0x66,-0x11,-0x7a,0x8)+'n\x20'+command+(_0x3d8661(0x14d,0x105,0x162,0xa8,0x262)+'vn'));if(!isQuotedAudio)return reply(_0x36f821(0x27,-0x103,-0x48,0x124,0xc3)+_0x5339a4(0xa0,0x18b,0x183,0x2b7,0x51)+_0x5a2b18(0x2c1,0x33a,0x3ac,0x3a5,0x4c0)+_0x285932(0x5b3,0x6cb,0x71f,0x6dc,0x703)+_0x3d8661(0x65,0xe0,0xd7,0xa4,0x24)+_0x285932(0x603,0x7b7,0x7d8,0x69f,0x5b4)+_0x285932(0x42f,0x48b,0x66b,0x50b,0x65c)+command+(_0x285932(0x452,0x432,0x5e0,0x4ea,0x47d)+'vn'));var dbx=listvn[_0x36f821(0x117,0xbc,0xc8,0x270,0x92)](_0x2dd3d2=>_0x2dd3d2[_0x5a2b18(0x44b,0x2e0,0x35e,0x246,0x2d2)]===q);if(dbx!==undefined){if(dbx[_0x36f821(-0x19,-0x30,0xcc,0x80,0xef)]===q)return reply(_0x36f821(0x127,0x145,0x268,0x267,0xad)+_0x3d8661(0x7c,0x57,0xd7,0x8b,0x15f)+_0x36f821(0x25f,0x146,0x22f,0x29e,0x273)+q+(_0x5a2b18(0x623,0x55d,0x5e6,0x6ac,0x6d6)+_0x5339a4(0x99,0x48,0x95,-0x84,-0x5)+'a!'));}var media=null;if(isQuotedAudio)var media=await downloadAndSaveMediaMessage(msg,_0x3d8661(0x96,-0x5f,0xbb,-0x4,0x218),_0x285932(0x5ff,0x3bd,0x560,0x4ff,0x57f)+_0x5a2b18(0x484,0x30e,0x46e,0x35f,0x319)+_0x36f821(0x8,-0x113,0x12,-0xfb,-0x12e)+q+_0x5339a4(-0x16,0x103,0x1a9,0x24f,0x62));else return reply(_0x36f821(0xde,0xfd,0x11a,-0x2f,0x15b)+_0x36f821(0x1a4,0x145,0x141,0x69,0x234)+_0x3d8661(0x26d,0xe6,0x140,0x209,0x12d)+_0x3d8661(0x1fc,0x193,0x125,0x163,0x2e)+_0x36f821(0x6f,-0x50,0x16f,-0x1c,0x48)+'n\x20'+command+(_0x3d8661(0xa5,0x137,0x162,0x1b3,0xc6)+'vn'));if(media!==null){var _0x3207c2={};_0x3207c2[_0x36f821(-0x19,0xfa,-0x99,-0x67,0x30)]=q,_0x3207c2[_0x5a2b18(0x5df,0x4a8,0x542,0x407,0x5a8)]=_0x5a2b18(0x32f,0x465,0x407,0x4e1,0x4a9)+_0x5339a4(-0x2,0xee,0x1e4,0x7e,-0x30)+_0x285932(0x4b1,0x582,0x376,0x477,0x31c)+q+_0x3d8661(0x201,0x1df,0x1f3,0x103,0xce);var obj=_0x3207c2;listvn[_0x3d8661(0x21f,0x164,0x1a3,0x17d,0x8c)](obj),fs[_0x5a2b18(0x5b4,0x5fa,0x5f8,0x5a7,0x72b)+_0x5a2b18(0x4a6,0x406,0x4b5,0x5d5,0x520)+_0x5a2b18(0x4fc,0x5a6,0x503,0x4ec,0x4f5)](_0x285932(0x67e,0x768,0x557,0x630,0x5cb)+_0x36f821(0xf6,0x1e,0x9a,0x73,0x71)+_0x5339a4(0x3f,0x7,0xdf,0xb6,-0xae)+_0x5339a4(0x254,0x1f8,0x1d0,0x25e,0x266)+_0x5a2b18(0x40a,0x63d,0x51d,0x512,0x53f),JSON[_0x36f821(0x196,0x1d7,0xf3,0x213,0xcf)+_0x36f821(0x16c,0x1d5,0x218,0x20f,0x12e)](listvn,null,0x2df*0x7+0x1cbf+0x2f*-0x10a)),reply(_0x5339a4(0x19b,0x74,0xae,-0xbc,0xc9)+'s');}break;case prefix+(_0x285932(0x3e0,0x36a,0x335,0x480,0x45f)+'n'):var dbx=listvn[_0x36f821(0x117,0xae,0xb8,0x271,0x182)](_0xc50e2d=>_0xc50e2d);if(dbx===undefined)return reply(_0x3d8661(0x165,0x334,0x216,0x1ec,0x1b2)+_0x285932(0x613,0x614,0x7f4,0x6d7,0x82d)+_0x36f821(0x88,0x10e,0x1ab,-0x49,0xdc)+_0x36f821(0x1e9,0x1b8,0x279,0x21f,0x338)+_0x5339a4(0x2f4,0x1b0,0x228,0x64,0x2bb));var no=-0xa4b+-0x4c*0x2b+-0x18*-0xf6,teks=_0x36f821(0x220,0x34d,0x1b6,0x32f,0x186)+_0x3d8661(0x7b,0x10e,0x18f,0x22e,0x22d)+_0x5339a4(0x30a,0x1df,0x140,0x32b,0x251);for(let i of listvn){teks+='*'+no++ +_0x5339a4(0x67,0x1c8,0x83,0x164,0x12e)+i[_0x5339a4(0x117,-0x22,-0xed,0xe6,-0x13)]+_0x36f821(0x57,0x10a,0x2f,0x33,-0x105)+prefix+(_0x285932(0x4ce,0x65b,0x6c6,0x582,0x696)+'\x20')+i[_0x285932(0x58c,0x5ec,0x587,0x63a,0x70b)][_0x5a2b18(0x4a5,0x643,0x4e5,0x443,0x50c)+'ce'](_0x3d8661(0x24b,0xef,0x177,0x244,0x25e)+_0x36f821(0xf7,-0x26,0xf9,0x1f3,0x2b)+_0x285932(0x400,0x58c,0x4fc,0x477,0x565),'')[_0x5a2b18(0x48d,0x448,0x4e5,0x5be,0x594)+'ce'](_0x5339a4(0xa2,0x103,0x246,0x36,0x1b7),'')+'\x0a';}teks+='\x0a*'+prefix+(_0x3d8661(0x175,0x227,0xdd,0x200,0x3d)+_0x285932(0x4e4,0x5d5,0x590,0x4ea,0x5d5)+_0x5339a4(-0x1a1,-0x47,-0x14e,0xed,-0x19)+_0x3d8661(0x369,0x367,0x363,0x383,0x3a8)+_0x36f821(0x5b,-0xc7,0x28,0x125,0xf5)+_0x5a2b18(0x3b4,0x46e,0x350,0x441,0x2e2)+_0x5339a4(-0x165,-0x1a,-0x135,0x13d,-0x65)+_0x3d8661(0x341,0x303,0x344,0x462,0x48c)+_0x3d8661(0x397,0x2d1,0x29c,0x24c,0x3ae)+'*'),reply(teks);break;case prefix+_0x5a2b18(0x46c,0x516,0x48a,0x5c2,0x546):if(args[_0x285932(0x42e,0x581,0x462,0x579,0x6b3)+'h']<-0x9bb*0x1+0x2065+-0x16a8)return reply(_0x36f821(-0x28,0x112,-0xa5,0x73,-0xa3)+_0x36f821(0xcd,0x196,0x1bd,0x11b,-0x51)+_0x36f821(0x27a,0x224,0x3aa,0x165,0x196)+command+(_0x5a2b18(0x35b,0x2ba,0x3f2,0x297,0x49c)+'vn'));try{var dbx=listvn[_0x5339a4(0x178,0x10e,0x8a,0x202,0xd9)](_0x10ec2a=>_0x10ec2a[_0x36f821(-0x19,0xba,0x101,-0xf7,-0x4c)]===q);if(dbx!==undefined){if(dbx===undefined)return reply(_0x5a2b18(0x4a7,0x3af,0x4a6,0x43c,0x486)+_0x5a2b18(0x5e0,0x5ed,0x5df,0x5ae,0x6a0)+_0x5339a4(-0x9a,0x7f,0xf5,0xe5,0x76)+_0x3d8661(0x264,0x3a6,0x2d0,0x42e,0x2ff)+_0x5339a4(0xae,0x1b0,0x2c8,0x227,0x1e2));}var _0x14f0be={};_0x14f0be[_0x3d8661(0x198,0x2c2,0x2d7,0x2ef,0x1ef)+'d']=msg,conn[_0x285932(0x7cb,0x5de,0x55b,0x672,0x76e)+_0x285932(0x5d1,0x4e8,0x51f,0x4e8,0x521)+'e'](from,{'audio':fs[_0x5339a4(-0x18,0x44,0x165,-0x7d,0x123)+_0x3d8661(0x252,0x2d8,0x24a,0x250,0x1c2)+'nc'](dbx[_0x36f821(0x1cb,0x22a,0xc6,0x31c,0x318)]),'mimetype':_0x3d8661(0x5c,-0x69,0xbb,0xe9,0x3)+_0x3d8661(0x192,0x98,0x116,0x5a,0x1d2),'ptt':!![]},_0x14f0be);}catch{reply(_0x285932(0x5ad,0x62f,0x672,0x596,0x5bf)+_0x3d8661(-0x6f,0x220,0xd7,-0x24,0x135)+_0x5339a4(0x34e,0x256,0x39d,0x261,0x13e)+q+(_0x5339a4(-0x5b,0x58,0x9b,-0xfe,-0xe4)+_0x285932(0x6fb,0x6b0,0x4d2,0x5ac,0x6fd)+'a!'));}break;case prefix+_0x285932(0x40c,0x313,0x5a0,0x465,0x4b2):if(!isOwner)return reply(mess[_0x3d8661(0x32f,0x3ca,0x328,0x463,0x35f)+_0x36f821(0x1ba,0x2fe,0x2dc,0x17e,0x283)]);if(args[_0x5a2b18(0x4be,0x339,0x481,0x557,0x57c)+'h']<-0x329+0x57d*0x7+-0x11a0*0x2)return reply(_0x36f821(-0x28,-0x10d,-0x12e,-0xe4,0x26)+_0x5a2b18(0x385,0x475,0x444,0x31a,0x421)+_0x36f821(0x27a,0x3cd,0x328,0x184,0x3cf)+command+(_0x3d8661(0x1e,0x157,0x162,0x193,0x292)+'vn'));try{var rpMQkE=(_0x5a2b18(0x569,0x5cf,0x5bc,0x510,0x507)+_0x5a2b18(0x448,0x458,0x424,0x31c,0x37d)+_0x3d8661(0x309,0x16a,0x1af,0xb7,0x2c5))[_0x36f821(-0x3b,-0x5a,-0xc2,-0x182,-0x157)]('|'),GHAjmV=0x3*0x3cb+-0x233c+0x17db;while(!![]){switch(rpMQkE[GHAjmV++]){case'0':reply(_0x3d8661(0x23d,0x1fa,0x164,0x175,0x27c)+'s');continue;case'1':if(dbx!==undefined){if(dbx===undefined)return reply(_0x5a2b18(0x3d3,0x3c9,0x4a6,0x5e8,0x5e5)+_0x5a2b18(0x4cd,0x6c1,0x5df,0x4e5,0x5a6)+_0x5a2b18(0x380,0x4c2,0x3ff,0x2dd,0x468)+_0x5339a4(0x22b,0x1e0,0x197,0x24f,0x12f)+_0x3d8661(0x177,0x3c3,0x2a0,0x1b0,0x156));}continue;case'2':fs[_0x36f821(0xae,-0x29,-0x6,-0x6,-0x39)+_0x5339a4(0x2a,0xbe,0x149,-0x20,0x21f)](dbx[_0x285932(0x620,0x602,0x6bc,0x63a,0x56a)]);continue;case'3':listvn[_0x36f821(0x19d,0x5b,0x197,0xa8,0x59)+'e'](posi,0xeab*-0x2+-0x126*0xd+0x2c45);continue;case'4':var dbx=listvn[_0x36f821(0x117,0x1d7,0x15d,0x49,0xc3)](_0x368426=>_0x368426[_0x5339a4(-0x67,-0x22,0x11e,0xc1,-0xf1)]===q);continue;case'5':fs[_0x3d8661(0x334,0x22e,0x368,0x2d9,0x46f)+_0x3d8661(0x32a,0x2d8,0x225,0x10a,0x12a)+_0x36f821(0x18c,0x165,0x2b9,0x276,0xba)](_0x36f821(0x1c1,0x234,0xac,0x230,0x2b9)+_0x5339a4(0x3d,0xed,0xb0,-0x9,0x183)+_0x36f821(0x10,-0x106,0xcb,0x119,-0xa6)+_0x5a2b18(0x47c,0x4ee,0x578,0x5ba,0x6ce)+_0x5a2b18(0x571,0x4fa,0x51d,0x52c,0x4b6),JSON[_0x3d8661(0x234,0x29e,0x27d,0x1e1,0x2c3)+_0x5339a4(0x106,0x163,0x1a1,0x51,0x18f)](listvn,null,0x1a3*-0x5+0x1fba+-0x1789));continue;case'6':var posi=listvn[_0x5a2b18(0x5d3,0x5a6,0x513,0x435,0x60e)+'Of'](dbx);continue;}break;}}catch{reply(_0x3d8661(0x364,0x1e7,0x20e,0x235,0x2c7)+_0x5a2b18(0x45d,0x354,0x367,0x42f,0x4b9)+_0x5a2b18(0x650,0x6cf,0x5d6,0x701,0x59d)+q+(_0x5339a4(-0xcc,0x58,0x35,0x90,0xa2)+_0x285932(0x6e1,0x4fe,0x6ba,0x5ac,0x4c5)+'a!'));}break;case prefix+(_0x5339a4(0x76,-0x27,-0xec,-0xd0,-0x17b)+_0x3d8661(0x174,0x27b,0x2a6,0x2c6,0x3cf)):case prefix+(_0x36f821(-0x1e,0xc3,-0xf,-0xed,-0x122)+'gc'):if(!isGroup)return reply(mess[_0x36f821(0x110,0x1dd,-0x15,0x1d8,0x119)+_0x36f821(0x2,0x10c,0xa1,0x47,-0x8b)]);if(!isGroupAdmins)return reply(mess[_0x36f821(0x13b,0x259,0x45,0x189,0x114)+_0x285932(0x7ac,0x60d,0x5f0,0x64c,0x792)]);if(!isBotGroupAdmins)return reply(mess[_0x36f821(-0x35,-0x186,0x6f,0x24,-0x176)+_0x5a2b18(0x54c,0x5cd,0x4ef,0x606,0x57d)]);if(isImage||isQuotedImage){var media=await downloadAndSaveMediaMessage(msg,_0x5339a4(-0x33,0x88,-0x4b,0x188,0x58),_0x5339a4(0xd4,0x15e,0x2a,0x2a4,0x13a)+from+_0x285932(0x56e,0x43b,0x4ef,0x562,0x414));if(args[-0x191c+0x726*-0x5+0x1*0x3cdb]==_0x285932(0x47a,0x429,0x5b9,0x577,0x56a)+_0x285932(0x51e,0x527,0x558,0x581,0x63e)){var {img}=await generateProfilePicture(media),_0x7cebb0={};_0x7cebb0['to']=from,_0x7cebb0[_0x5339a4(-0x74,0x2,-0x98,0x12c,0xb0)]=_0x285932(0x7f7,0x730,0x830,0x6e0,0x7be),_0x7cebb0[_0x5a2b18(0x2eb,0x2ef,0x432,0x46e,0x4f0)]=_0x5a2b18(0x41f,0x21a,0x36f,0x48a,0x381)+_0x3d8661(0x336,0x285,0x2c2,0x1e5,0x1d0)+_0x3d8661(0x2e3,0x32c,0x221,0x281,0x18b)+'re';var _0x24842f={};_0x24842f[_0x36f821(0xb,0x7c,0x6c,0xf2,-0xf)]=_0x285932(0x4cc,0x46a,0x442,0x500,0x451);var _0x85883d={};_0x85883d[_0x285932(0x649,0x6e5,0x553,0x618,0x56b)]=_0x285932(0x50c,0x552,0x64b,0x5a9,0x4b4)+'re',_0x85883d[_0x285932(0x7f0,0x725,0x72c,0x6e5,0x6c3)]=_0x24842f,_0x85883d[_0x36f821(0x20,0x158,-0x13b,-0xa5,0x93)+'nt']=img;var _0x5343b0={};_0x5343b0[_0x36f821(0x1a9,0x76,0x2ca,0x4a,0x2f9)]='iq',_0x5343b0[_0x285932(0x648,0x7c0,0x593,0x6e5,0x803)]=_0x7cebb0,_0x5343b0[_0x3d8661(-0x15,0x218,0x107,0x4,0x184)+'nt']=[_0x85883d],await conn[_0x285932(0x4d9,0x53d,0x4d3,0x5e9,0x548)](_0x5343b0),fs[_0x36f821(0xae,0x1d7,0x73,0xc6,-0x5b)+_0x36f821(0xc7,0x1bd,0x7c,0x150,0x5)](media),reply(_0x5339a4(-0xbb,0x74,0x2e,-0xd8,-0x97)+'s');}else{var _0x46c8ba={};_0x46c8ba[_0x5a2b18(0x3ad,0x5fa,0x4be,0x5c4,0x4a5)]=media,await conn[_0x5339a4(-0x12,-0x33,-0x1,-0x14b,-0xa)+_0x3d8661(0x115,0x2c3,0x24b,0x29b,0x142)+_0x36f821(0x125,0x21b,0x10b,-0x38,-0x5)+_0x5a2b18(0x491,0x5b4,0x5cb,0x6c9,0x681)](from,_0x46c8ba)[_0x36f821(0x235,0x188,0x234,0x152,0x30c)](_0x16e606=>{function _0x267742(_0x3809a0,_0x1cf562,_0x5c560b,_0x38c406,_0x432c67){return _0x285932(_0x3809a0-0xf,_0x1cf562-0x19b,_0x5c560b-0x1ba,_0x5c560b-0x52,_0x1cf562);}var _0x3f4c43={'euVIk':function(_0x1f8d0a,_0x1f4d12){return _0x1f8d0a(_0x1f4d12);}};function _0x551a0f(_0x19657a,_0x48bbf4,_0x2c9c38,_0x2beb3c,_0x3704b8){return _0x5339a4(_0x19657a-0xea,_0x2c9c38- -0x17d,_0x2c9c38-0x1df,_0x2beb3c-0x1db,_0x2beb3c);}function _0x4e6c34(_0x2dd500,_0x27af87,_0xf06ad0,_0x1f0653,_0x5e7c58){return _0x5339a4(_0x2dd500-0x91,_0x27af87-0x49e,_0xf06ad0-0x17f,_0x1f0653-0x19d,_0xf06ad0);}function _0x102a5c(_0x3c0f59,_0x60c5f6,_0x4d5aa5,_0x26c15a,_0xa536e8){return _0x5339a4(_0x3c0f59-0x166,_0xa536e8-0x11d,_0x4d5aa5-0xfe,_0x26c15a-0x1b9,_0x26c15a);}_0x3f4c43[_0x4e6c34(0x6dd,0x605,0x6b5,0x744,0x545)](reply,_0x267742(0x517,0x543,0x53e,0x4e9,0x5c1)+'s'),fs[_0x102a5c(0x120,0x1f8,0x320,0x222,0x1c2)+_0x4e6c34(0x50d,0x55c,0x628,0x5ac,0x5dd)](media);})[_0x3d8661(0x4c,0x16,0xa7,0x9e,0x10b)](()=>reply(mess[_0x36f821(0x100,0x90,0x1d,0x18e,0x50)][_0x5339a4(0x1e2,0x9d,0xab,0xa4,0x1a4)]));}}else reply(_0x5a2b18(0x2b2,0x250,0x34f,0x48a,0x368)+_0x3d8661(0x361,0x308,0x2b3,0x3c5,0x3a0)+_0x5a2b18(0x5d6,0x4bb,0x57f,0x5b2,0x5e6)+_0x3d8661(-0x84,0xe1,0xd8,-0x5f,0xb6)+_0x285932(0x5e4,0x74b,0x5a0,0x68d,0x7df)+_0x3d8661(0x285,0x2c1,0x353,0x2b2,0x2a4)+_0x5a2b18(0x46c,0x3c2,0x3cd,0x464,0x2b5)+command);break;case prefix+(_0x285932(0x3ef,0x625,0x57d,0x50e,0x473)+_0x3d8661(0x13d,0x32e,0x26a,0x128,0x195)):case prefix+_0x36f821(0x93,0x117,0x176,0x161,0x199):case prefix+_0x5339a4(0x12,0x15c,0x21e,0x1e2,0x1d9):if(!isGroup)return reply(mess[_0x3d8661(0x31b,0x2d6,0x1f7,0xea,0x9d)+_0x3d8661(0x1a7,0x197,0xe9,-0x2f,0x137)]);if(isGame(sender,isOwner,gcount,glimit))return reply(_0x285932(0x719,0x4af,0x490,0x5cd,0x680)+_0x36f821(0x15b,0x189,0x11e,0x267,0x9e)+_0x3d8661(-0x8,-0x3,0x13b,0x1a9,0x232)+_0x36f821(0x4,-0xf,-0x5e,0x6a,0xd2)+_0x5a2b18(0x4c5,0x511,0x3c9,0x444,0x2d4)+'is');if(isTicTacToe(from,tictactoe))return reply(_0x3d8661(0x99,0x278,0x1a1,0x6f,0x2c5)+_0x36f821(0x268,0x1dc,0x320,0x3b8,0x3a0)+_0x36f821(0x1e0,0x2a4,0x2cb,0x26b,0x32f)+_0x285932(0x4ae,0x343,0x40b,0x497,0x504)+_0x3d8661(0x2a3,0x18b,0x187,0x12f,0x1b7)+_0x285932(0x571,0x647,0x62f,0x533,0x529));if(args[_0x5a2b18(0x52f,0x41f,0x481,0x39b,0x438)+'h']<0x1870+0x25f7+0x3e65*-0x1)return reply(_0x5a2b18(0x30f,0x431,0x34f,0x35e,0x233)+_0x36f821(0xcd,-0x21,0xb5,0xd5,0xa)+_0x5339a4(0x126,0x271,0x1dc,0x1a4,0x3d2)+'*'+prefix+(_0x5a2b18(0x4a2,0x39e,0x416,0x33f,0x2ff)+_0x5339a4(0x18e,0x17b,0xa9,0x29e,0x154)+_0x285932(0x6ba,0x699,0x667,0x590,0x6dc)));if(mentioned[_0x285932(0x4e7,0x6c3,0x4e1,0x579,0x45c)+'h']!==0x1*-0xf59+0x306*0xc+0x5e*-0x39){var HAttMf=(_0x5a2b18(0x518,0x4e8,0x43d,0x536,0x382)+_0x36f821(0x1d7,0x25c,0x1b5,0x1ba,0xd8)+'5')[_0x5339a4(0x83,-0x44,-0xfd,-0xc5,-0xeb)]('|'),nLVmjq=0x5*-0x2fe+-0x81*-0x24+-0x32e;while(!![]){switch(HAttMf[nLVmjq++]){case'0':if(mentioned[-0x42*-0x68+-0x1198*-0x1+-0x2c68]===botNumber)return reply(_0x5339a4(0x223,0x126,0x13d,0x259,0x1bd)+_0x5a2b18(0x544,0x56d,0x5ec,0x728,0x659)+_0x5a2b18(0x63d,0x530,0x5de,0x543,0x4e7)+_0x5a2b18(0x3e3,0x33f,0x480,0x441,0x4ed)+_0x36f821(0x21e,0x376,0x122,0x2d6,0x320)+_0x5a2b18(0x2d0,0x479,0x344,0x285,0x3e5));continue;case'1':tictactoe[_0x3d8661(0x1e7,0x151,0x1a3,0x2a4,0x46)]({'id':from,'status':null,'hadiah':hadiah,'penantang':sender,'ditantang':mentioned[0x6cb*-0x1+0x3*0x15b+-0x2ba*-0x1],'waktu':setTimeout(()=>{function _0x148270(_0x5759eb,_0x787762,_0x3e6423,_0x5bdee5,_0x3711c4){return _0x3d8661(_0x5759eb-0x198,_0x5759eb,_0x5bdee5- -0x81,_0x5bdee5-0x10f,_0x3711c4-0x178);}function _0x4ffc34(_0x4e72a5,_0xcdf862,_0x5d8dad,_0x5833c1,_0x5be742){return _0x5a2b18(_0x4e72a5-0x90,_0xcdf862-0x1be,_0x4e72a5- -0x30,_0xcdf862,_0x5be742-0x1d1);}function _0x1b44c5(_0x320b4f,_0x57197d,_0x8451d6,_0x326f4e,_0xf7ab88){return _0x36f821(_0x8451d6-0x12f,_0x57197d-0xa,_0x8451d6-0x104,_0x57197d,_0xf7ab88-0xe1);}var _0x282c73={'DjNhb':function(_0x29fe3d,_0x401082,_0x876f2f){return _0x29fe3d(_0x401082,_0x876f2f);}};if(_0x282c73[_0x1b44c5(0x17e,0x15b,0x175,0x70,0x20d)](isTicTacToe,from,tictactoe))conn[_0x5b79fc(0x42d,0x4d5,0x424,0x480,0x5b5)+_0x1b44c5(0x17b,0x22a,0x1a8,0xf1,0x1a4)+'e'](from,{'text':_0x1b44c5(0x303,0x3fb,0x2dc,0x2cc,0x371)+_0x5bba2f(0x238,0x32d,0x3a5,0x38d,0x2b6)+_0x5b79fc(0x467,0x47a,0x358,0x487,0x46c)+_0x1b44c5(0x284,0x225,0x31a,0x36c,0x2da)+_0x4ffc34(0x5c6,0x4fb,0x65b,0x5c2,0x4cf)+_0x4ffc34(0x46a,0x592,0x4fe,0x484,0x38e)+_0x148270(0x132,0x1d2,0x1b0,0x1d9,0x2a1)+_0x5bba2f(-0x26,0x1fd,0x49,-0x97,0xb5)+_0x148270(0x174,0x16a,0x17d,0x132,0x63)+'\x20@'+mentioned[-0x1dda+-0x1441+0x7f*0x65][_0x148270(0xd5,0x75,-0xd0,0x2b,0xa0)]('@')[-0xed9+-0x1684+0x255d],'mentions':[mentioned[0xd80+0xa*-0x323+0x11de]]});var _0x2f0878=_0x282c73[_0x4ffc34(0x38d,0x4a5,0x2fb,0x30f,0x4be)](getPosTic,from,tictactoe);function _0x5b79fc(_0x24aae6,_0x47f804,_0x1ad400,_0x2d7d9c,_0x4668fb){return _0x285932(_0x24aae6-0x156,_0x47f804-0x1a3,_0x1ad400-0x142,_0x47f804- -0x19d,_0x1ad400);}function _0x5bba2f(_0x3dfc06,_0x55311b,_0x10fac2,_0x551442,_0x932f10){return _0x5339a4(_0x3dfc06-0x126,_0x932f10-0x7f,_0x10fac2-0x3b,_0x551442-0x1d4,_0x55311b);}tictactoe[_0x1b44c5(0x3c8,0x222,0x2cc,0x355,0x243)+'e'](_0x2f0878,0x2f9*0x7+0x20d8+-0x35a6);},0x4049*0x3+0x60f1+-0xac9c),'timeout':0xea60,'TicTacToe':[_0x5a2b18(0x501,0x286,0x3b0,0x4f6,0x2b4),_0x285932(0x5a6,0x668,0x572,0x61f,0x500),_0x5a2b18(0x427,0x382,0x38b,0x352,0x3b8),_0x3d8661(0x2a9,0x386,0x254,0x10b,0x1d5),_0x36f821(0x217,0x1b8,0x161,0x229,0x2be),_0x285932(0x456,0x3e6,0x30e,0x43d,0x547),_0x5339a4(0xbf,0x1cb,0xdd,0xbf,0x7d),_0x3d8661(0x391,0x3c4,0x2e7,0x188,0x20c),_0x36f821(0x11b,0x152,0xab,0x193,0x111)]});continue;case'2':if(mentioned[-0x3*0x42e+0x797*0x4+-0x11d2]===sender)return reply(_0x285932(0x4e0,0x675,0x692,0x638,0x582)+_0x5339a4(0x12b,0x233,0x1ab,0xdc,0x192)+_0x36f821(0x22f,0xfc,0x203,0x1bb,0x2f7)+_0x36f821(0x120,0x156,-0x25,0xb6,0x10)+_0x36f821(0x24,0x3d,0xaf,-0x10e,-0x130)+_0x5a2b18(0x2ae,0x24e,0x36b,0x304,0x410));continue;case'3':mentions(monospace('@'+sender[_0x36f821(-0x3b,-0x31,-0x170,-0x14f,-0xfd)]('@')[-0x1*0x1651+0x3*0x44f+0x964]+(_0x5339a4(0x1c0,0x212,0x35b,0x2a9,0xc0)+_0x5a2b18(0x3e0,0x3b6,0x370,0x39a,0x35c)+'\x20@')+mentioned[-0x1444+-0xf*0x6b+0x1a89][_0x5a2b18(0x37d,0x2d1,0x33c,0x498,0x1fd)]('@')[-0x240+0x1a*0xe3+-0x14ce]+(_0x5339a4(0x326,0x243,0x393,0x36a,0x256)+_0x285932(0x5c4,0x504,0x3cf,0x46c,0x31d)+_0x36f821(0x1e7,0x11f,0x12f,0x295,0x1b7)+_0x3d8661(0x361,0x327,0x264,0x395,0x322)+_0x36f821(0x1cf,0x1d3,0x260,0xbc,0x280)+_0x36f821(0x202,0x27d,0x258,0x2d6,0x116)+_0x5339a4(0x168,0xca,0x1a6,0x72,0x199)+_0x285932(0x574,0x761,0x71f,0x633,0x4e2)+_0x285932(0x4be,0x44d,0x657,0x4fd,0x457)+_0x3d8661(0x1ec,0x2c4,0x1b9,0xc4,0xc1)+_0x36f821(0x12,-0x108,-0x142,-0x8c,0x97)+_0x5339a4(-0x111,0x34,-0x7e,0xf3,0x146)+':\x20')+hadiah+(_0x5a2b18(0x53d,0x527,0x458,0x3ae,0x377)+_0x5339a4(-0x6a,0xb9,0xe,-0x6a,-0x6d))),[sender,mentioned[-0x9*0x65+0x181+0x2*0x106]],![]);continue;case'4':var hadiah=randomNomor(-0x1d2*-0xd+-0xf2+-0x1654,-0x7eb+-0x377*0x4+0xe5*0x19);continue;case'5':gameAdd(sender,glimit);continue;}break;}}else reply(_0x3d8661(0x4e,0x122,0xbf,0x139,-0x93)+_0x36f821(0xcd,0x3,-0x89,-0x37,0x1f1)+_0x5339a4(0x2fb,0x271,0x200,0x126,0x2fe)+'*'+prefix+(_0x285932(0x54a,0x403,0x616,0x50e,0x44d)+_0x5339a4(0xb7,0x17b,0x25c,0x17a,0x1ee)+_0x36f821(0x121,0x191,0x12,0x115,0x15f)));break;case prefix+(_0x36f821(0x24e,0x346,0x25a,0x1b7,0x369)+'t'):case prefix+(_0x3d8661(0x382,0x292,0x335,0x344,0x2bc)+'c'):if(!isGroup)return reply(mess[_0x36f821(0x110,0x180,0x1af,0x19b,0x26b)+_0x285932(0x522,0x448,0x449,0x471,0x594)]);if(!isTicTacToe(from,tictactoe))return reply(_0x285932(0x67e,0x467,0x5f2,0x59e,0x625)+_0x5339a4(0x277,0x25f,0x11f,0x316,0x371)+_0x285932(0x4b7,0x50f,0x581,0x571,0x4af)+_0x285932(0x76c,0x6d8,0x69b,0x64f,0x75a)+_0x5a2b18(0x350,0x569,0x416,0x574,0x2c8)+_0x285932(0x6ab,0x5a5,0x6d3,0x6a2,0x590)+_0x36f821(0x242,0xe3,0x31b,0x2c2,0x2d1)+_0x36f821(0x1da,0x287,0x219,0x2bc,0x1bc)+'i');var posi=getPosTic(from,tictactoe);if(tictactoe[posi][_0x5a2b18(0x4f7,0x507,0x54c,0x535,0x653)+_0x285932(0x5eb,0x54f,0x795,0x639,0x6ba)][_0x285932(0x3a2,0x314,0x4c9,0x452,0x45b)+_0x5a2b18(0x3bd,0x323,0x3cc,0x456,0x354)](sender))tictactoe[_0x5a2b18(0x53f,0x4db,0x514,0x645,0x643)+'e'](posi,-0x1067+-0x2e7+0x1*0x134f),reply(_0x5339a4(0x5d,0x1a9,0x51,0x1bf,0x6c)+_0x36f821(-0x31,0x31,0x6a,0xad,0x34)+_0x5339a4(-0x5b,0x41,-0xf5,-0x111,-0x7c)+_0x5a2b18(0x564,0x53a,0x59d,0x6ae,0x557)+_0x285932(0x6a2,0x56c,0x69e,0x611,0x51b)+_0x285932(0x56a,0x608,0x589,0x5c2,0x537)+_0x5a2b18(0x465,0x5c7,0x545,0x5eb,0x459)+_0x3d8661(0xbd,0xc7,0x1e2,0x176,0xa3)+_0x5a2b18(0x443,0x51b,0x470,0x382,0x508));else{if(tictactoe[posi][_0x5339a4(0x44,0x16,0x145,0x9c,-0xff)+_0x5339a4(0x1f6,0x1c1,0x2c2,0x8b,0x12f)][_0x285932(0x47d,0x557,0x3c0,0x452,0x429)+_0x285932(0x56e,0x53a,0x399,0x4c4,0x4b1)](sender))tictactoe[_0x5a2b18(0x3df,0x58c,0x514,0x421,0x5fa)+'e'](posi,0xcf7*0x3+0xbb3+-0x3297*0x1),reply(_0x285932(0x68e,0x5c7,0x663,0x621,0x5ea)+_0x285932(0x50c,0x46b,0x3ad,0x43e,0x411)+_0x5a2b18(0x4ac,0x360,0x3c1,0x29e,0x321)+_0x36f821(0x226,0x1e6,0x2c0,0x2e8,0x11e)+_0x5339a4(0x205,0x199,0x1b5,0x2f5,0x2c6)+_0x5339a4(0xda,0x14a,0x225,0x22c,0x48)+_0x5a2b18(0x60d,0x663,0x545,0x43d,0x62c)+_0x36f821(0xfb,0x202,0x8a,0x94,0x1fa)+_0x3d8661(0xf4,0x27e,0x1e0,0xd3,0x120));else{if(isGroupAdmins)tictactoe[_0x5339a4(0x2cc,0x194,0x228,0x191,0x126)+'e'](posi,-0xbad+-0x58f+-0x113d*-0x1),reply(_0x285932(0x565,0x5a6,0x5e8,0x621,0x5ab)+_0x285932(0x502,0x4b7,0x453,0x43e,0x49c)+_0x5339a4(-0x119,0x41,0x93,0x68,0x71)+_0x285932(0x592,0x5cc,0x5a1,0x695,0x5fb)+_0x5a2b18(0x4b8,0x678,0x519,0x40a,0x3e2)+_0x285932(0x691,0x5f2,0x55e,0x5c2,0x5f7)+_0x285932(0x526,0x74e,0x53e,0x63d,0x5d3)+_0x5339a4(-0x15,0xf2,0x18,-0x64,0x18b)+_0x3d8661(0x1a4,0xab,0x1e0,0x169,0x1ef));else isOwner?(tictactoe[_0x285932(0x5f3,0x53b,0x69d,0x60c,0x645)+'e'](posi,-0xd1c*0x2+-0x1094*-0x2+-0x6ef),reply(_0x36f821(0x1b2,0x7d,0x1db,0x27c,0x268)+_0x285932(0x54e,0x4ef,0x3c8,0x43e,0x581)+_0x5a2b18(0x350,0x4f2,0x3c1,0x4eb,0x267)+_0x3d8661(0x1bb,0x22b,0x30d,0x44a,0x398)+_0x36f821(0x1a2,0x44,0x259,0x25f,0x26b)+_0x3d8661(0x328,0x31e,0x23a,0x277,0x13c)+_0x285932(0x57b,0x76e,0x6af,0x63d,0x4f9)+_0x5339a4(0x89,0xf2,0x198,0x185,0xd8)+_0x285932(0x428,0x572,0x5fc,0x568,0x5c9))):reply(_0x5a2b18(0x3b8,0x302,0x35d,0x459,0x3ee)+_0x285932(0x52a,0x649,0x4bf,0x58c,0x575)+_0x285932(0x7cd,0x6eb,0x58b,0x6e4,0x588)+_0x36f821(0x19b,0x2b4,0x54,0x189,0xa9)+_0x36f821(0x5b,0xbb,-0xb4,-0x64,0x1a7)+_0x5a2b18(0x5fd,0x445,0x4d7,0x3b5,0x511)+_0x285932(0x6fc,0x5e3,0x66e,0x64e,0x7a1)+_0x3d8661(0x1b8,0x84,0x1c6,0x105,0x1d8)+_0x36f821(0xcf,0x1e1,0xbc,0x187,-0x52)+_0x36f821(0xd9,0x206,0x1f0,0x112,0x1ba)+_0x5a2b18(0x526,0x2d4,0x423,0x42d,0x390)+_0x36f821(0x21f,0x171,0x29e,0x1a7,0x1ec)+'n!');}}break;case prefix+(_0x285932(0x583,0x60d,0x693,0x556,0x40e)+'o'):if(!isGroup)return reply(mess[_0x3d8661(0x21c,0x29f,0x1f7,0x222,0x23d)+_0x5339a4(-0x6a,-0x7,-0x146,0xa1,0x148)]);if(isGame(sender,isOwner,gcount,glimit))return reply(_0x36f821(0x15e,0x20e,0x19,0x12c,0x286)+_0x5a2b18(0x399,0x409,0x4d2,0x5a9,0x5f3)+_0x36f821(0x54,0x5f,-0xff,-0x3a,0xa2)+_0x36f821(0x4,-0xdf,-0x7,-0x5c,0x3)+_0x5339a4(0x183,0x49,0x7,0x14b,0x132)+'is');if(args[_0x285932(0x59c,0x532,0x682,0x579,0x47f)+'h']<0x1*0x112a+0x5*-0x7bd+-0x25*-0x95)return reply(_0x3d8661(0x25,0x193,0xbf,0x197,0xfe)+_0x3d8661(0x188,0x2eb,0x1b4,0x77,0x1c7)+_0x5339a4(0x291,0x271,0x181,0x1ad,0x14b)+'*'+command+(_0x285932(0x740,0x53d,0x7fa,0x69a,0x6f6)+_0x5a2b18(0x4ff,0x590,0x51e,0x3db,0x58d)+_0x3d8661(0x2c7,0x34e,0x217,0x170,0x18a)));if(mentionUser[_0x5a2b18(0x434,0x536,0x481,0x340,0x3f0)+'h']==-0x37*-0x26+-0x9f4+-0x2*-0xe5)return reply(_0x36f821(0x72,-0x2e,0x13b,0x75,-0x3a)+_0x5339a4(-0x11f,-0x1e,-0xa4,0x16,0xec)+_0x5339a4(0x11a,0xe0,0x1c1,0x19d,0x1c7)+_0x36f821(0x149,0x1b,0x19a,0x1a0,0x15f)+_0x36f821(0xf5,0x17d,0x178,0xa3,0x24d)+_0x36f821(0xe8,0x8f,-0x51,0x4a,0x13f)+_0x36f821(0x18,0x150,0xdd,0x3d,-0x47)+_0x5339a4(0xfa,-0x38,-0xdd,-0x58,0x58));if(mentionUser[_0x36f821(0x10a,0xa3,0x1d3,0x152,-0x53)+'h']>0xed*-0x16+-0x11d7*-0x1+0x3b*0xb)return reply(_0x5a2b18(0x4ae,0x67d,0x5c6,0x59d,0x710)+_0x36f821(0x275,0x2c7,0x2f1,0x14b,0x327)+_0x5339a4(0xf7,0x17d,0x1e0,0x2c5,0x2bd)+_0x285932(0x536,0x4f4,0x379,0x48d,0x539)+_0x36f821(0xdc,0x170,0x1a,-0x74,0x1));if(mentionUser[-0xd*0x13f+0xa*0x201+0x3d7*-0x1]===sender)return reply(_0x3d8661(0x197,0x29f,0x2b0,0x301,0x285)+_0x5339a4(0x2b2,0x233,0x1ab,0x2d5,0x2c8)+_0x285932(0x529,0x618,0x596,0x4f2,0x4ce)+_0x5a2b18(0x5fb,0x3a3,0x4f2,0x441,0x5c7)+_0x5a2b18(0x457,0x504,0x3ca,0x29e,0x450)+_0x5a2b18(0x31d,0x420,0x357,0x302,0x3ce)+'i');if(mentionUser[0x1ff+0x33*0x10+-0x52f]===botNumber)return reply(_0x36f821(0x12f,0x1e1,0x1a8,0x199,0x16c)+_0x5a2b18(0x6af,0x6f1,0x5ec,0x60e,0x6b4)+_0x36f821(0x267,0x222,0x11a,0x389,0x231)+_0x285932(0x4ca,0x4b1,0x629,0x578,0x5b5)+_0x36f821(0x21e,0x161,0x238,0x330,0x379)+_0x5a2b18(0x389,0x2f4,0x344,0x204,0x21c));if(getCasino(from,casino)!==null)return reply(_0x5339a4(0x1d1,0xfb,0x28,-0x44,0x1a9)+_0x5a2b18(0x5b2,0x4e6,0x4df,0x47d,0x5f5)+_0x5339a4(0x16d,0x1a6,0x1f4,0x2bb,0x24e)+_0x3d8661(0x11c,0x2c7,0x197,0x1ba,0x289)+_0x285932(0x6a1,0x67e,0x4c5,0x5c7,0x51f)+_0x36f821(0x141,0x10,0x14a,0xa5,0x10d)+_0x5339a4(-0x2a,0x83,0xa6,-0x54,-0x42)+_0x3d8661(-0x82,0x7b,0xae,-0xa9,0xc3)+_0x285932(0x688,0x7bd,0x611,0x68c,0x6bc)+_0x5a2b18(0x5a4,0x556,0x54a,0x5c7,0x4b3)+_0x285932(0x4d1,0x5b9,0x5a3,0x5fc,0x688)+_0x285932(0x5da,0x3b6,0x5b1,0x4f3,0x5cf)+_0x285932(0x504,0x5c1,0x62d,0x52c,0x471)+prefix+(_0x36f821(0x77,0x97,-0xb6,0x2f,0xfa)+_0x5a2b18(0x6d9,0x5fe,0x5d1,0x6f9,0x483)+_0x5a2b18(0x5c5,0x4d7,0x4d1,0x416,0x626)+_0x285932(0x73c,0x573,0x679,0x661,0x525)+_0x3d8661(0x9c,0x213,0x1cd,0x1ca,0x76)+_0x5339a4(-0x24,0x79,0x1ae,-0xb1,0xbe)+'si'));if(args[_0x285932(0x575,0x64a,0x5e5,0x579,0x496)+'h']==-0x188a+-0xeb1*-0x2+-0x4d6)return reply(_0x285932(0x562,0x69b,0x62f,0x58e,0x613)+_0x36f821(0x3b,0x138,-0x16,0x9,0x18c)+_0x5339a4(0x21,0xfc,0x9a,0xc,-0x3e)+_0x5a2b18(0x461,0x3db,0x3a7,0x4f6,0x488));if(isNaN(parseInt(args[0xb*0x199+-0xd7*0x14+-0xc5])))return reply(_0x3d8661(-0x13,0x154,0xe1,0x177,0x12a)+_0x36f821(0x264,0x3b3,0x114,0x110,0x1ae)+_0x5339a4(-0x5e,0x8b,-0x17,0x9,0x95)+_0x5a2b18(0x4b2,0x5dc,0x56c,0x600,0x564)+_0x5a2b18(0x3b4,0x233,0x38d,0x287,0x3fc)+'a!');args[-0x2113+0xed3+0x3*0x616][_0x5a2b18(0x504,0x413,0x4e5,0x4f1,0x645)+'ce'](/[^\w\s\-]+/,'');var anu=getBalance(sender,balance),ani=getBalance(mentionUser[-0x15*0x1b+0x31c*0x2+-0x401],balance);if(anu<args[-0x211*-0x10+0x2063+0x5f3*-0xb]||anu==_0x3d8661(0x144,0x20e,0xf4,0x1b7,0x39)+_0x36f821(0xa2,0x54,0x81,0xa,0x18d))return reply(_0x285932(0x47d,0x593,0x5b4,0x45c,0x3ef)+_0x5339a4(-0xbc,0x92,-0x7f,0x18a,0x11e)+_0x36f821(0x1fd,0x2aa,0x17b,0x17d,0x1eb)+_0x285932(0x4ac,0x497,0x5ea,0x5a7,0x61d)+_0x5339a4(0x27,-0x2a,-0x6d,-0x108,0x105)+_0x3d8661(0x3e4,0x203,0x2ee,0x1b0,0x331)+_0x36f821(0x261,0x1a6,0x18a,0x207,0x398)+_0x36f821(0x107,-0x2e,0x37,0x150,0x109)+_0x36f821(-0x3d,-0x8,0x3e,0x11c,-0x17f)+_0x5a2b18(0x5ff,0x470,0x528,0x5ab,0x67d)+_0x36f821(0x1e3,0xcb,0x158,0x18a,0x1de)+'k\x20'+prefix+(_0x3d8661(0x2f5,0x131,0x234,0x169,0x196)+_0x5a2b18(0x443,0x440,0x561,0x6a7,0x45b)+_0x3d8661(0x3c4,0x2a5,0x363,0x385,0x22e)+_0x36f821(0x223,0xe4,0x310,0x356,0x367)+_0x36f821(0x22a,0x1d5,0x21f,0x314,0x1ff)+_0x5339a4(0x1c8,0x1f5,0x26a,0x2d8,0xae)+_0x36f821(0x1b7,0x2d7,0xc7,0x93,0xe9)));if(ani<args[0x1*-0x13a3+0xf7d+0x1c*0x26]||ani==_0x5a2b18(0x493,0x3f7,0x384,0x3d4,0x316)+_0x36f821(0xa2,0xce,0x146,-0x67,0x113))return reply(_0x285932(0x396,0x371,0x4bf,0x45c,0x4a3)+_0x5a2b18(0x4e2,0x57d,0x441,0x5a0,0x3f2)+_0x285932(0x58c,0x7af,0x6a6,0x6c4,0x7e3)+_0x36f821(0x266,0x1bc,0x216,0x163,0x244)+_0x285932(0x55d,0x6a8,0x5ac,0x637,0x5f2)+_0x285932(0x52d,0x5b7,0x47c,0x4bd,0x3aa)+_0x5339a4(0x30c,0x26e,0x250,0x1ed,0x1f3)+_0x3d8661(0x34f,0x185,0x246,0x126,0x382)+_0x285932(0x5db,0x6ed,0x811,0x6b2,0x667)+_0x5339a4(0x20c,0x215,0x334,0x2f1,0x107)+_0x5a2b18(0x418,0x621,0x4ed,0x423,0x5a2)+_0x5a2b18(0x4ac,0x2e8,0x3dc,0x36f,0x313)+prefix+(_0x36f821(0x14d,0x1b8,0x8f,0x107,0xe1)+_0x5a2b18(0x428,0x422,0x56e,0x6cc,0x682)+_0x3d8661(0x147,0x298,0x1c1,0x148,0x16e)+_0x5339a4(0x94,0x11f,0x128,0x11b,0x118)+_0x5339a4(0x14b,0x1b2,0x1ab,0x27d,0x22b)+_0x5339a4(0x11d,0xfd,0xd7,0x1f,-0x2d)+_0x5a2b18(0x343,0x40e,0x415,0x434,0x303)+_0x3d8661(0x2e1,0x437,0x318,0x260,0x347)+_0x36f821(0x273,0x1ef,0x18f,0x326,0x20d)));setCasino(from,sender[_0x36f821(-0x3b,-0xac,-0x81,-0x16b,-0xae)]('@')[-0x1*-0x148a+-0x2d*0xe+-0x59*0x34],mentioned[-0x25bf*0x1+-0x1f1*0x1+0xa*0x3f8][_0x285932(0x555,0x43d,0x46b,0x434,0x540)]('@')[-0xda0+0x7*0x2f2+-0xa*0xb3],Number(args[0x142b+0x202a+-0x11d*0x2f]),casino),gameAdd(sender,glimit);var starGame=_0x5a2b18(0x238,0x4aa,0x373,0x22c,0x364)+_0x5a2b18(0x3f6,0x47e,0x40d,0x315,0x36c)+_0x3d8661(0x1c1,0x2b,0xec,0x51,0x123)+_0x5339a4(0x1d7,0x108,0x1d5,0x1f9,0x46)+_0x285932(0x3ae,0x5a5,0x46b,0x495,0x3fc)+_0x5a2b18(0x47d,0x36c,0x3f7,0x3d2,0x387)+sender[_0x36f821(0x16e,0x218,0x17a,0x28d,0x98)+'ce'](_0x5a2b18(0x413,0x347,0x445,0x307,0x4b3)+_0x5a2b18(0x3fd,0x557,0x515,0x509,0x53f)+_0x3d8661(0x23a,0x2a4,0x267,0x2a3,0x1bd),'')+(_0x285932(0x5c6,0x5bb,0x3ff,0x4cf,0x48c)+_0x5a2b18(0x40d,0x4b7,0x370,0x3f8,0x378)+'\x20')+args[0x5*0x51b+0x1e1+-0x1b67]+(_0x36f821(0xe2,0xa5,0x195,0x1e,0xf1)+_0x36f821(0x279,0x318,0x25e,0x1d2,0x129)+_0x5a2b18(0x65c,0x6d7,0x5d3,0x4dd,0x732)+_0x36f821(0xb7,0x118,0x82,0x90,-0xd)+'\x20')+parseInt(args[-0x13c7+-0x148d*-0x1+-0xc4])+(_0x3d8661(0x2be,0x1b1,0x23c,0x145,0x21e)+_0x3d8661(0x285,0x2a,0x146,0x1b9,-0x1)+_0x36f821(0x171,0x186,0x1e1,0x204,0x10c)+_0x36f821(0x27c,0x13c,0x30b,0x17e,0x34e)+_0x3d8661(0x419,0x2c6,0x309,0x1f7,0x40c)+_0x36f821(0x1f9,0xa5,0x252,0x2e1,0x278)+_0x285932(0x4ec,0x4cc,0x495,0x4be,0x536)+_0x3d8661(0x1ee,0x151,0x149,0x66,-0x10)+_0x285932(0x49c,0x4f1,0x5d7,0x5b2,0x56a)+_0x5339a4(0xbe,0x187,0x28e,0x201,0x107)+_0x5a2b18(0x55e,0x4bc,0x4fc,0x612,0x3bb)+_0x5a2b18(0x68f,0x711,0x5f4,0x68b,0x55f)+_0x285932(0x5a1,0x45c,0x416,0x560,0x57f)+_0x3d8661(0x1ee,0x124,0x153,0xf6,0x12e)+_0x5a2b18(0x5d4,0x4a8,0x5dd,0x4ce,0x50b)+_0x5a2b18(0x35a,0x3fc,0x436,0x3db,0x56f)+_0x285932(0x6aa,0x5fe,0x75e,0x63f,0x53a)+_0x3d8661(0x294,0x242,0x218,0x2dc,0x100)+_0x5a2b18(0x4a3,0x52e,0x3ed,0x510,0x4c7)+_0x5339a4(0x25f,0x1f3,0x105,0x2fd,0x1e9)+_0x36f821(0xe4,0x196,0xc5,0x1a7,0x47)+_0x3d8661(0x276,0x22e,0x2a9,0x2b1,0x3c7)+_0x285932(0x5da,0x732,0x6ca,0x6c6,0x742)+_0x3d8661(0xc4,0x131,0xfe,0x16e,0x249)+_0x5a2b18(0x521,0x2ff,0x3c7,0x4a3,0x4bc)+_0x36f821(0x20a,0x29f,0x201,0x1d2,0x1dd)+_0x5a2b18(0x4ac,0x606,0x5bb,0x4d5,0x4f1)),_0x40ae35={};_0x40ae35[_0x5a2b18(0x56e,0x637,0x567,0x6ba,0x52c)+'d']=msg,conn[_0x5339a4(0x1e6,0x1fa,0x151,0x1b5,0x227)+_0x36f821(0x79,0x117,0x8c,-0x84,0x147)+'e'](from,{'text':starGame,'mentions':[sender,args[-0xf*-0x27d+-0x1*0x1ea1+-0x6b1][_0x36f821(0x16e,0x247,0x1ee,0x138,0xce)+'ce']('@','')+(_0x5a2b18(0x362,0x2e7,0x445,0x412,0x306)+_0x3d8661(0x1e9,0x3c4,0x285,0x224,0x1ba)+_0x5a2b18(0x550,0x495,0x4f7,0x51b,0x601))]},_0x40ae35);break;case prefix+(_0x285932(0x52f,0x3a4,0x5e1,0x4e6,0x3fb)+_0x3d8661(0x2c3,0x81,0x17f,0x1f,0x247)):if(isPlayCasino(from,casino)){var csn=sesiCasino(from,casino);if(csn['Z'][_0x5a2b18(0x25e,0x2b1,0x35a,0x3d6,0x326)+_0x285932(0x599,0x49e,0x55b,0x4c4,0x528)](sender))clearTimeout(csn[_0x5339a4(-0x18f,-0x2e,0xd5,0x1a,-0x10c)+'ed']),deleteCasino(from,casino),reply(_0x36f821(0x1b2,0x242,0x281,0xd1,0x206)+_0x5339a4(0x196,0x130,0x58,0xe7,0x151)+_0x36f821(0x4a,-0x75,-0x59,0x193,0x45)+_0x3d8661(0x217,0x1f4,0x292,0x235,0x31e)+_0x36f821(0x1ef,0x304,0x275,0x9a,0x240)+_0x3d8661(0x362,0x2c7,0x20b,0xcb,0x2c9));else{if(csn['Y'][_0x36f821(-0x1d,-0x126,0x9,-0xe0,-0x89)+_0x3d8661(0x6f,0x28,0x13c,0x54,0x83)](sender))clearTimeout(csn[_0x5339a4(0xe3,-0x2e,0x22,-0x67,0xe7)+'ed']),deleteCasino(from,casino),reply(_0x5a2b18(0x58f,0x51e,0x529,0x495,0x66c)+_0x5339a4(0x30,0x130,0x75,0x22f,0x250)+_0x3d8661(0xa9,0x209,0x131,0x1c5,0x23)+_0x3d8661(0x193,0x171,0x292,0x3a9,0x263)+_0x5339a4(0x2de,0x1e6,0x303,0x1e0,0x1d2)+_0x36f821(0x124,0x13c,0x41,0x27,0x206));else{if(isGroupAdmins)clearTimeout(csn[_0x285932(0x432,0x523,0x4b5,0x44a,0x317)+'ed']),deleteCasino(from,casino),reply(_0x5a2b18(0x458,0x60f,0x529,0x45c,0x599)+_0x5a2b18(0x3a6,0x4b4,0x4b0,0x611,0x45d)+_0x285932(0x3f5,0x3b4,0x579,0x4b9,0x394)+_0x3d8661(0x15f,0x279,0x292,0x2e7,0x23d)+_0x285932(0x5f8,0x63c,0x4fe,0x65e,0x53b)+_0x285932(0x6c7,0x554,0x542,0x593,0x52b));else isOwner?(clearTimeout(csn[_0x285932(0x414,0x36d,0x326,0x44a,0x357)+'ed']),deleteCasino(from,casino),reply(_0x3d8661(0x3f0,0x3a5,0x299,0x171,0x3c3)+_0x3d8661(0x173,0x21a,0x220,0x22d,0xfa)+_0x36f821(0x4a,-0x36,0x46,0x17,0x93)+_0x3d8661(0xc1,0x1c1,0xb7,0x9f,0x14f)+_0x36f821(0x63,-0x6b,0x1b1,0x32,0x183)+_0x5339a4(0x0,0x8f,0x100,0x1dc,0xbe))):reply(_0x5a2b18(0x223,0x22b,0x35d,0x2d2,0x35f)+_0x36f821(0x11d,0x127,0x1ec,0xbf,0x2b)+_0x36f821(0x275,0x35e,0x32c,0x37b,0x3b6)+_0x5339a4(0xa4,0x192,0x1ca,0x18f,0x147)+_0x3d8661(0x13b,0x117,0x142,0x100,0x204)+_0x5339a4(0xbf,0x157,0x94,0x1d6,0x236)+_0x5339a4(0x276,0x1c9,0x88,0x93,0x27a)+_0x5a2b18(0x393,0x409,0x411,0x4b6,0x2b8)+_0x285932(0x547,0x5a8,0x482,0x492,0x425)+_0x36f821(0xbe,-0x8e,0x78,0xa8,0x184)+_0x5339a4(-0x58,0x64,0xd6,0x76,0xe3)+_0x3d8661(0x35f,0x20d,0x2cc,0x234,0x1f9));}}}else reply(_0x3d8661(0x20f,0x2c1,0x216,0x20b,0x1db)+_0x5339a4(0x198,0x25f,0x3b7,0x31e,0x2e1)+_0x3d8661(0x8b,0x2c3,0x1e9,0x243,0x94)+_0x36f821(0xaf,-0xe,-0x2d,0x49,0x51)+_0x3d8661(0xe6,-0xa,0xcf,0x1e9,-0xe)+_0x36f821(0x157,0x2b,0x202,0x18a,0x9c)+'g');break;case prefix+_0x285932(0x6c8,0x7a6,0x72e,0x653,0x5b3):if(isGame(sender,isOwner,gcount,glimit))return reply(_0x285932(0x705,0x46c,0x4d5,0x5cd,0x632)+_0x36f821(0x15b,0xd9,0x78,0x11b,0x173)+_0x5339a4(0x2,0x4b,0x80,0xaa,-0x5c)+_0x285932(0x5a4,0x522,0x3e4,0x473,0x45c)+_0x5339a4(0xf5,0x49,0xf1,0xc6,0x161)+'is');if(args[_0x5339a4(0x229,0x101,0xc7,0x6f,0x253)+'h']<0x1b02+0x4a7*0x4+-0x2d9c)return reply(_0x36f821(0x11f,0x1a2,-0x12,-0x28,0x117)+_0x3d8661(0x201,0x2b0,0x17e,0x275,0x2b2)+_0x3d8661(0x404,0x42a,0x365,0x367,0x275)+_0x5339a4(-0xc1,0x6,-0x102,0xa1,-0x43)+_0x5339a4(0x278,0x144,0xa4,0xe1,0xd)+_0x5339a4(0x2bf,0x1b3,0x221,0x2d7,0x1ec)+_0x5a2b18(0x60a,0x5e8,0x5d7,0x608,0x5ca)+':\x20'+command+_0x36f821(0x206,0x254,0xe1,0x15b,0x2a5));if(q<-0x1*-0x1250+0xf73+-0x21be)return reply(_0x5339a4(0x15a,0x6f,-0x67,0x52,0x1bb)+_0x285932(0x4ce,0x66c,0x452,0x55d,0x538)+_0x36f821(0x14d,0x1b8,0x5,0x253,0x9f)+'ce');if(q>-0x1d48+0x32a+0x3d*0x7e)return reply(_0x36f821(0x210,0x1e2,0xbe,0x20e,0x104)+_0x36f821(0xb6,0x5a,-0x3d,-0x5e,0x99)+_0x36f821(0x81,0x25,0x87,0x83,0x51)+_0x36f821(0x1fe,0x10f,0x287,0x1bb,0x331)+'e');if(isNaN(q))return reply(_0x285932(0x4f2,0x4e3,0x426,0x469,0x4f4)+_0x36f821(0x12d,0x267,0x1f6,0xa5,0x21b)+_0x3d8661(0x2a1,0x6,0x165,0x7c,0x191)+_0x5339a4(0x12f,0x1ec,0x12f,0x1b5,0x223)+_0x285932(0x4de,0x67d,0x514,0x589,0x569)+'a!');args[0x833+-0x130d+0xadb][_0x36f821(0x16e,0x217,0xd1,0x22b,0x15d)+'ce'](/[^\w\s\-]+/,'');var anu=getBalance(sender,balance);if(anu<q||anu==_0x36f821(0xd,-0x39,-0x47,-0x39,0x103)+_0x5339a4(0x35,0x99,0x89,-0x33,-0x8b))return reply(_0x285932(0x3bf,0x410,0x5a2,0x491,0x532)+_0x5a2b18(0x52c,0x4d5,0x4f9,0x642,0x50d)+_0x5a2b18(0x547,0x5b4,0x5b6,0x46e,0x4e4)+_0x5339a4(0x31f,0x1ca,0x95,0x2fb,0x23b)+_0x5a2b18(0x546,0x50d,0x555,0x5a0,0x590)+_0x285932(0x5e8,0x584,0x49c,0x57a,0x472)+_0x5a2b18(0x498,0x42a,0x414,0x41e,0x4ed)+_0x3d8661(0x3a6,0x1d9,0x2e5,0x2b0,0x206)+_0x5a2b18(0x4bf,0x40e,0x559,0x6a9,0x583)+_0x5a2b18(0x4d6,0x4af,0x501,0x531,0x501)+_0x285932(0x549,0x5c3,0x5a9,0x512,0x560)+_0x5a2b18(0x304,0x4da,0x394,0x2a2,0x29b)+_0x5a2b18(0x625,0x569,0x5ad,0x696,0x5c8)+_0x5339a4(0x10c,-0x40,0xb8,-0x190,-0x7e)+_0x36f821(0x9e,0x19a,0x1e2,-0x3a,0xd)+_0x285932(0x4af,0x724,0x546,0x5e3,0x662)+_0x3d8661(0x18c,0x3a6,0x288,0x391,0x3e8)+'\x20$'+anu);var tambah=Number(q)+Number(q),angka1=await randomNomor(-0x81f+-0x9d7+0x11fe),angka2=await randomNomor(-0x1028+-0x1d27+0x2d59);if(angka1>angka2)addBalance(sender,nebal(tambah),balance),reply(_0x36f821(0x197,0x270,0x207,0x216,0x2e6)+_0x36f821(0x213,0xb7,0x34c,0x17a,0x1bc)+_0x5339a4(0x10e,0x10c,0x65,0x1e8,0xde)+_0x36f821(0x9,0xe0,0xd8,-0x125,0x77)+_0x36f821(0x1b8,0x13c,0xce,0x1bb,0x1b1)+q+(_0x3d8661(0x19d,0x219,0x2d5,0x23e,0x20c)+_0x3d8661(0x30d,0x485,0x338,0x36d,0x300)+_0x36f821(0x23d,0x2e4,0x289,0x12b,0x237)+_0x36f821(0x20c,0x26c,0x228,0xc4,0x15f)+_0x5a2b18(0x527,0x503,0x517,0x53c,0x4ea)+_0x5339a4(-0x18,0xf4,0x79,0x116,0x1ea)+_0x36f821(0x188,0x139,0xee,0x39,0xd4)+_0x5a2b18(0x5dd,0x4f9,0x5b5,0x70a,0x620))+tambah+(_0x285932(0x761,0x624,0x6e3,0x65d,0x69d)+_0x36f821(-0x38,-0x99,-0xc2,-0x15f,-0x105)+_0x285932(0x4d8,0x560,0x6d6,0x5de,0x4ff))),gameAdd(sender,glimit);else angka1<angka2&&(kurangBalance(sender,nebal(q),balance),reply(_0x36f821(0x197,0xc8,0x27e,0x149,0x2e8)+_0x285932(0x701,0x7e0,0x770,0x682,0x5f6)+_0x285932(0x4a0,0x5d9,0x467,0x584,0x6b9)+_0x3d8661(-0x34,0x202,0xf0,0x225,0xd)+_0x3d8661(0x225,0x321,0x29f,0x2ad,0x336)+q+(_0x3d8661(0x241,0x255,0x2d5,0x31a,0x233)+_0x5339a4(0x2e8,0x248,0x1f8,0x19b,0x17f)+_0x36f821(0x18f,0x17a,0x34,0x1b2,0x23f)+_0x285932(0x71e,0x56d,0x5f9,0x5f6,0x505)+_0x5a2b18(0x5d0,0x6db,0x5c1,0x6fd,0x484)+_0x285932(0x680,0x54a,0x4b7,0x55c,0x495)+_0x36f821(-0x22,0x11b,-0x165,0xae,-0xce)+_0x36f821(0x19a,0xfe,0x143,0x1d9,0x81))+q+(_0x3d8661(0x3ba,0x293,0x2d5,0x35d,0x41d)+_0x285932(0x3ed,0x445,0x557,0x437,0x4ef)+_0x36f821(0x19,-0x3e,0x134,0xc2,-0x104))),gameAdd(sender,glimit));break;}
	} catch (err) {
		console.log(color('[ERROR]', 'red'), err)
	}
}
